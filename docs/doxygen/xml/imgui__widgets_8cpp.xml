<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imgui__widgets_8cpp" kind="file" language="C++">
    <compoundname>imgui_widgets.cpp</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes refid="imgui__internal_8h" local="yes">imgui_internal.h</includes>
    <includes local="no">ctype.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes refid="imstb__textedit_8h" local="yes">imstb_textedit.h</includes>
    <incdepgraph>
      <node id="16">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h_source"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_internal.h</label>
        <link refid="imgui__internal_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp</label>
        <link refid="imgui__widgets_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>imstb_textedit.h</label>
        <link refid="imstb__textedit_8h_source"/>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="15">
        <label>ctype.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="13">
        <label>limits.h</label>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="17">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_im_gui_plot_array_getter_data" prot="public">ImGuiPlotArrayGetterData</innerclass>
    <innerclass refid="struct_im_gui_tab_bar_section" prot="public">ImGuiTabBarSection</innerclass>
    <innernamespace refid="namespace_im_stb">ImStb</innernamespace>
    <innernamespace refid="namespace_im_gui">ImGui</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="imgui__widgets_8cpp_1adf4d73301961430d50d7edd96f92ce38" prot="public" static="no">
        <name>IMGUI_DEFINE_MATH_OPERATORS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="39" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1aee9a4cbd23af66a75c6d41bad2e393d5" prot="public" static="no">
        <name>STB_TEXTEDIT_MOVEWORDLEFT</name>
        <initializer>STB_TEXTEDIT_MOVEWORDLEFT_IMPL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3706" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3706" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a578438ad23cd7446c7930de4738cee37" prot="public" static="no">
        <name>STB_TEXTEDIT_MOVEWORDRIGHT</name>
        <initializer>STB_TEXTEDIT_MOVEWORDRIGHT_WIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3711" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1ab78e75643116b67f27faa253997d6bf4" prot="public" static="no">
        <name>STB_TEXTEDIT_K_LEFT</name>
        <initializer>0x200000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3763" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a2372bf34dbfe9ee393e5e893a59519ff" prot="public" static="no">
        <name>STB_TEXTEDIT_K_RIGHT</name>
        <initializer>0x200001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3764" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a579019adb9b5fbb8432121dc10d59755" prot="public" static="no">
        <name>STB_TEXTEDIT_K_UP</name>
        <initializer>0x200002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3765" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a1b0a25c8debb2e6b33d5b9678ff31eb6" prot="public" static="no">
        <name>STB_TEXTEDIT_K_DOWN</name>
        <initializer>0x200003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3766" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1ae5c188433685fd5694d9323078e7faa4" prot="public" static="no">
        <name>STB_TEXTEDIT_K_LINESTART</name>
        <initializer>0x200004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3767" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a86649bcd5a713ef6ebc40271b8d33448" prot="public" static="no">
        <name>STB_TEXTEDIT_K_LINEEND</name>
        <initializer>0x200005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3768" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3768" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1adb6231fb52ce1b5fe340d158db4fa113" prot="public" static="no">
        <name>STB_TEXTEDIT_K_TEXTSTART</name>
        <initializer>0x200006</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3769" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a74b070e036f6ac29eb876a94cb856600" prot="public" static="no">
        <name>STB_TEXTEDIT_K_TEXTEND</name>
        <initializer>0x200007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3770" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a1e7e825b3df67f64a15b84c548e51c26" prot="public" static="no">
        <name>STB_TEXTEDIT_K_DELETE</name>
        <initializer>0x200008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3771" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a436a147e85256c7a3e2fee4a69e3aa72" prot="public" static="no">
        <name>STB_TEXTEDIT_K_BACKSPACE</name>
        <initializer>0x200009</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3772" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3772" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1aabfc2cec24f396fb94d03d9f103a910e" prot="public" static="no">
        <name>STB_TEXTEDIT_K_UNDO</name>
        <initializer>0x20000A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3773" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a349b079acfb7872afca79e1db09c5d6d" prot="public" static="no">
        <name>STB_TEXTEDIT_K_REDO</name>
        <initializer>0x20000B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3774" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1acbb30e32121ef025272892af98f2ac58" prot="public" static="no">
        <name>STB_TEXTEDIT_K_WORDLEFT</name>
        <initializer>0x20000C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3775" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a4ac168018b20e53285d76c46aa24a122" prot="public" static="no">
        <name>STB_TEXTEDIT_K_WORDRIGHT</name>
        <initializer>0x20000D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3776" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1ac4c3f430bf4d3264b9555e8fdf0fdef9" prot="public" static="no">
        <name>STB_TEXTEDIT_K_PGUP</name>
        <initializer>0x20000E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3777" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1aff21d9af1b439f88b59765b52de1df51" prot="public" static="no">
        <name>STB_TEXTEDIT_K_PGDOWN</name>
        <initializer>0x20000F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3778" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1a295377d91a81714e475c3675142944aa" prot="public" static="no">
        <name>STB_TEXTEDIT_K_SHIFT</name>
        <initializer>0x400000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3779" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__widgets_8cpp_1ade8f1a617b962d4405a2492cc3ed0468" prot="public" static="no">
        <name>STB_TEXTEDIT_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3781" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3781" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a6146d78f94a9da0cf92020500693ef2c" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float DRAGDROP_HOLD_TO_OPEN_TIMER</definition>
        <argsstring></argsstring>
        <name>DRAGDROP_HOLD_TO_OPEN_TIMER</name>
        <initializer>= 0.70f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="92" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a4e2b30a2cf82f491a712ba37c2bf3455" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float DRAG_MOUSE_THRESHOLD_FACTOR</definition>
        <argsstring></argsstring>
        <name>DRAG_MOUSE_THRESHOLD_FACTOR</name>
        <initializer>= 0.50f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="93" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1aa431e20c88d9b014fc4afb59523490b1" prot="public" static="yes" mutable="no">
        <type>const signed char</type>
        <definition>const signed char IM_S8_MIN</definition>
        <argsstring></argsstring>
        <name>IM_S8_MIN</name>
        <initializer>= -128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="96" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1ac6ee000e9a50cc1cd4981e42343bc9f2" prot="public" static="yes" mutable="no">
        <type>const signed char</type>
        <definition>const signed char IM_S8_MAX</definition>
        <argsstring></argsstring>
        <name>IM_S8_MAX</name>
        <initializer>= 127</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="97" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a391f5186e44833b2f1f368c722498982" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char IM_U8_MIN</definition>
        <argsstring></argsstring>
        <name>IM_U8_MIN</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="98" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1acffcd64b4f14cc09b7b1339ce67a7563" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char IM_U8_MAX</definition>
        <argsstring></argsstring>
        <name>IM_U8_MAX</name>
        <initializer>= 0xFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="99" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a7c46de92d34867711c1a57ff04150326" prot="public" static="yes" mutable="no">
        <type>const signed short</type>
        <definition>const signed short IM_S16_MIN</definition>
        <argsstring></argsstring>
        <name>IM_S16_MIN</name>
        <initializer>= -32768</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="100" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1ab1ace264ddcd0f6adf4b93be01e650fe" prot="public" static="yes" mutable="no">
        <type>const signed short</type>
        <definition>const signed short IM_S16_MAX</definition>
        <argsstring></argsstring>
        <name>IM_S16_MAX</name>
        <initializer>= 32767</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="101" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a068cf7ddf36d342bd232c5ccf9b73242" prot="public" static="yes" mutable="no">
        <type>const unsigned short</type>
        <definition>const unsigned short IM_U16_MIN</definition>
        <argsstring></argsstring>
        <name>IM_U16_MIN</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="102" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1acd4c506580a6e7cc632c4fa949f61b35" prot="public" static="yes" mutable="no">
        <type>const unsigned short</type>
        <definition>const unsigned short IM_U16_MAX</definition>
        <argsstring></argsstring>
        <name>IM_U16_MAX</name>
        <initializer>= 0xFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="103" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1ab23518380eb2c1ecdbb16c6be63da591" prot="public" static="yes" mutable="no">
        <type>const ImS32</type>
        <definition>const ImS32 IM_S32_MIN</definition>
        <argsstring></argsstring>
        <name>IM_S32_MIN</name>
        <initializer>= INT_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="104" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1ab68bb13a2a0e7423f4720aef01e7c0a7" prot="public" static="yes" mutable="no">
        <type>const ImS32</type>
        <definition>const ImS32 IM_S32_MAX</definition>
        <argsstring></argsstring>
        <name>IM_S32_MAX</name>
        <initializer>= INT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="105" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a4f15972fff9fd018c8355d16aa9814e5" prot="public" static="yes" mutable="no">
        <type>const ImU32</type>
        <definition>const ImU32 IM_U32_MIN</definition>
        <argsstring></argsstring>
        <name>IM_U32_MIN</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="106" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1ae2a1dbde6be4172620d31e321d2e459f" prot="public" static="yes" mutable="no">
        <type>const ImU32</type>
        <definition>const ImU32 IM_U32_MAX</definition>
        <argsstring></argsstring>
        <name>IM_U32_MAX</name>
        <initializer>= UINT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="107" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a08bb8d1b3c1d794ddb447d5fcf70c173" prot="public" static="yes" mutable="no">
        <type>const ImS64</type>
        <definition>const ImS64 IM_S64_MIN</definition>
        <argsstring></argsstring>
        <name>IM_S64_MIN</name>
        <initializer>= -9223372036854775807LL - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="112" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a7509a34f2f2b1f2e1040105d67281072" prot="public" static="yes" mutable="no">
        <type>const ImS64</type>
        <definition>const ImS64 IM_S64_MAX</definition>
        <argsstring></argsstring>
        <name>IM_S64_MAX</name>
        <initializer>= 9223372036854775807LL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="113" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a747e2cea3d296a14a0e79040d35863b5" prot="public" static="yes" mutable="no">
        <type>const ImU64</type>
        <definition>const ImU64 IM_U64_MIN</definition>
        <argsstring></argsstring>
        <name>IM_U64_MIN</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="115" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a1df4f706900ddcd0caf9cae679c3ccbf" prot="public" static="yes" mutable="no">
        <type>const ImU64</type>
        <definition>const ImU64 IM_U64_MAX</definition>
        <argsstring></argsstring>
        <name>IM_U64_MAX</name>
        <initializer>= (2ULL * 9223372036854775807LL + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="119" column="29" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__widgets_8cpp_1a39c26e8d64b2991841314baacb3fbfee" prot="public" static="yes" mutable="no">
        <type>const <ref refid="struct_im_gui_data_type_info" kindref="compound">ImGuiDataTypeInfo</ref></type>
        <definition>const ImGuiDataTypeInfo GDataTypeInfo[]</definition>
        <argsstring>[]</argsstring>
        <name>GDataTypeInfo</name>
        <initializer>=
{
    { sizeof(char),             &quot;S8&quot;,   &quot;%d&quot;,   &quot;%d&quot;    },  
    { sizeof(unsigned char),    &quot;U8&quot;,   &quot;%u&quot;,   &quot;%u&quot;    },
    { sizeof(short),            &quot;S16&quot;,  &quot;%d&quot;,   &quot;%d&quot;    },  
    { sizeof(unsigned short),   &quot;U16&quot;,  &quot;%u&quot;,   &quot;%u&quot;    },
    { sizeof(int),              &quot;S32&quot;,  &quot;%d&quot;,   &quot;%d&quot;    },  
    { sizeof(unsigned int),     &quot;U32&quot;,  &quot;%u&quot;,   &quot;%u&quot;    },




    { sizeof(ImS64),            &quot;S64&quot;,  &quot;%lld&quot;, &quot;%lld&quot;  },  
    { sizeof(ImU64),            &quot;U64&quot;,  &quot;%llu&quot;, &quot;%llu&quot;  },

    { sizeof(float),            &quot;float&quot;, &quot;%.3f&quot;,&quot;%f&quot;    },  
    { sizeof(double),           &quot;double&quot;,&quot;%f&quot;,  &quot;%lf&quot;   },  
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="1878" column="32" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="1878" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgui__widgets_8cpp_1af118a85bd128f357d48dfc2719a76bdf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool InputTextFilterCharacter</definition>
        <argsstring>(unsigned int *p_char, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void *user_data, ImGuiInputSource input_source)</argsstring>
        <name>InputTextFilterCharacter</name>
        <param>
          <type>unsigned int *</type>
          <declname>p_char</declname>
        </param>
        <param>
          <type>ImGuiInputTextFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>ImGuiInputTextCallback</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type>ImGuiInputSource</type>
          <declname>input_source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3869" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3869" bodyend="3955" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" declline="127" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a6b80fbdb51d7eba0d61d2ce186ef79cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int InputTextCalcTextLenAndLineCount</definition>
        <argsstring>(const char *text_begin, const char **out_text_end)</argsstring>
        <name>InputTextCalcTextLenAndLineCount</name>
        <param>
          <type>const char *</type>
          <declname>text_begin</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out_text_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3619" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3619" bodyend="3631" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" declline="128" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1ad795bc11bc530c78739c89d68b0390af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>static ImVec2 InputTextCalcTextSizeW</definition>
        <argsstring>(const ImWchar *text_begin, const ImWchar *text_end, const ImWchar **remaining=NULL, ImVec2 *out_offset=NULL, bool stop_on_new_line=false)</argsstring>
        <name>InputTextCalcTextSizeW</name>
        <param>
          <type>const ImWchar *</type>
          <declname>text_begin</declname>
        </param>
        <param>
          <type>const ImWchar *</type>
          <declname>text_end</declname>
        </param>
        <param>
          <type>const ImWchar **</type>
          <declname>remaining</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> *</type>
          <declname>out_offset</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>stop_on_new_line</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3633" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3633" bodyend="3676" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" declline="129" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a56b30ec768c46c2abdd27ae66073c3e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int IMGUI_CDECL</type>
        <definition>static int IMGUI_CDECL ShrinkWidthItemComparer</definition>
        <argsstring>(const void *lhs, const void *rhs)</argsstring>
        <name>ShrinkWidthItemComparer</name>
        <param>
          <type>const void *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="1510" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="1510" bodyend="1517"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a295cb58de3f221694160b173529ca4d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float CalcMaxPopupHeightFromItemCount</definition>
        <argsstring>(int items_count)</argsstring>
        <name>CalcMaxPopupHeightFromItemCount</name>
        <param>
          <type>int</type>
          <declname>items_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="1571" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="1571" bodyend="1577"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1aae8cddf994f916d52739ed5a2ecc708d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Items_ArrayGetter</definition>
        <argsstring>(void *data, int idx, const char **out_text)</argsstring>
        <name>Items_ArrayGetter</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="1770" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="1770" bodyend="1776"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a06bfc74a928bbc6b5ec608a39162ba62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Items_SingleStringGetter</definition>
        <argsstring>(void *data, int idx, const char **out_text)</argsstring>
        <name>Items_SingleStringGetter</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="1779" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="1779" bodyend="1797"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a57469838509290dd5088d194ab1e7639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IM_STATIC_ASSERT</definition>
        <argsstring>(IM_ARRAYSIZE(GDataTypeInfo)==ImGuiDataType_COUNT)</argsstring>
        <name>IM_STATIC_ASSERT</name>
        <param>
          <type>IM_ARRAYSIZE(GDataTypeInfo)</type>
          <defval>=ImGuiDataType_COUNT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="1896" column="1" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" declline="1896" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1aaa45fcf0e80073ed8fdce027def69743" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * PatchFormatStringFloatToInt</definition>
        <argsstring>(const char *fmt)</argsstring>
        <name>PatchFormatStringFloatToInt</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="1901" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="1901" bodyend="1920"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a912c66d17cb3b09d5daac6e6b992a9a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>static int DataTypeCompareT</definition>
        <argsstring>(const T *lhs, const T *rhs)</argsstring>
        <name>DataTypeCompareT</name>
        <param>
          <type>const T *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="2105" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="2105" bodyend="2110"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1adb02051ad064ff8f14557c7483f2fd7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool DataTypeClampT</definition>
        <argsstring>(T *v, const T *v_min, const T *v_max)</argsstring>
        <name>DataTypeClampT</name>
        <param>
          <type>T *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const T *</type>
          <declname>v_min</declname>
        </param>
        <param>
          <type>const T *</type>
          <declname>v_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="2133" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="2133" bodyend="2139"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a756d29be52c948582e6f585d7ad24351" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float GetMinimumStepAtDecimalPrecision</definition>
        <argsstring>(int decimal_precision)</argsstring>
        <name>GetMinimumStepAtDecimalPrecision</name>
        <param>
          <type>int</type>
          <declname>decimal_precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="2161" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="2161" bodyend="2167"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a72aeada738a69b364a319f3ba3e20c21" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TYPE</type>
          </param>
        </templateparamlist>
        <type>const char *</type>
        <definition>static const char * ImAtoi</definition>
        <argsstring>(const char *src, TYPE *output)</argsstring>
        <name>ImAtoi</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>TYPE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="2170" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="2170" bodyend="2180"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1ac43476afb430950f52a36f099d25defb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SanitizeFormatString</definition>
        <argsstring>(const char *fmt, char *fmt_out, size_t fmt_out_size)</argsstring>
        <name>SanitizeFormatString</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>fmt_out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fmt_out_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="2185" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="2185" bodyend="2197"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a702ae9e2d8ad2e1c7b40811b31e94857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ImParseFormatFindStart</definition>
        <argsstring>(const char *fmt)</argsstring>
        <name>ImParseFormatFindStart</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3300" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3300" bodyend="3311"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1ae3cff0e3d91c185dcdb6956cfc64aeaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ImParseFormatFindEnd</definition>
        <argsstring>(const char *fmt)</argsstring>
        <name>ImParseFormatFindEnd</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3313" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3313" bodyend="3328"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1ae4285c8fb2c94efe37ded02e9732f619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ImParseFormatTrimDecorations</definition>
        <argsstring>(const char *fmt, char *buf, size_t buf_size)</argsstring>
        <name>ImParseFormatTrimDecorations</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3335" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3335" bodyend="3345"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a7df6480b83fda2eb807460516f8e7595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ImParseFormatPrecision</definition>
        <argsstring>(const char *fmt, int default_precision)</argsstring>
        <name>ImParseFormatPrecision</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="3349" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="3349" bodyend="3369"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a76a5fa9d62488d7c073dea45fb2208f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ColorEditRestoreHS</definition>
        <argsstring>(const float *col, float *H, float *S, float *V)</argsstring>
        <name>ColorEditRestoreHS</name>
        <param>
          <type>const float *</type>
          <declname>col</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>H</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>V</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="4868" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="4868" bodyend="4888"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1af3def68a1bdeda69e6af84fa7d6272cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void RenderArrowsForVerticalBar</definition>
        <argsstring>(ImDrawList *draw_list, ImVec2 pos, ImVec2 half_sz, float bar_w, float alpha)</argsstring>
        <name>RenderArrowsForVerticalBar</name>
        <param>
          <type><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref> *</type>
          <declname>draw_list</declname>
        </param>
        <param>
          <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
          <declname>half_sz</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bar_w</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="5137" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="5137" bodyend="5144"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1ad4576f39d1ccf89f3c230754c81b278a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float Plot_ArrayGetter</definition>
        <argsstring>(void *data, int idx)</argsstring>
        <name>Plot_ArrayGetter</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="6623" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="6623" bodyend="6628"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a323d394bcc27c05c96d74812a43aee1d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsRootOfOpenMenuSet</definition>
        <argsstring>()</argsstring>
        <name>IsRootOfOpenMenuSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="6894" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="6894" bodyend="6909"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a829f5b0bbeb65cdaada6dfc25c6d3770" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int TabItemGetSectionIdx</definition>
        <argsstring>(const ImGuiTabItem *tab)</argsstring>
        <name>TabItemGetSectionIdx</name>
        <param>
          <type>const <ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref> *</type>
          <declname>tab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="7244" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="7244" bodyend="7247"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a3a68672a788f293779faf265ff2c33a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int IMGUI_CDECL</type>
        <definition>static int IMGUI_CDECL TabItemComparerBySection</definition>
        <argsstring>(const void *lhs, const void *rhs)</argsstring>
        <name>TabItemComparerBySection</name>
        <param>
          <type>const void *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="7249" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="7249" bodyend="7258"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a3b9d5feb26a83507589fdb7887eb73cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int IMGUI_CDECL</type>
        <definition>static int IMGUI_CDECL TabItemComparerByBeginOrder</definition>
        <argsstring>(const void *lhs, const void *rhs)</argsstring>
        <name>TabItemComparerByBeginOrder</name>
        <param>
          <type>const void *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="7260" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="7260" bodyend="7265"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1a6ce8e0ae4534a882c54629a82548bd68" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref> *</type>
        <definition>static ImGuiTabBar * GetTabBarFromTabBarRef</definition>
        <argsstring>(const ImGuiPtrOrIndex &amp;ref)</argsstring>
        <name>GetTabBarFromTabBarRef</name>
        <param>
          <type>const <ref refid="struct_im_gui_ptr_or_index" kindref="compound">ImGuiPtrOrIndex</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="7267" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="7267" bodyend="7271"/>
      </memberdef>
      <memberdef kind="function" id="imgui__widgets_8cpp_1ab810e3e68b96839086a444b8ca55d42d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_gui_ptr_or_index" kindref="compound">ImGuiPtrOrIndex</ref></type>
        <definition>static ImGuiPtrOrIndex GetTabBarRefFromTabBar</definition>
        <argsstring>(ImGuiTabBar *tab_bar)</argsstring>
        <name>GetTabBarRefFromTabBar</name>
        <param>
          <type><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref> *</type>
          <declname>tab_bar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" line="7273" column="24" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp" bodystart="7273" bodyend="7279"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui,<sp/>v1.87<sp/>WIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(widgets<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">Index<sp/>of<sp/>this<sp/>file:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>[SECTION]<sp/>Forward<sp/>Declarations</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Text,<sp/>etc.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Main<sp/>(Button,<sp/>Image,<sp/>Checkbox,<sp/>RadioButton,<sp/>ProgressBar,<sp/>Bullet,<sp/>etc.)</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Low-level<sp/>Layout<sp/>helpers<sp/>(Spacing,<sp/>Dummy,<sp/>NewLine,<sp/>Separator,<sp/>etc.)</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>ComboBox</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>[SECTION]<sp/>Data<sp/>Type<sp/>and<sp/>Data<sp/>Formatting<sp/>Helpers</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>DragScalar,<sp/>DragFloat,<sp/>DragInt,<sp/>etc.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>SliderScalar,<sp/>SliderFloat,<sp/>SliderInt,<sp/>etc.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>InputScalar,<sp/>InputFloat,<sp/>InputInt,<sp/>etc.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>InputText,<sp/>InputTextMultiline</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>ColorEdit,<sp/>ColorPicker,<sp/>ColorButton,<sp/>etc.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>TreeNode,<sp/>CollapsingHeader,<sp/>etc.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Selectable</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>ListBox</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>PlotLines,<sp/>PlotHistogram</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Value<sp/>helpers</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>MenuItem,<sp/>BeginMenu,<sp/>EndMenu,<sp/>etc.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>BeginTabBar,<sp/>EndTabBar,<sp/>etc.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>BeginTabItem,<sp/>EndTabItem,<sp/>etc.</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Columns,<sp/>BeginColumns,<sp/>EndColumns,<sp/>etc.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight></codeline>
<codeline lineno="29"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(_CRT_SECURE_NO_WARNINGS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CRT_SECURE_NO_WARNINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DEFINE_MATH_OPERATORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_DEFINE_MATH_OPERATORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>toupper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&lt;=<sp/>1500<sp/></highlight><highlight class="comment">//<sp/>MSVC<sp/>2008<sp/>or<sp/>earlier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intptr_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intptr_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visual<sp/>Studio<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4127)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>condition<sp/>expression<sp/>is<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4996)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;This<sp/>function<sp/>or<sp/>variable<sp/>may<sp/>be<sp/>unsafe&apos;:<sp/>strcpy,<sp/>strdup,<sp/>sprintf,<sp/>vsnprintf,<sp/>sscanf,<sp/>fopen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1922<sp/></highlight><highlight class="comment">//<sp/>MSVC<sp/>2019<sp/>16.2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>5054)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>operator<sp/>&apos;|&apos;:<sp/>deprecated<sp/>between<sp/>enumerations<sp/>of<sp/>different<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>26451)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Static<sp/>Analyzer]<sp/>Arithmetic<sp/>overflow<sp/>:<sp/>Using<sp/>operator<sp/>&apos;xxx&apos;<sp/>on<sp/>a<sp/>4<sp/>byte<sp/>value<sp/>and<sp/>then<sp/>casting<sp/>the<sp/>result<sp/>to<sp/>a<sp/>8<sp/>byte<sp/>value.<sp/>Cast<sp/>the<sp/>value<sp/>to<sp/>the<sp/>wider<sp/>type<sp/>before<sp/>calling<sp/>operator<sp/>&apos;xxx&apos;<sp/>to<sp/>avoid<sp/>overflow(io.2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>26812)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Static<sp/>Analyzer]<sp/>The<sp/>enum<sp/>type<sp/>&apos;xxx&apos;<sp/>is<sp/>unscoped.<sp/>Prefer<sp/>&apos;enum<sp/>class&apos;<sp/>over<sp/>&apos;enum&apos;<sp/>(Enum.3).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clang/GCC<sp/>warnings<sp/>with<sp/>-Weverything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__has_warning(&quot;-Wunknown-warning-option&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunknown-warning-option&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>unknown<sp/>warning<sp/>group<sp/>&apos;xxx&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>all<sp/>warnings<sp/>are<sp/>known<sp/>by<sp/>all<sp/>Clang<sp/>versions<sp/>and<sp/>they<sp/>tend<sp/>to<sp/>be<sp/>rename-happy..<sp/>so<sp/>ignoring<sp/>warnings<sp/>triggers<sp/>new<sp/>warnings<sp/>on<sp/>some<sp/>configuration.<sp/>Great!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunknown-pragmas&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>unknown<sp/>warning<sp/>group<sp/>&apos;xxx&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wold-style-cast&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>use<sp/>of<sp/>old-style<sp/>cast<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>yes,<sp/>they<sp/>are<sp/>more<sp/>terse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wfloat-equal&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>comparing<sp/>floating<sp/>point<sp/>with<sp/>==<sp/>or<sp/>!=<sp/>is<sp/>unsafe<sp/>//<sp/>storing<sp/>and<sp/>comparing<sp/>against<sp/>same<sp/>constants<sp/>(typically<sp/>0.0f)<sp/>is<sp/>ok.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wformat-nonliteral&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>format<sp/>string<sp/>is<sp/>not<sp/>a<sp/>string<sp/>literal<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>passing<sp/>non-literal<sp/>to<sp/>vsnformat().<sp/>yes,<sp/>user<sp/>passing<sp/>incorrect<sp/>format<sp/>strings<sp/>can<sp/>crash<sp/>the<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wsign-conversion&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>implicit<sp/>conversion<sp/>changes<sp/>signedness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wzero-as-null-pointer-constant&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>zero<sp/>as<sp/>null<sp/>pointer<sp/>constant<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>some<sp/>standard<sp/>header<sp/>variations<sp/>use<sp/>#define<sp/>NULL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wdouble-promotion&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>implicit<sp/>conversion<sp/>from<sp/>&apos;float&apos;<sp/>to<sp/>&apos;double&apos;<sp/>when<sp/>passing<sp/>argument<sp/>to<sp/>function<sp/><sp/>//<sp/>using<sp/>printf()<sp/>is<sp/>a<sp/>misery<sp/>with<sp/>this<sp/>as<sp/>C++<sp/>va_arg<sp/>ellipsis<sp/>changes<sp/>float<sp/>to<sp/>double.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wenum-enum-conversion&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>bitwise<sp/>operation<sp/>between<sp/>different<sp/>enumeration<sp/>types<sp/>(&apos;XXXFlags_&apos;<sp/>and<sp/>&apos;XXXFlagsPrivate_&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wdeprecated-enum-enum-conversion&quot;</highlight><highlight class="comment">//<sp/>warning:<sp/>bitwise<sp/>operation<sp/>between<sp/>different<sp/>enumeration<sp/>types<sp/>(&apos;XXXFlags_&apos;<sp/>and<sp/>&apos;XXXFlagsPrivate_&apos;)<sp/>is<sp/>deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wimplicit-int-float-conversion&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>implicit<sp/>conversion<sp/>from<sp/>&apos;xxx&apos;<sp/>to<sp/>&apos;float&apos;<sp/>may<sp/>lose<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wpragmas&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>unknown<sp/>option<sp/>after<sp/>&apos;#pragma<sp/>GCC<sp/>diagnostic&apos;<sp/>kind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wformat-nonliteral&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>format<sp/>not<sp/>a<sp/>string<sp/>literal,<sp/>format<sp/>string<sp/>not<sp/>checked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wclass-memaccess&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[__GNUC__<sp/>&gt;=<sp/>8]<sp/>warning:<sp/>&apos;memset/memcpy&apos;<sp/>clearing/writing<sp/>an<sp/>object<sp/>of<sp/>type<sp/>&apos;xxxx&apos;<sp/>with<sp/>no<sp/>trivial<sp/>copy-assignment;<sp/>use<sp/>assignment<sp/>or<sp/>value-initialization<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Widgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DRAGDROP_HOLD_TO_OPEN_TIMER<sp/>=<sp/>0.70f;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>for<sp/>drag-hold<sp/>to<sp/>activate<sp/>items<sp/>accepting<sp/>the<sp/>ImGuiButtonFlags_PressedOnDragDropHold<sp/>button<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DRAG_MOUSE_THRESHOLD_FACTOR<sp/>=<sp/>0.50f;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multiplier<sp/>for<sp/>the<sp/>default<sp/>value<sp/>of<sp/>io.MouseDragThreshold<sp/>to<sp/>make<sp/>DragFloat/DragInt<sp/>react<sp/>faster<sp/>to<sp/>mouse<sp/>drags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Those<sp/>MIN/MAX<sp/>values<sp/>are<sp/>not<sp/>define<sp/>because<sp/>we<sp/>need<sp/>to<sp/>point<sp/>to<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>IM_S8_MIN<sp/><sp/>=<sp/>-128;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>IM_S8_MAX<sp/><sp/>=<sp/>127;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>IM_U8_MIN<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>IM_U8_MAX<sp/><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>IM_S16_MIN<sp/>=<sp/>-32768;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>IM_S16_MAX<sp/>=<sp/>32767;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>IM_U16_MIN<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>IM_U16_MAX<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_S32_MIN<sp/>=<sp/>INT_MIN;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(-2147483647<sp/>-<sp/>1),<sp/>(0x80000000);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_S32_MAX<sp/>=<sp/>INT_MAX;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(2147483647),<sp/>(0x7FFFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_U32_MIN<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_U32_MAX<sp/>=<sp/>UINT_MAX;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0xFFFFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LLONG_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_S64_MIN<sp/>=<sp/>LLONG_MIN;<sp/><sp/></highlight><highlight class="comment">//<sp/>(-9223372036854775807ll<sp/>-<sp/>1ll);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_S64_MAX<sp/>=<sp/>LLONG_MAX;<sp/><sp/></highlight><highlight class="comment">//<sp/>(9223372036854775807ll);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_S64_MIN<sp/>=<sp/>-9223372036854775807LL<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_S64_MAX<sp/>=<sp/>9223372036854775807LL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_U64_MIN<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ULLONG_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_U64_MAX<sp/>=<sp/>ULLONG_MAX;<sp/></highlight><highlight class="comment">//<sp/>(0xFFFFFFFFFFFFFFFFull);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_U64_MAX<sp/>=<sp/>(2ULL<sp/>*<sp/>9223372036854775807LL<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Forward<sp/>Declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>InputTextEx()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputTextFilterCharacter(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>p_char,<sp/>ImGuiInputTextFlags<sp/>flags,<sp/>ImGuiInputTextCallback<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data,<sp/>ImGuiInputSource<sp/>input_source);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputTextCalcTextLenAndLineCount(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>out_text_end);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputTextCalcTextSizeW(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>text_begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>text_end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar**<sp/>remaining<sp/>=<sp/>NULL,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>out_offset<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop_on_new_line<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Text,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TextEx()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TextUnformatted()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Text()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TextV()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TextColored()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TextColoredV()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TextDisabled()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TextDisabledV()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TextWrapped()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TextWrappedV()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>LabelText()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>LabelTextV()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BulletText()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BulletTextV()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TextEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end,<sp/>ImGuiTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accept<sp/>null<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text<sp/>==<sp/>text_end)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text_end<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_begin<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_end<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_end<sp/>=<sp/>text<sp/>+<sp/>strlen(text);<sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_pos(window-&gt;DC.CursorPos.x,<sp/>window-&gt;DC.CursorPos.y<sp/>+<sp/>window-&gt;DC.CurrLineTextBaseOffset);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wrap_pos_x<sp/>=<sp/>window-&gt;DC.TextWrapPos;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wrap_enabled<sp/>=<sp/>(wrap_pos_x<sp/>&gt;=<sp/>0.0f);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_end<sp/>-<sp/>text<sp/>&gt;<sp/>2000<sp/>&amp;&amp;<sp/>!wrap_enabled)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Long<sp/>text!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>manual<sp/>coarse<sp/>clipping<sp/>to<sp/>optimize<sp/>for<sp/>long<sp/>multi-line<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>From<sp/>this<sp/>point<sp/>we<sp/>will<sp/>only<sp/>compute<sp/>the<sp/>width<sp/>of<sp/>lines<sp/>that<sp/>are<sp/>visible.<sp/>Optimization<sp/>only<sp/>available<sp/>when<sp/>word-wrapping<sp/>is<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>also<sp/>don&apos;t<sp/>vertically<sp/>center<sp/>the<sp/>text<sp/>within<sp/>the<sp/>line<sp/>full<sp/>height,<sp/>which<sp/>is<sp/>unlikely<sp/>to<sp/>matter<sp/>because<sp/>we<sp/>are<sp/>likely<sp/>the<sp/>biggest<sp/>and<sp/>only<sp/>item<sp/>on<sp/>the<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>use<sp/>memchr(),<sp/>pay<sp/>attention<sp/>that<sp/>well<sp/>optimized<sp/>versions<sp/>of<sp/>those<sp/>str/mem<sp/>functions<sp/>are<sp/>much<sp/>faster<sp/>than<sp/>a<sp/>casually<sp/>written<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>line<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>line_height<sp/>=<sp/>GetTextLineHeight();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_size(0,<sp/>0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lines<sp/>to<sp/>skip<sp/>(can&apos;t<sp/>skip<sp/>when<sp/>logging<sp/>text)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>text_pos;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g.LogEnabled)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lines_skippable<sp/>=<sp/>(int)((window-&gt;ClipRect.Min.y<sp/>-<sp/>text_pos.y)<sp/>/<sp/>line_height);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lines_skippable<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lines_skipped<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line<sp/>&lt;<sp/>text_end<sp/>&amp;&amp;<sp/>lines_skipped<sp/>&lt;<sp/>lines_skippable)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>line_end<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)memchr(line,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>text_end<sp/>-<sp/>line);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!line_end)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_end<sp/>=<sp/>text_end;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiTextFlags_NoWidthForLargeClippedText)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.x<sp/>=<sp/>ImMax(text_size.x,<sp/>CalcTextSize(line,<sp/>line_end).x);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>line_end<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines_skipped++;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.y<sp/>+=<sp/>lines_skipped<sp/>*<sp/>line_height;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lines<sp/>to<sp/>render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line<sp/>&lt;<sp/>text_end)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>line_rect(pos,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(FLT_MAX,<sp/>line_height));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line<sp/>&lt;<sp/>text_end)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsClippedEx(line_rect,<sp/>0))</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>line_end<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)memchr(line,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>text_end<sp/>-<sp/>line);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!line_end)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_end<sp/>=<sp/>text_end;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.x<sp/>=<sp/>ImMax(text_size.x,<sp/>CalcTextSize(line,<sp/>line_end).x);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(pos,<sp/>line,<sp/>line_end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>line_end<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_rect.Min.y<sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_rect.Max.y<sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.y<sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>remaining<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lines_skipped<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line<sp/>&lt;<sp/>text_end)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>line_end<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)memchr(line,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>text_end<sp/>-<sp/>line);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!line_end)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_end<sp/>=<sp/>text_end;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiTextFlags_NoWidthForLargeClippedText)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.x<sp/>=<sp/>ImMax(text_size.x,<sp/>CalcTextSize(line,<sp/>line_end).x);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>line_end<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines_skipped++;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.y<sp/>+=<sp/>lines_skipped<sp/>*<sp/>line_height;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.y<sp/>=<sp/>(pos<sp/>-<sp/>text_pos).y;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(text_pos,<sp/>text_pos<sp/>+<sp/>text_size);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(text_size,<sp/>0.0f);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemAdd(bb,<sp/>0);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wrap_width<sp/>=<sp/>wrap_enabled<sp/>?<sp/>CalcWrapWidthForPos(window-&gt;DC.CursorPos,<sp/>wrap_pos_x)<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_size<sp/>=<sp/>CalcTextSize(text_begin,<sp/>text_end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>wrap_width);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(text_pos,<sp/>text_pos<sp/>+<sp/>text_size);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(text_size,<sp/>0.0f);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/>0))</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>(we<sp/>don&apos;t<sp/>hide<sp/>text<sp/>after<sp/>##<sp/>in<sp/>this<sp/>end-user<sp/>function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTextWrapped(bb.Min,<sp/>text_begin,<sp/>text_end,<sp/>wrap_width);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TextUnformatted(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>TextEx(text,<sp/>text_end,<sp/>ImGuiTextFlags_NoWidthForLargeClippedText);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Text(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>TextV(fmt,<sp/>args);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TextV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>Handle<sp/>the<sp/>%s<sp/>shortcut?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end<sp/>=<sp/>g.TempBuffer<sp/>+<sp/>ImFormatStringV(g.TempBuffer,<sp/>IM_ARRAYSIZE(g.TempBuffer),<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>TextEx(g.TempBuffer,<sp/>text_end,<sp/>ImGuiTextFlags_NoWidthForLargeClippedText);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TextColored(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>TextColoredV(col,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TextColoredV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>PushStyleColor(ImGuiCol_Text,<sp/>col);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[2]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(va_arg(args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*),<sp/>NULL,<sp/>ImGuiTextFlags_NoWidthForLargeClippedText);<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextV(fmt,<sp/>args);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>PopStyleColor();</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TextDisabled(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>TextDisabledV(fmt,<sp/>args);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TextDisabledV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>PushStyleColor(ImGuiCol_Text,<sp/>g.Style.Colors[ImGuiCol_TextDisabled]);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[2]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(va_arg(args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*),<sp/>NULL,<sp/>ImGuiTextFlags_NoWidthForLargeClippedText);<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextV(fmt,<sp/>args);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>PopStyleColor();</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TextWrapped(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>TextWrappedV(fmt,<sp/>args);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TextWrappedV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>need_backup<sp/>=<sp/>(g.CurrentWindow-&gt;DC.TextWrapPos<sp/>&lt;<sp/>0.0f);<sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>existing<sp/>wrap<sp/>position<sp/>if<sp/>one<sp/>is<sp/>already<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(need_backup)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushTextWrapPos(0.0f);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[2]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(va_arg(args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*),<sp/>NULL,<sp/>ImGuiTextFlags_NoWidthForLargeClippedText);<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextV(fmt,<sp/>args);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(need_backup)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopTextWrapPos();</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::LabelText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>LabelTextV(label,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>label+text<sp/>combo<sp/>aligned<sp/>to<sp/>other<sp/>label+value<sp/>widgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::LabelTextV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>CalcItemWidth();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value_text_begin<sp/>=<sp/>&amp;g.TempBuffer[0];</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value_text_end<sp/>=<sp/>value_text_begin<sp/>+<sp/>ImFormatStringV(g.TempBuffer,<sp/>IM_ARRAYSIZE(g.TempBuffer),<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>value_size<sp/>=<sp/>CalcTextSize(value_text_begin,<sp/>value_text_end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>value_bb(pos,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(w,<sp/>value_size.y<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>total_bb(pos,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(w<sp/>+<sp/>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>label_size.x<sp/>:<sp/>0.0f),<sp/>ImMax(value_size.y,<sp/>label_size.y)<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(total_bb,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(total_bb,<sp/>0))</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderTextClipped(value_bb.Min<sp/>+<sp/>style.FramePadding,<sp/>value_bb.Max,<sp/>value_text_begin,<sp/>value_text_end,<sp/>&amp;value_size,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>0.0f));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size.x<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(value_bb.Max.x<sp/>+<sp/>style.ItemInnerSpacing.x,<sp/>value_bb.Min.y<sp/>+<sp/>style.FramePadding.y),<sp/>label);</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::BulletText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>BulletTextV(fmt,<sp/>args);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>little<sp/>bullet<sp/>aligned<sp/>to<sp/>the<sp/>typical<sp/>tree<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::BulletTextV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_begin<sp/>=<sp/>g.TempBuffer;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end<sp/>=<sp/>text_begin<sp/>+<sp/>ImFormatStringV(g.TempBuffer,<sp/>IM_ARRAYSIZE(g.TempBuffer),<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(text_begin,<sp/>text_end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>total_size<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(g.FontSize<sp/>+<sp/>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>(label_size.x<sp/>+<sp/>style.FramePadding.x<sp/>*<sp/>2)<sp/>:<sp/>0.0f),<sp/>label_size.y);<sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>text<sp/>doesn&apos;t<sp/>add<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>pos.y<sp/>+=<sp/>window-&gt;DC.CurrLineTextBaseOffset;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(total_size,<sp/>0.0f);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(pos,<sp/>pos<sp/>+<sp/>total_size);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/>0))</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>text_col<sp/>=<sp/>GetColorU32(ImGuiCol_Text);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderBullet(window-&gt;DrawList,<sp/>bb.Min<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(style.FramePadding.x<sp/>+<sp/>g.FontSize<sp/>*<sp/>0.5f,<sp/>g.FontSize<sp/>*<sp/>0.5f),<sp/>text_col);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderText(bb.Min<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(g.FontSize<sp/>+<sp/>style.FramePadding.x<sp/>*<sp/>2,<sp/>0.0f),<sp/>text_begin,<sp/>text_end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ButtonBehavior()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Button()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SmallButton()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InvisibleButton()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ArrowButton()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>CloseButton()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>CollapseButton()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>GetWindowScrollbarID()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>GetWindowScrollbarRect()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Scrollbar()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ScrollbarEx()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Image()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ImageButton()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Checkbox()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>CheckboxFlagsT()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>CheckboxFlags()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>RadioButton()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ProgressBar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Bullet()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ButtonBehavior()<sp/>function<sp/>is<sp/>key<sp/>to<sp/>many<sp/>interactions<sp/>and<sp/>used<sp/>by<sp/>many/most<sp/>widgets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>handle<sp/>so<sp/>many<sp/>cases<sp/>(keyboard/gamepad<sp/>navigation,<sp/>drag<sp/>and<sp/>drop)<sp/>and<sp/>many<sp/>specific<sp/>behavior<sp/>(via<sp/>ImGuiButtonFlags_),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>code<sp/>is<sp/>a<sp/>little<sp/>complex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>far<sp/>the<sp/>most<sp/>common<sp/>path<sp/>is<sp/>interacting<sp/>with<sp/>the<sp/>Mouse<sp/>using<sp/>the<sp/>default<sp/>ImGuiButtonFlags_PressedOnClickRelease<sp/>button<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>series<sp/>of<sp/>events<sp/>below<sp/>and<sp/>the<sp/>corresponding<sp/>state<sp/>reported<sp/>by<sp/>dear<sp/>imgui:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>PressedOnClickRelease:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return-value<sp/><sp/>IsItemHovered()<sp/><sp/>IsItemActive()<sp/><sp/>IsItemActivated()<sp/><sp/>IsItemDeactivated()<sp/><sp/>IsItemClicked()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+0<sp/>(mouse<sp/>is<sp/>outside<sp/>bb)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+1<sp/>(mouse<sp/>moves<sp/>inside<sp/>bb)<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+2<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+3<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+4<sp/>(mouse<sp/>moves<sp/>outside<sp/>bb)<sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+5<sp/>(mouse<sp/>moves<sp/>inside<sp/>bb)<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+6<sp/>(mouse<sp/>button<sp/>is<sp/>released)<sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+7<sp/>(mouse<sp/>button<sp/>is<sp/>released)<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+8<sp/>(mouse<sp/>moves<sp/>outside<sp/>bb)<sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>PressedOnClick:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return-value<sp/><sp/>IsItemHovered()<sp/><sp/>IsItemActive()<sp/><sp/>IsItemActivated()<sp/><sp/>IsItemDeactivated()<sp/><sp/>IsItemClicked()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+2<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+3<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+6<sp/>(mouse<sp/>button<sp/>is<sp/>released)<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+7<sp/>(mouse<sp/>button<sp/>is<sp/>released)<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>PressedOnRelease:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return-value<sp/><sp/>IsItemHovered()<sp/><sp/>IsItemActive()<sp/><sp/>IsItemActivated()<sp/><sp/>IsItemDeactivated()<sp/><sp/>IsItemClicked()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+2<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+3<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+6<sp/>(mouse<sp/>button<sp/>is<sp/>released)<sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+7<sp/>(mouse<sp/>button<sp/>is<sp/>released)<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>PressedOnDoubleClick:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return-value<sp/><sp/>IsItemHovered()<sp/><sp/>IsItemActive()<sp/><sp/>IsItemActivated()<sp/><sp/>IsItemDeactivated()<sp/><sp/>IsItemClicked()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+0<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+1<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+2<sp/>(mouse<sp/>button<sp/>is<sp/>released)<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+3<sp/>(mouse<sp/>button<sp/>is<sp/>released)<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+4<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+5<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+6<sp/>(mouse<sp/>button<sp/>is<sp/>released)<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+7<sp/>(mouse<sp/>button<sp/>is<sp/>released)<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>some<sp/>combinations<sp/>are<sp/>supported,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>PressedOnDragDropHold<sp/>can<sp/>generally<sp/>be<sp/>associated<sp/>with<sp/>any<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>PressedOnDoubleClick<sp/>can<sp/>be<sp/>associated<sp/>by<sp/>PressedOnClickRelease/PressedOnRelease,<sp/>in<sp/>which<sp/>case<sp/>the<sp/>second<sp/>release<sp/>event<sp/>won&apos;t<sp/>be<sp/>reported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>behavior<sp/>of<sp/>the<sp/>return-value<sp/>changes<sp/>when<sp/>ImGuiButtonFlags_Repeat<sp/>is<sp/>set:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Repeat+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Repeat+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Repeat+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Repeat+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PressedOnClickRelease<sp/><sp/><sp/><sp/>PressedOnClick<sp/><sp/><sp/><sp/>PressedOnRelease<sp/><sp/><sp/><sp/>PressedOnDoubleClick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N+0<sp/>(mouse<sp/>button<sp/>is<sp/>down)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N<sp/>+<sp/>RepeatDelay<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Frame<sp/>N<sp/>+<sp/>RepeatDelay<sp/>+<sp/>RepeatRate*N<sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ButtonBehavior(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>out_hovered,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>out_held,<sp/>ImGuiButtonFlags<sp/>flags)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>only<sp/>reacts<sp/>to<sp/>left<sp/>mouse<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_MouseButtonMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiButtonFlags_MouseButtonDefault_;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>behavior<sp/>requires<sp/>click<sp/>+<sp/>release<sp/>inside<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_PressedOnMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnDefault_;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>backup_hovered_window<sp/>=<sp/>g.HoveredWindow;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flatten_hovered_children<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_FlattenChildren)<sp/>&amp;&amp;<sp/>g.HoveredWindow<sp/>&amp;&amp;<sp/>g.HoveredWindow-&gt;RootWindowDockTree<sp/>==<sp/>window-&gt;RootWindowDockTree;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(flatten_hovered_children)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.HoveredWindow<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_ENABLE_TEST_ENGINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>g.LastItemData.ID<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_ADD(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered<sp/>=<sp/>ItemHoverable(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drag<sp/>source<sp/>doesn&apos;t<sp/>report<sp/>as<sp/>hovered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered<sp/>&amp;&amp;<sp/>g.DragDropActive<sp/>&amp;&amp;<sp/>g.DragDropPayload.SourceId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!(g.DragDropSourceFlags<sp/>&amp;<sp/>ImGuiDragDropFlags_SourceNoDisableHover))</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hovered<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>mode<sp/>for<sp/>Drag<sp/>and<sp/>Drop<sp/>where<sp/>holding<sp/>button<sp/>pressed<sp/>for<sp/>a<sp/>long<sp/>time<sp/>while<sp/>dragging<sp/>another<sp/>item<sp/>triggers<sp/>the<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.DragDropActive<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_PressedOnDragDropHold)<sp/>&amp;&amp;<sp/>!(g.DragDropSourceFlags<sp/>&amp;<sp/>ImGuiDragDropFlags_SourceNoHoldToOpenOthers))</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsItemHovered(ImGuiHoveredFlags_AllowWhenBlockedByActiveItem))</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hovered<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetHoveredID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.HoveredIdTimer<sp/>-<sp/>g.IO.DeltaTime<sp/>&lt;=<sp/>DRAGDROP_HOLD_TO_OPEN_TIMER<sp/>&amp;&amp;<sp/>g.HoveredIdTimer<sp/>&gt;=<sp/>DRAGDROP_HOLD_TO_OPEN_TIMER)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.DragDropHoldJustPressedId<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusWindow(window);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flatten_hovered_children)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.HoveredWindow<sp/>=<sp/>backup_hovered_window;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AllowOverlap<sp/>mode<sp/>(rarely<sp/>used)<sp/>requires<sp/>previous<sp/>frame<sp/>HoveredId<sp/>to<sp/>be<sp/>null<sp/>or<sp/>to<sp/>match.<sp/>This<sp/>allows<sp/>using<sp/>patterns<sp/>where<sp/>a<sp/>later<sp/>submitted<sp/>widget<sp/>overlaps<sp/>a<sp/>previous<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_AllowItemOverlap)<sp/>&amp;&amp;<sp/>(g.HoveredIdPreviousFrame<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.HoveredIdPreviousFrame<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hovered<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mouse<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiButtonFlags_NoKeyModifiers)<sp/>||<sp/>(!g.IO.KeyCtrl<sp/>&amp;&amp;<sp/>!g.IO.KeyShift<sp/>&amp;&amp;<sp/>!g.IO.KeyAlt))</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Poll<sp/>buttons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mouse_button_clicked<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mouse_button_released<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_MouseButtonLeft)<sp/>&amp;&amp;<sp/>g.IO.MouseClicked[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>mouse_button_clicked<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_MouseButtonRight)<sp/>&amp;&amp;<sp/>g.IO.MouseClicked[1])<sp/><sp/><sp/>{<sp/>mouse_button_clicked<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_MouseButtonMiddle)<sp/>&amp;&amp;<sp/>g.IO.MouseClicked[2])<sp/><sp/>{<sp/>mouse_button_clicked<sp/>=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_MouseButtonLeft)<sp/>&amp;&amp;<sp/>g.IO.MouseReleased[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>mouse_button_released<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_MouseButtonRight)<sp/>&amp;&amp;<sp/>g.IO.MouseReleased[1])<sp/><sp/>{<sp/>mouse_button_released<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_MouseButtonMiddle)<sp/>&amp;&amp;<sp/>g.IO.MouseReleased[2])<sp/>{<sp/>mouse_button_released<sp/>=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mouse_button_clicked<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>g.ActiveId<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>(ImGuiButtonFlags_PressedOnClickRelease<sp/>|<sp/>ImGuiButtonFlags_PressedOnClickReleaseAnywhere))</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdMouseButton<sp/>=<sp/>mouse_button_clicked;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiButtonFlags_NoNavFocus))</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFocusID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusWindow(window);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_PressedOnClick)<sp/>||<sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_PressedOnDoubleClick)<sp/>&amp;&amp;<sp/>g.IO.MouseClickedCount[mouse_button_clicked]<sp/>==<sp/>2))</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_NoHoldingActiveId)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);<sp/></highlight><highlight class="comment">//<sp/>Hold<sp/>on<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiButtonFlags_NoNavFocus))</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFocusID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdMouseButton<sp/>=<sp/>mouse_button_clicked;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusWindow(window);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_PressedOnRelease)<sp/>&amp;&amp;<sp/>mouse_button_released<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Repeat<sp/>mode<sp/>trumps<sp/>on<sp/>release<sp/>behavior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_repeated_at_least_once<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_Repeat)<sp/>&amp;&amp;<sp/>g.IO.MouseDownDurationPrev[mouse_button_released]<sp/>&gt;=<sp/>g.IO.KeyRepeatDelay;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!has_repeated_at_least_once)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiButtonFlags_NoNavFocus))</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFocusID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;Repeat&apos;<sp/>mode<sp/>acts<sp/>when<sp/>held<sp/>regardless<sp/>of<sp/>_PressedOn<sp/>flags<sp/>(see<sp/>table<sp/>above).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relies<sp/>on<sp/>repeat<sp/>logic<sp/>of<sp/>IsMouseClicked()<sp/>but<sp/>we<sp/>may<sp/>as<sp/>well<sp/>do<sp/>it<sp/>ourselves<sp/>if<sp/>we<sp/>end<sp/>up<sp/>exposing<sp/>finer<sp/>RepeatDelay/RepeatRate<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_Repeat))</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.IO.MouseDownDuration[g.ActiveIdMouseButton]<sp/>&gt;<sp/>0.0f<sp/>&amp;&amp;<sp/>IsMouseClicked(g.ActiveIdMouseButton,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavDisableHighlight<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gamepad/Keyboard<sp/>navigation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>report<sp/>navigated<sp/>item<sp/>as<sp/>hovered<sp/>but<sp/>we<sp/>don&apos;t<sp/>set<sp/>g.HoveredId<sp/>to<sp/>not<sp/>interfere<sp/>with<sp/>mouse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!g.NavDisableHighlight<sp/>&amp;&amp;<sp/>g.NavDisableMouseHover<sp/>&amp;&amp;<sp/>(g.ActiveId<sp/>==<sp/>0<sp/>||<sp/>g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>||<sp/>g.ActiveId<sp/>==<sp/>window-&gt;MoveId))</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiButtonFlags_NoHoveredOnFocus))</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hovered<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavActivateDownId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nav_activated_by_code<sp/>=<sp/>(g.NavActivateId<sp/>==<sp/>id);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nav_activated_by_inputs<sp/>=<sp/>IsNavInputTest(ImGuiNavInput_Activate,<sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_Repeat)<sp/>?<sp/>ImGuiInputReadMode_Repeat<sp/>:<sp/>ImGuiInputReadMode_Pressed);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nav_activated_by_code<sp/>||<sp/>nav_activated_by_inputs)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>active<sp/>id<sp/>so<sp/>it<sp/>can<sp/>be<sp/>queried<sp/>by<sp/>user<sp/>via<sp/>IsItemActive(),<sp/>equivalent<sp/>of<sp/>holding<sp/>the<sp/>mouse<sp/>button.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdSource<sp/>=<sp/>ImGuiInputSource_Nav;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiButtonFlags_NoNavFocus))</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFocusID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>while<sp/>held</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>held<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdSource<sp/>==<sp/>ImGuiInputSource_Mouse)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdIsJustActivated)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdClickOffset<sp/>=<sp/>g.IO.MousePos<sp/>-<sp/>bb.Min;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mouse_button<sp/>=<sp/>g.ActiveIdMouseButton;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(mouse_button<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mouse_button<sp/>&lt;<sp/>ImGuiMouseButton_COUNT);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.IO.MouseDown[mouse_button])</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>held<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>release_in<sp/>=<sp/>hovered<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_PressedOnClickRelease)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>release_anywhere<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_PressedOnClickReleaseAnywhere)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((release_in<sp/>||<sp/>release_anywhere)<sp/>&amp;&amp;<sp/>!g.DragDropActive)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>as<sp/>pressed<sp/>when<sp/>releasing<sp/>the<sp/>mouse<sp/>(this<sp/>is<sp/>the<sp/>most<sp/>common<sp/>path)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_double_click_release<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_PressedOnDoubleClick)<sp/>&amp;&amp;<sp/>g.IO.MouseReleased[mouse_button]<sp/>&amp;&amp;<sp/>g.IO.MouseClickedLastCount[mouse_button]<sp/>==<sp/>2;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_repeating_already<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiButtonFlags_Repeat)<sp/>&amp;&amp;<sp/>g.IO.MouseDownDurationPrev[mouse_button]<sp/>&gt;=<sp/>g.IO.KeyRepeatDelay;<sp/></highlight><highlight class="comment">//<sp/>Repeat<sp/>mode<sp/>trumps<sp/>&lt;on<sp/>release&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_double_click_release<sp/>&amp;&amp;<sp/>!is_repeating_already)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiButtonFlags_NoNavFocus))</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavDisableHighlight<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdSource<sp/>==<sp/>ImGuiInputSource_Nav)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>activated<sp/>using<sp/>Nav,<sp/>we<sp/>hold<sp/>on<sp/>the<sp/>ActiveID<sp/>until<sp/>activation<sp/>button<sp/>is<sp/>released</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavActivateDownId<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdHasBeenPressedBefore<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_hovered)<sp/>*out_hovered<sp/>=<sp/>hovered;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_held)<sp/>*out_held<sp/>=<sp/>held;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ButtonEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg,<sp/>ImGuiButtonFlags<sp/>flags)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiButtonFlags_AlignTextBaseLine)<sp/>&amp;&amp;<sp/>style.FramePadding.y<sp/>&lt;<sp/>window-&gt;DC.CurrLineTextBaseOffset)<sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>vertically<sp/>align<sp/>buttons<sp/>that<sp/>are<sp/>smaller/have<sp/>no<sp/>padding<sp/>so<sp/>that<sp/>text<sp/>baseline<sp/>matches<sp/>(bit<sp/>hacky,<sp/>since<sp/>it<sp/>shouldn&apos;t<sp/>be<sp/>a<sp/>flag)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.y<sp/>+=<sp/>window-&gt;DC.CurrLineTextBaseOffset<sp/>-<sp/>style.FramePadding.y;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size<sp/>=<sp/>CalcItemSize(size_arg,<sp/>label_size.x<sp/>+<sp/>style.FramePadding.x<sp/>*<sp/>2.0f,<sp/>label_size.y<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(pos,<sp/>pos<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(size,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LastItemData.InFlags<sp/>&amp;<sp/>ImGuiItemFlags_ButtonRepeat)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiButtonFlags_Repeat;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held,<sp/>flags);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col<sp/>=<sp/>GetColorU32((held<sp/>&amp;&amp;<sp/>hovered)<sp/>?<sp/>ImGuiCol_ButtonActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_ButtonHovered<sp/>:<sp/>ImGuiCol_Button);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderFrame(bb.Min,<sp/>bb.Max,<sp/>col,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSetNextTextDecoration(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderTextClipped(bb.Min<sp/>+<sp/>style.FramePadding,<sp/>bb.Max<sp/>-<sp/>style.FramePadding,<sp/>label,<sp/>NULL,<sp/>&amp;label_size,<sp/>style.ButtonTextAlign,<sp/>&amp;bb);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Automatically<sp/>close<sp/>popups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(pressed<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiButtonFlags_DontClosePopups)<sp/>&amp;&amp;<sp/>(window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_Popup))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>CloseCurrentPopup();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::Button(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ButtonEx(label,<sp/>size_arg,<sp/>ImGuiButtonFlags_None);</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Small<sp/>buttons<sp/>fits<sp/>within<sp/>text<sp/>without<sp/>additional<sp/>vertical<sp/>spacing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SmallButton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>backup_padding_y<sp/>=<sp/>g.Style.FramePadding.y;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>g.Style.FramePadding.y<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonEx(label,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0),<sp/>ImGuiButtonFlags_AlignTextBaseLine);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>g.Style.FramePadding.y<sp/>=<sp/>backup_padding_y;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tip:<sp/>use<sp/>ImGui::PushID()/PopID()<sp/>to<sp/>push<sp/>indices<sp/>or<sp/>pointers<sp/>in<sp/>the<sp/>ID<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Then<sp/>you<sp/>can<sp/>keep<sp/>&apos;str_id&apos;<sp/>empty<sp/>or<sp/>the<sp/>same<sp/>for<sp/>all<sp/>your<sp/>buttons<sp/>(instead<sp/>of<sp/>creating<sp/>a<sp/>string<sp/>based<sp/>on<sp/>a<sp/>non-string<sp/>id)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InvisibleButton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg,<sp/>ImGuiButtonFlags<sp/>flags)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cannot<sp/>use<sp/>zero-size<sp/>for<sp/>InvisibleButton().<sp/>Unlike<sp/>Button()<sp/>there<sp/>is<sp/>not<sp/>way<sp/>to<sp/>fallback<sp/>using<sp/>the<sp/>label<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(size_arg.x<sp/>!=<sp/>0.0f<sp/>&amp;&amp;<sp/>size_arg.y<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(str_id);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size<sp/>=<sp/>CalcItemSize(size_arg,<sp/>0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(size);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held,<sp/>flags);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ArrowButtonEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/>ImGuiDir<sp/>dir,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size,<sp/>ImGuiButtonFlags<sp/>flags)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(str_id);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>default_size<sp/>=<sp/>GetFrameHeight();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(size,<sp/>(size.y<sp/>&gt;=<sp/>default_size)<sp/>?<sp/>g.Style.FramePadding.y<sp/>:<sp/>-1.0f);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LastItemData.InFlags<sp/>&amp;<sp/>ImGuiItemFlags_ButtonRepeat)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiButtonFlags_Repeat;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held,<sp/>flags);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>bg_col<sp/>=<sp/>GetColorU32((held<sp/>&amp;&amp;<sp/>hovered)<sp/>?<sp/>ImGuiCol_ButtonActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_ButtonHovered<sp/>:<sp/>ImGuiCol_Button);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>text_col<sp/>=<sp/>GetColorU32(ImGuiCol_Text);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderFrame(bb.Min,<sp/>bb.Max,<sp/>bg_col,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>g.Style.FrameRounding);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderArrow(window-&gt;DrawList,<sp/>bb.Min<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(ImMax(0.0f,<sp/>(size.x<sp/>-<sp/>g.FontSize)<sp/>*<sp/>0.5f),<sp/>ImMax(0.0f,<sp/>(size.y<sp/>-<sp/>g.FontSize)<sp/>*<sp/>0.5f)),<sp/>text_col,<sp/>dir);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ArrowButton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/>ImGuiDir<sp/>dir)</highlight></codeline>
<codeline lineno="785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>GetFrameHeight();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ArrowButtonEx(str_id,<sp/>dir,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(sz,<sp/>sz),<sp/>ImGuiButtonFlags_None);</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Button<sp/>to<sp/>close<sp/>a<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::CloseButton(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tweak<sp/>1:<sp/>Shrink<sp/>hit-testing<sp/>area<sp/>if<sp/>button<sp/>covers<sp/>an<sp/>abnormally<sp/>large<sp/>proportion<sp/>of<sp/>the<sp/>visible<sp/>region.<sp/>That&apos;s<sp/>in<sp/>order<sp/>to<sp/>facilitate<sp/>moving<sp/>the<sp/>window<sp/>away.<sp/>(#3825)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>better<sp/>be<sp/>applied<sp/>as<sp/>a<sp/>general<sp/>hit-rect<sp/>reduction<sp/>mechanism<sp/>for<sp/>all<sp/>widgets<sp/>to<sp/>ensure<sp/>the<sp/>area<sp/>to<sp/>move<sp/>window<sp/>is<sp/>always<sp/>accessible?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(pos,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(g.FontSize,<sp/>g.FontSize)<sp/>+<sp/>g.Style.FramePadding<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb_interact<sp/>=<sp/>bb;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>area_to_visible_ratio<sp/>=<sp/>window-&gt;OuterRectClipped.GetArea()<sp/>/<sp/>bb.GetArea();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area_to_visible_ratio<sp/>&lt;<sp/>1.5f)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb_interact.Expand(ImFloor(bb_interact.GetSize()<sp/>*<sp/>-0.25f));</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tweak<sp/>2:<sp/>We<sp/>intentionally<sp/>allow<sp/>interaction<sp/>when<sp/>clipped<sp/>so<sp/>that<sp/>a<sp/>mechanical<sp/>Alt,Right,Activate<sp/>sequence<sp/>can<sp/>always<sp/>close<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(this<sp/>isn&apos;t<sp/>the<sp/>regular<sp/>behavior<sp/>of<sp/>buttons,<sp/>but<sp/>it<sp/>doesn&apos;t<sp/>affect<sp/>the<sp/>user<sp/>much<sp/>because<sp/>navigation<sp/>tends<sp/>to<sp/>keep<sp/>items<sp/>visible).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_clipped<sp/>=<sp/>!ItemAdd(bb_interact,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(bb_interact,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_clipped)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Clarify<sp/>this<sp/>mess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>col<sp/>=<sp/>GetColorU32(held<sp/>?<sp/>ImGuiCol_ButtonActive<sp/>:<sp/>ImGuiCol_ButtonHovered);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>center<sp/>=<sp/>bb.GetCenter();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddCircleFilled(center,<sp/>ImMax(2.0f,<sp/>g.FontSize<sp/>*<sp/>0.5f<sp/>+<sp/>1.0f),<sp/>col,<sp/>12);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cross_extent<sp/>=<sp/>g.FontSize<sp/>*<sp/>0.5f<sp/>*<sp/>0.7071f<sp/>-<sp/>1.0f;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>cross_col<sp/>=<sp/>GetColorU32(ImGuiCol_Text);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>center<sp/>-=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.5f,<sp/>0.5f);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddLine(center<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(+cross_extent,<sp/>+cross_extent),<sp/>center<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-cross_extent,<sp/>-cross_extent),<sp/>cross_col,<sp/>1.0f);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddLine(center<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(+cross_extent,<sp/>-cross_extent),<sp/>center<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-cross_extent,<sp/>+cross_extent),<sp/>cross_col,<sp/>1.0f);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Collapse<sp/>button<sp/>also<sp/>functions<sp/>as<sp/>a<sp/>Dock<sp/>Menu<sp/>button.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::CollapseButton(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos,<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>dock_node)</highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(pos,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(g.FontSize,<sp/>g.FontSize)<sp/>+<sp/>g.Style.FramePadding<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemAdd(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held,<sp/>ImGuiButtonFlags_None);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bool<sp/>is_dock_menu<sp/>=<sp/>(window-&gt;DockNodeAsHost<sp/>&amp;&amp;<sp/>!window-&gt;Collapsed);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>bg_col<sp/>=<sp/>GetColorU32((held<sp/>&amp;&amp;<sp/>hovered)<sp/>?<sp/>ImGuiCol_ButtonActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_ButtonHovered<sp/>:<sp/>ImGuiCol_Button);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>text_col<sp/>=<sp/>GetColorU32(ImGuiCol_Text);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>center<sp/>=<sp/>bb.GetCenter();</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered<sp/>||<sp/>held)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddCircleFilled(center<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,-0.5f),<sp/>g.FontSize<sp/>*<sp/>0.5f<sp/>+<sp/>1.0f,<sp/>bg_col,<sp/>12);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dock_node)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrowDockMenu(window-&gt;DrawList,<sp/>bb.Min<sp/>+<sp/>g.Style.FramePadding,<sp/>g.FontSize,<sp/>text_col);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrow(window-&gt;DrawList,<sp/>bb.Min<sp/>+<sp/>g.Style.FramePadding,<sp/>text_col,<sp/>window-&gt;Collapsed<sp/>?<sp/>ImGuiDir_Right<sp/>:<sp/>ImGuiDir_Down,<sp/>1.0f);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>to<sp/>moving<sp/>the<sp/>window<sp/>after<sp/>mouse<sp/>is<sp/>moved<sp/>beyond<sp/>the<sp/>initial<sp/>drag<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsItemActive()<sp/>&amp;&amp;<sp/>IsMouseDragging(0))</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartMouseMovingWindowOrNode(window,<sp/>dock_node,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal">ImGuiID<sp/>ImGui::GetWindowScrollbarID(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>)</highlight></codeline>
<codeline lineno="861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window-&gt;GetIDNoKeepAlive(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_X<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;#SCROLLX&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;#SCROLLY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>scrollbar<sp/>rectangle,<sp/>must<sp/>only<sp/>be<sp/>called<sp/>for<sp/>corresponding<sp/>axis<sp/>if<sp/>window-&gt;ScrollbarX/Y<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>ImGui::GetWindowScrollbarRect(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window,<sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>)</highlight></codeline>
<codeline lineno="867"><highlight class="normal">{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>outer_rect<sp/>=<sp/>window-&gt;Rect();</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>inner_rect<sp/>=<sp/>window-&gt;InnerRect;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>border_size<sp/>=<sp/>window-&gt;WindowBorderSize;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scrollbar_size<sp/>=<sp/>window-&gt;ScrollbarSizes[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>^<sp/>1];<sp/></highlight><highlight class="comment">//<sp/>(ScrollbarSizes.x<sp/>=<sp/>width<sp/>of<sp/>Y<sp/>scrollbar;<sp/>ScrollbarSizes.y<sp/>=<sp/>height<sp/>of<sp/>X<sp/>scrollbar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(scrollbar_size<sp/>&gt;<sp/>0.0f);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_X)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(inner_rect.Min.x,<sp/>ImMax(outer_rect.Min.y,<sp/>outer_rect.Max.y<sp/>-<sp/>border_size<sp/>-<sp/>scrollbar_size),<sp/>inner_rect.Max.x,<sp/>outer_rect.Max.y);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(ImMax(outer_rect.Min.x,<sp/>outer_rect.Max.x<sp/>-<sp/>border_size<sp/>-<sp/>scrollbar_size),<sp/>inner_rect.Min.y,<sp/>outer_rect.Max.x,<sp/>inner_rect.Max.y);</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Scrollbar(ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>)</highlight></codeline>
<codeline lineno="880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>GetWindowScrollbarID(window,<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>KeepAliveID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>scrollbar<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb<sp/>=<sp/>GetWindowScrollbarRect(window,<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawFlags<sp/>rounding_corners<sp/>=<sp/>ImDrawFlags_RoundCornersNone;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_X)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rounding_corners<sp/>|=<sp/>ImDrawFlags_RoundCornersBottomLeft;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;ScrollbarY)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rounding_corners<sp/>|=<sp/>ImDrawFlags_RoundCornersBottomRight;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_NoTitleBar)<sp/>&amp;&amp;<sp/>!(window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_MenuBar))</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rounding_corners<sp/>|=<sp/>ImDrawFlags_RoundCornersTopRight;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;ScrollbarX)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rounding_corners<sp/>|=<sp/>ImDrawFlags_RoundCornersBottomRight;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size_avail<sp/>=<sp/>window-&gt;InnerRect.Max[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>-<sp/>window-&gt;InnerRect.Min[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>];</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size_contents<sp/>=<sp/>window-&gt;ContentSize[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>+<sp/>window-&gt;WindowPadding[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>*<sp/>2.0f;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>ImS64<sp/>scroll<sp/>=<sp/>(ImS64)window-&gt;Scroll[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>];</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>ScrollbarEx(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>,<sp/>&amp;scroll,<sp/>(ImS64)size_avail,<sp/>(ImS64)size_contents,<sp/>rounding_corners);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;Scroll[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>=<sp/>(float)scroll;</highlight></codeline>
<codeline lineno="908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vertical/Horizontal<sp/>scrollbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>entire<sp/>piece<sp/>of<sp/>code<sp/>below<sp/>is<sp/>rather<sp/>confusing<sp/>because:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>handle<sp/>absolute<sp/>seeking<sp/>(when<sp/>first<sp/>clicking<sp/>outside<sp/>the<sp/>grab)<sp/>and<sp/>relative<sp/>manipulation<sp/>(afterward<sp/>or<sp/>when<sp/>clicking<sp/>inside<sp/>the<sp/>grab)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>store<sp/>values<sp/>as<sp/>normalized<sp/>ratio<sp/>and<sp/>in<sp/>a<sp/>form<sp/>that<sp/>allows<sp/>the<sp/>window<sp/>content<sp/>to<sp/>change<sp/>while<sp/>we<sp/>are<sp/>holding<sp/>on<sp/>a<sp/>scrollbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>handle<sp/>both<sp/>horizontal<sp/>and<sp/>vertical<sp/>scrollbars,<sp/>which<sp/>makes<sp/>the<sp/>terminology<sp/>not<sp/>ideal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Still,<sp/>the<sp/>code<sp/>should<sp/>probably<sp/>be<sp/>made<sp/>simpler..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ScrollbarEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb_frame,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>,<sp/>ImS64*<sp/>p_scroll_v,<sp/>ImS64<sp/>size_avail_v,<sp/>ImS64<sp/>size_contents_v,<sp/>ImDrawFlags<sp/>flags)</highlight></codeline>
<codeline lineno="917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bb_frame_width<sp/>=<sp/>bb_frame.GetWidth();</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bb_frame_height<sp/>=<sp/>bb_frame.GetHeight();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bb_frame_width<sp/>&lt;=<sp/>0.0f<sp/>||<sp/>bb_frame_height<sp/>&lt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>are<sp/>too<sp/>small,<sp/>start<sp/>hiding<sp/>and<sp/>disabling<sp/>the<sp/>grab<sp/>(this<sp/>reduce<sp/>visual<sp/>noise<sp/>on<sp/>very<sp/>small<sp/>window<sp/>and<sp/>facilitate<sp/>using<sp/>the<sp/>window<sp/>resize<sp/>grab)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_Y)<sp/>&amp;&amp;<sp/>bb_frame_height<sp/>&lt;<sp/>g.FontSize<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2.0f)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>ImSaturate((bb_frame_height<sp/>-<sp/>g.FontSize)<sp/>/<sp/>(g.Style.FramePadding.y<sp/>*<sp/>2.0f));</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>&lt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_interaction<sp/>=<sp/>(alpha<sp/>&gt;=<sp/>1.0f);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb<sp/>=<sp/>bb_frame;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>bb.Expand(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-ImClamp(IM_FLOOR((bb_frame_width<sp/>-<sp/>2.0f)<sp/>*<sp/>0.5f),<sp/>0.0f,<sp/>3.0f),<sp/>-ImClamp(IM_FLOOR((bb_frame_height<sp/>-<sp/>2.0f)<sp/>*<sp/>0.5f),<sp/>0.0f,<sp/>3.0f)));</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V<sp/>denote<sp/>the<sp/>main,<sp/>longer<sp/>axis<sp/>of<sp/>the<sp/>scrollbar<sp/>(=<sp/>height<sp/>for<sp/>a<sp/>vertical<sp/>scrollbar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scrollbar_size_v<sp/>=<sp/>(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_X)<sp/>?<sp/>bb.GetWidth()<sp/>:<sp/>bb.GetHeight();</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>height<sp/>of<sp/>our<sp/>grabbable<sp/>box.<sp/>It<sp/>generally<sp/>represent<sp/>the<sp/>amount<sp/>visible<sp/>(vs<sp/>the<sp/>total<sp/>scrollable<sp/>amount)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>maintain<sp/>a<sp/>minimum<sp/>size<sp/>in<sp/>pixel<sp/>to<sp/>allow<sp/>for<sp/>the<sp/>user<sp/>to<sp/>still<sp/>aim<sp/>inside.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(ImMax(size_contents_v,<sp/>size_avail_v)<sp/>&gt;<sp/>0.0f);<sp/></highlight><highlight class="comment">//<sp/>Adding<sp/>this<sp/>assert<sp/>to<sp/>check<sp/>if<sp/>the<sp/>ImMax(XXX,1.0f)<sp/>is<sp/>still<sp/>needed.<sp/>PLEASE<sp/>CONTACT<sp/>ME<sp/>if<sp/>this<sp/>triggers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64<sp/>win_size_v<sp/>=<sp/>ImMax(ImMax(size_contents_v,<sp/>size_avail_v),<sp/>(ImS64)1);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grab_h_pixels<sp/>=<sp/>ImClamp(scrollbar_size_v<sp/>*<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)size_avail_v<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)win_size_v),<sp/>style.GrabMinSize,<sp/>scrollbar_size_v);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grab_h_norm<sp/>=<sp/>grab_h_pixels<sp/>/<sp/>scrollbar_size_v;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>input<sp/>right<sp/>away.<sp/>None<sp/>of<sp/>the<sp/>code<sp/>of<sp/>Begin()<sp/>is<sp/>relying<sp/>on<sp/>scrolling<sp/>position<sp/>before<sp/>calling<sp/>Scrollbar().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>held<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>ButtonBehavior(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held,<sp/>ImGuiButtonFlags_NoNavFocus);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64<sp/>scroll_max<sp/>=<sp/>ImMax((ImS64)1,<sp/>size_contents_v<sp/>-<sp/>size_avail_v);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scroll_ratio<sp/>=<sp/>ImSaturate((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*p_scroll_v<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)scroll_max);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grab_v_norm<sp/>=<sp/>scroll_ratio<sp/>*<sp/>(scrollbar_size_v<sp/>-<sp/>grab_h_pixels)<sp/>/<sp/>scrollbar_size_v;<sp/></highlight><highlight class="comment">//<sp/>Grab<sp/>position<sp/>in<sp/>normalized<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(held<sp/>&amp;&amp;<sp/>allow_interaction<sp/>&amp;&amp;<sp/>grab_h_norm<sp/>&lt;<sp/>1.0f)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scrollbar_pos_v<sp/>=<sp/>bb.Min[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>];</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mouse_pos_v<sp/>=<sp/>g.IO.MousePos[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>];</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Click<sp/>position<sp/>in<sp/>scrollbar<sp/>normalized<sp/>space<sp/>(0.0f-&gt;1.0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>clicked_v_norm<sp/>=<sp/>ImSaturate((mouse_pos_v<sp/>-<sp/>scrollbar_pos_v)<sp/>/<sp/>scrollbar_size_v);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetHoveredID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>seek_absolute<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdIsJustActivated)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>initial<sp/>click<sp/>calculate<sp/>the<sp/>distance<sp/>between<sp/>mouse<sp/>and<sp/>the<sp/>center<sp/>of<sp/>the<sp/>grab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seek_absolute<sp/>=<sp/>(clicked_v_norm<sp/>&lt;<sp/>grab_v_norm<sp/>||<sp/>clicked_v_norm<sp/>&gt;<sp/>grab_v_norm<sp/>+<sp/>grab_h_norm);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seek_absolute)</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ScrollbarClickDeltaToGrabCenter<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ScrollbarClickDeltaToGrabCenter<sp/>=<sp/>clicked_v_norm<sp/>-<sp/>grab_v_norm<sp/>-<sp/>grab_h_norm<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>scroll<sp/>(p_scroll_v<sp/>will<sp/>generally<sp/>point<sp/>on<sp/>one<sp/>member<sp/>of<sp/>window-&gt;Scroll)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>ok<sp/>to<sp/>modify<sp/>Scroll<sp/>here<sp/>because<sp/>we<sp/>are<sp/>being<sp/>called<sp/>in<sp/>Begin()<sp/>after<sp/>the<sp/>calculation<sp/>of<sp/>ContentSize<sp/>and<sp/>before<sp/>setting<sp/>up<sp/>our<sp/>starting<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scroll_v_norm<sp/>=<sp/>ImSaturate((clicked_v_norm<sp/>-<sp/>g.ScrollbarClickDeltaToGrabCenter<sp/>-<sp/>grab_h_norm<sp/>*<sp/>0.5f)<sp/>/<sp/>(1.0f<sp/>-<sp/>grab_h_norm));</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_scroll_v<sp/>=<sp/>(ImS64)(scroll_v_norm<sp/>*<sp/>scroll_max);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>values<sp/>for<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroll_ratio<sp/>=<sp/>ImSaturate((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*p_scroll_v<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)scroll_max);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab_v_norm<sp/>=<sp/>scroll_ratio<sp/>*<sp/>(scrollbar_size_v<sp/>-<sp/>grab_h_pixels)<sp/>/<sp/>scrollbar_size_v;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>distance<sp/>to<sp/>grab<sp/>now<sp/>that<sp/>we<sp/>have<sp/>seeked<sp/>and<sp/>saturated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seek_absolute)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ScrollbarClickDeltaToGrabCenter<sp/>=<sp/>clicked_v_norm<sp/>-<sp/>grab_v_norm<sp/>-<sp/>grab_h_norm<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>bg_col<sp/>=<sp/>GetColorU32(ImGuiCol_ScrollbarBg);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>grab_col<sp/>=<sp/>GetColorU32(held<sp/>?<sp/>ImGuiCol_ScrollbarGrabActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_ScrollbarGrabHovered<sp/>:<sp/>ImGuiCol_ScrollbarGrab,<sp/>alpha);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(bb_frame.Min,<sp/>bb_frame.Max,<sp/>bg_col,<sp/>window-&gt;WindowRounding,<sp/>flags);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>grab_rect;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_X)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab_rect<sp/>=<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(ImLerp(bb.Min.x,<sp/>bb.Max.x,<sp/>grab_v_norm),<sp/>bb.Min.y,<sp/>ImLerp(bb.Min.x,<sp/>bb.Max.x,<sp/>grab_v_norm)<sp/>+<sp/>grab_h_pixels,<sp/>bb.Max.y);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab_rect<sp/>=<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(bb.Min.x,<sp/>ImLerp(bb.Min.y,<sp/>bb.Max.y,<sp/>grab_v_norm),<sp/>bb.Max.x,<sp/>ImLerp(bb.Min.y,<sp/>bb.Max.y,<sp/>grab_v_norm)<sp/>+<sp/>grab_h_pixels);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(grab_rect.Min,<sp/>grab_rect.Max,<sp/>grab_col,<sp/>style.ScrollbarRounding);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>held;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Image(ImTextureID<sp/>user_texture_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>tint_col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>border_col)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(border_col.w<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.Max<sp/>+=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(2,<sp/>2);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(bb);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/>0))</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(border_col.w<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRect(bb.Min,<sp/>bb.Max,<sp/>GetColorU32(border_col),<sp/>0.0f);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddImage(user_texture_id,<sp/>bb.Min<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(1,<sp/>1),<sp/>bb.Max<sp/>-<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(1,<sp/>1),<sp/>uv0,<sp/>uv1,<sp/>GetColorU32(tint_col));</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddImage(user_texture_id,<sp/>bb.Min,<sp/>bb.Max,<sp/>uv0,<sp/>uv1,<sp/>GetColorU32(tint_col));</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ImageButton()<sp/>is<sp/>flawed<sp/>as<sp/>&apos;id&apos;<sp/>is<sp/>always<sp/>derived<sp/>from<sp/>&apos;texture_id&apos;<sp/>(see<sp/>#2464<sp/>#1390)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>provide<sp/>this<sp/>internal<sp/>helper<sp/>to<sp/>write<sp/>your<sp/>own<sp/>variant<sp/>while<sp/>we<sp/>figure<sp/>out<sp/>how<sp/>to<sp/>redesign<sp/>the<sp/>public<sp/>ImageButton()<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ImageButtonEx(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImTextureID<sp/>texture_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>padding,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>bg_col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>tint_col)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/>size<sp/>+<sp/>padding<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(bb);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col<sp/>=<sp/>GetColorU32((held<sp/>&amp;&amp;<sp/>hovered)<sp/>?<sp/>ImGuiCol_ButtonActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_ButtonHovered<sp/>:<sp/>ImGuiCol_Button);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderFrame(bb.Min,<sp/>bb.Max,<sp/>col,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>ImClamp((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)ImMin(padding.x,<sp/>padding.y),<sp/>0.0f,<sp/>g.Style.FrameRounding));</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg_col.w<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(bb.Min<sp/>+<sp/>padding,<sp/>bb.Max<sp/>-<sp/>padding,<sp/>GetColorU32(bg_col));</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddImage(texture_id,<sp/>bb.Min<sp/>+<sp/>padding,<sp/>bb.Max<sp/>-<sp/>padding,<sp/>uv0,<sp/>uv1,<sp/>GetColorU32(tint_col));</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="comment">//<sp/>frame_padding<sp/>&lt;<sp/>0:<sp/>uses<sp/>FramePadding<sp/>from<sp/>style<sp/>(default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="comment">//<sp/>frame_padding<sp/>=<sp/>0:<sp/>no<sp/>framing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="comment">//<sp/>frame_padding<sp/>&gt;<sp/>0:<sp/>set<sp/>framing<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ImageButton(ImTextureID<sp/>user_texture_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_padding,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>bg_col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>tint_col)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>to<sp/>using<sp/>texture<sp/>ID<sp/>as<sp/>ID.<sp/>User<sp/>can<sp/>still<sp/>push<sp/>string/integer<sp/>prefixes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(intptr_t)user_texture_id);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(</highlight><highlight class="stringliteral">&quot;#image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>padding<sp/>=<sp/>(frame_padding<sp/>&gt;=<sp/>0)<sp/>?<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)frame_padding,<sp/>(float)frame_padding)<sp/>:<sp/>g.Style.FramePadding;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImageButtonEx(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>user_texture_id,<sp/>size,<sp/>uv0,<sp/>uv1,<sp/>padding,<sp/>bg_col,<sp/>tint_col);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::Checkbox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>v)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>square_sz<sp/>=<sp/>GetFrameHeight();</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>total_bb(pos,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(square_sz<sp/>+<sp/>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>label_size.x<sp/>:<sp/>0.0f),<sp/>label_size.y<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f));</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(total_bb,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags<sp/>|<sp/>ImGuiItemStatusFlags_Checkable<sp/>|<sp/>(*v<sp/>?<sp/>ImGuiItemStatusFlags_Checked<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v<sp/>=<sp/>!(*v);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>check_bb(pos,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(square_sz,<sp/>square_sz));</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderFrame(check_bb.Min,<sp/>check_bb.Max,<sp/>GetColorU32((held<sp/>&amp;&amp;<sp/>hovered)<sp/>?<sp/>ImGuiCol_FrameBgActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_FrameBgHovered<sp/>:<sp/>ImGuiCol_FrameBg),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>check_col<sp/>=<sp/>GetColorU32(ImGuiCol_CheckMark);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mixed_value<sp/>=<sp/>(g.LastItemData.InFlags<sp/>&amp;<sp/>ImGuiItemFlags_MixedValue)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mixed_value)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Undocumented<sp/>tristate/mixed/indeterminate<sp/>checkbox<sp/>(#2644)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>seem<sp/>awkwardly<sp/>designed<sp/>because<sp/>the<sp/>aim<sp/>is<sp/>to<sp/>make<sp/>ImGuiItemFlags_MixedValue<sp/>supported<sp/>by<sp/>all<sp/>widgets<sp/>(not<sp/>just<sp/>checkbox)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pad(ImMax(1.0f,<sp/>IM_FLOOR(square_sz<sp/>/<sp/>3.6f)),<sp/>ImMax(1.0f,<sp/>IM_FLOOR(square_sz<sp/>/<sp/>3.6f)));</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(check_bb.Min<sp/>+<sp/>pad,<sp/>check_bb.Max<sp/>-<sp/>pad,<sp/>check_col,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*v)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/>ImMax(1.0f,<sp/>IM_FLOOR(square_sz<sp/>/<sp/>6.0f));</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderCheckMark(window-&gt;DrawList,<sp/>check_bb.Min<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pad,<sp/>pad),<sp/>check_col,<sp/>square_sz<sp/>-<sp/>pad<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_pos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(check_bb.Max.x<sp/>+<sp/>style.ItemInnerSpacing.x,<sp/>check_bb.Min.y<sp/>+<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogRenderedText(&amp;label_pos,<sp/>mixed_value<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;[~]&quot;</highlight><highlight class="normal"><sp/>:<sp/>*v<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;[x]&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size.x<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(label_pos,<sp/>label);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags<sp/>|<sp/>ImGuiItemStatusFlags_Checkable<sp/>|<sp/>(*v<sp/>?<sp/>ImGuiItemStatusFlags_Checked<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::CheckboxFlagsT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>T*<sp/>flags,<sp/>T<sp/>flags_value)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_on<sp/>=<sp/>(*flags<sp/>&amp;<sp/>flags_value)<sp/>==<sp/>flags_value;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_on<sp/>=<sp/>(*flags<sp/>&amp;<sp/>flags_value)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!all_on<sp/>&amp;&amp;<sp/>any_on)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiItemFlags<sp/>backup_item_flags<sp/>=<sp/>g.CurrentItemFlags;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.CurrentItemFlags<sp/>|=<sp/>ImGuiItemFlags_MixedValue;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/>Checkbox(label,<sp/>&amp;all_on);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.CurrentItemFlags<sp/>=<sp/>backup_item_flags;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/>Checkbox(label,<sp/>&amp;all_on);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed)</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(all_on)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flags<sp/>|=<sp/>flags_value;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flags<sp/>&amp;=<sp/>~flags_value;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::CheckboxFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags_value)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CheckboxFlagsT(label,<sp/>flags,<sp/>flags_value);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::CheckboxFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>flags,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags_value)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CheckboxFlagsT(label,<sp/>flags,<sp/>flags_value);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::CheckboxFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImS64*<sp/>flags,<sp/>ImS64<sp/>flags_value)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CheckboxFlagsT(label,<sp/>flags,<sp/>flags_value);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::CheckboxFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImU64*<sp/>flags,<sp/>ImU64<sp/>flags_value)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CheckboxFlagsT(label,<sp/>flags,<sp/>flags_value);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::RadioButton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>square_sz<sp/>=<sp/>GetFrameHeight();</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>check_bb(pos,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(square_sz,<sp/>square_sz));</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>total_bb(pos,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(square_sz<sp/>+<sp/>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>label_size.x<sp/>:<sp/>0.0f),<sp/>label_size.y<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f));</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(total_bb,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>center<sp/>=<sp/>check_bb.GetCenter();</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>center.x<sp/>=<sp/>IM_ROUND(center.x);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>center.y<sp/>=<sp/>IM_ROUND(center.y);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius<sp/>=<sp/>(square_sz<sp/>-<sp/>1.0f)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddCircleFilled(center,<sp/>radius,<sp/>GetColorU32((held<sp/>&amp;&amp;<sp/>hovered)<sp/>?<sp/>ImGuiCol_FrameBgActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_FrameBgHovered<sp/>:<sp/>ImGuiCol_FrameBg),<sp/>16);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(active)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/>ImMax(1.0f,<sp/>IM_FLOOR(square_sz<sp/>/<sp/>6.0f));</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddCircleFilled(center,<sp/>radius<sp/>-<sp/>pad,<sp/>GetColorU32(ImGuiCol_CheckMark),<sp/>16);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style.FrameBorderSize<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddCircle(center<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(1,<sp/>1),<sp/>radius,<sp/>GetColorU32(ImGuiCol_BorderShadow),<sp/>16,<sp/>style.FrameBorderSize);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddCircle(center,<sp/>radius,<sp/>GetColorU32(ImGuiCol_Border),<sp/>16,<sp/>style.FrameBorderSize);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_pos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(check_bb.Max.x<sp/>+<sp/>style.ItemInnerSpacing.x,<sp/>check_bb.Min.y<sp/>+<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogRenderedText(&amp;label_pos,<sp/>active<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;(x)&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size.x<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(label_pos,<sp/>label);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>would<sp/>work<sp/>nicely<sp/>if<sp/>it<sp/>was<sp/>a<sp/>public<sp/>template,<sp/>e.g.<sp/>&apos;template&lt;T&gt;<sp/>RadioButton(const<sp/>char*<sp/>label,<sp/>T*<sp/>v,<sp/>T<sp/>v_button)&apos;,<sp/>but<sp/>I&apos;m<sp/>not<sp/>sure<sp/>how<sp/>we<sp/>would<sp/>expose<sp/>it..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::RadioButton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_button)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>RadioButton(label,<sp/>*v<sp/>==<sp/>v_button);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v<sp/>=<sp/>v_button;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>size_arg<sp/>(for<sp/>each<sp/>axis)<sp/>&lt;<sp/>0.0f:<sp/>align<sp/>to<sp/>end,<sp/>0.0f:<sp/>auto,<sp/>&gt;<sp/>0.0f:<sp/>specified<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::ProgressBar(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fraction,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>overlay)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size<sp/>=<sp/>CalcItemSize(size_arg,<sp/>CalcItemWidth(),<sp/>g.FontSize<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(pos,<sp/>pos<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(size,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/>0))</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>fraction<sp/>=<sp/>ImSaturate(fraction);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderFrame(bb.Min,<sp/>bb.Max,<sp/>GetColorU32(ImGuiCol_FrameBg),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>bb.Expand(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-style.FrameBorderSize,<sp/>-style.FrameBorderSize));</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>fill_br<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(ImLerp(bb.Min.x,<sp/>bb.Max.x,<sp/>fraction),<sp/>bb.Max.y);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderRectFilledRangeH(window-&gt;DrawList,<sp/>bb,<sp/>GetColorU32(ImGuiCol_PlotHistogram),<sp/>0.0f,<sp/>fraction,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>displaying<sp/>the<sp/>fraction<sp/>as<sp/>percentage<sp/>string,<sp/>but<sp/>user<sp/>can<sp/>override<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>overlay_buf[32];</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!overlay)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatString(overlay_buf,<sp/>IM_ARRAYSIZE(overlay_buf),<sp/></highlight><highlight class="stringliteral">&quot;%.0f%%&quot;</highlight><highlight class="normal">,<sp/>fraction<sp/>*<sp/>100<sp/>+<sp/>0.01f);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overlay<sp/>=<sp/>overlay_buf;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>overlay_size<sp/>=<sp/>CalcTextSize(overlay,<sp/>NULL);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlay_size.x<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTextClipped(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(ImClamp(fill_br.x<sp/>+<sp/>style.ItemSpacing.x,<sp/>bb.Min.x,<sp/>bb.Max.x<sp/>-<sp/>overlay_size.x<sp/>-<sp/>style.ItemInnerSpacing.x),<sp/>bb.Min.y),<sp/>bb.Max,<sp/>overlay,<sp/>NULL,<sp/>&amp;overlay_size,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>0.5f),<sp/>&amp;bb);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Bullet()</highlight></codeline>
<codeline lineno="1284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>line_height<sp/>=<sp/>ImMax(ImMin(window-&gt;DC.CurrLineSize.y,<sp/>g.FontSize<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2),<sp/>g.FontSize);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(g.FontSize,<sp/>line_height));</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(bb);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/>0))</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>style.FramePadding.x<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>and<sp/>stay<sp/>on<sp/>same<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>text_col<sp/>=<sp/>GetColorU32(ImGuiCol_Text);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderBullet(window-&gt;DrawList,<sp/>bb.Min<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(style.FramePadding.x<sp/>+<sp/>g.FontSize<sp/>*<sp/>0.5f,<sp/>line_height<sp/>*<sp/>0.5f),<sp/>text_col);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>SameLine(0,<sp/>style.FramePadding.x<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Low-level<sp/>Layout<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Spacing()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Dummy()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>NewLine()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>AlignTextToFramePadding()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SeparatorEx()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Separator()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SplitterBehavior()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ShrinkWidths()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Spacing()</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Dummy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size)</highlight></codeline>
<codeline lineno="1328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(size);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemAdd(bb,<sp/>0);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::NewLine()</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiLayoutType<sp/>backup_layout_type<sp/>=<sp/>window-&gt;DC.LayoutType;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.LayoutType<sp/>=<sp/>ImGuiLayoutType_Vertical;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;DC.CurrLineSize.y<sp/>&gt;<sp/>0.0f)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>event<sp/>that<sp/>we<sp/>are<sp/>on<sp/>a<sp/>line<sp/>with<sp/>items<sp/>that<sp/>is<sp/>smaller<sp/>that<sp/>FontSize<sp/>high,<sp/>we<sp/>will<sp/>preserve<sp/>its<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>g.FontSize));</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.LayoutType<sp/>=<sp/>backup_layout_type;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::AlignTextToFramePadding()</highlight></codeline>
<codeline lineno="1355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CurrLineSize.y<sp/>=<sp/>ImMax(window-&gt;DC.CurrLineSize.y,<sp/>g.FontSize<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CurrLineTextBaseOffset<sp/>=<sp/>ImMax(window-&gt;DC.CurrLineTextBaseOffset,<sp/>g.Style.FramePadding.y);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Horizontal/vertical<sp/>separating<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::SeparatorEx(ImGuiSeparatorFlags<sp/>flags)</highlight></codeline>
<codeline lineno="1367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(ImIsPowerOfTwo(flags<sp/>&amp;<sp/>(ImGuiSeparatorFlags_Horizontal<sp/>|<sp/>ImGuiSeparatorFlags_Vertical)));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>only<sp/>1<sp/>option<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness_draw<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness_layout<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiSeparatorFlags_Vertical)</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>separator,<sp/>for<sp/>menu<sp/>bars<sp/>(use<sp/>current<sp/>line<sp/>height).<sp/>Not<sp/>exposed<sp/>because<sp/>it<sp/>is<sp/>misleading<sp/>and<sp/>it<sp/>doesn&apos;t<sp/>have<sp/>an<sp/>effect<sp/>on<sp/>regular<sp/>layout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>window-&gt;DC.CursorPos.y;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/>window-&gt;DC.CursorPos.y<sp/>+<sp/>window-&gt;DC.CurrLineSize.y;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(window-&gt;DC.CursorPos.x,<sp/>y1),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(window-&gt;DC.CursorPos.x<sp/>+<sp/>thickness_draw,<sp/>y2));</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(thickness_layout,<sp/>0.0f));</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/>0))</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddLine(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Min.x,<sp/>bb.Min.y),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Min.x,<sp/>bb.Max.y),<sp/>GetColorU32(ImGuiCol_Separator));</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled)</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogText(</highlight><highlight class="stringliteral">&quot;<sp/>|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiSeparatorFlags_Horizontal)</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>Separator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>window-&gt;Pos.x;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>window-&gt;Pos.x<sp/>+<sp/>window-&gt;Size.x;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-WORKRECT:<sp/>old<sp/>hack<sp/>(#205)<sp/>until<sp/>we<sp/>decide<sp/>of<sp/>consistent<sp/>behavior<sp/>with<sp/>WorkRect/Indent<sp/>and<sp/>Separator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.GroupStack.Size<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>g.GroupStack.back().WindowID<sp/>==<sp/>window-&gt;ID)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>+=<sp/>window-&gt;DC.Indent.x;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-WORKRECT:<sp/>In<sp/>theory<sp/>we<sp/>should<sp/>simply<sp/>be<sp/>using<sp/>WorkRect.Min.x/Max.x<sp/>everywhere<sp/>but<sp/>it<sp/>isn&apos;t<sp/>aesthetically<sp/>what<sp/>we<sp/>want,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>introduce<sp/>a<sp/>variant<sp/>of<sp/>WorkRect<sp/>for<sp/>that<sp/>purpose.<sp/>(#4787)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_table" kindref="compound">ImGuiTable</ref>*<sp/><ref refid="structtable" kindref="compound">table</ref><sp/>=<sp/>g.CurrentTable)</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;Columns[<ref refid="structtable" kindref="compound">table</ref>-&gt;CurrentColumn].MinX;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;Columns[<ref refid="structtable" kindref="compound">table</ref>-&gt;CurrentColumn].MaxX;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_old_columns" kindref="compound">ImGuiOldColumns</ref>*<sp/>columns<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSeparatorFlags_SpanAllColumns)<sp/>?<sp/>window-&gt;DC.CurrentColumns<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(columns)</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushColumnsBackground();</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>provide<sp/>our<sp/>width<sp/>to<sp/>the<sp/>layout<sp/>so<sp/>that<sp/>it<sp/>doesn&apos;t<sp/>get<sp/>feed<sp/>back<sp/>into<sp/>AutoFit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>prevents<sp/>-&gt;CursorMaxPos<sp/>based<sp/>bounding<sp/>box<sp/>evaluation<sp/>from<sp/>working<sp/>(e.g.<sp/>TableEndCell)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x1,<sp/>window-&gt;DC.CursorPos.y),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x2,<sp/>window-&gt;DC.CursorPos.y<sp/>+<sp/>thickness_draw));</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>thickness_layout));</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>item_visible<sp/>=<sp/>ItemAdd(bb,<sp/>0);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item_visible)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddLine(bb.Min,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Max.x,<sp/>bb.Min.y),<sp/>GetColorU32(ImGuiCol_Separator));</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled)</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogRenderedText(&amp;bb.Min,<sp/></highlight><highlight class="stringliteral">&quot;--------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(columns)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopColumnsBackground();</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns-&gt;LineMinY<sp/>=<sp/>window-&gt;DC.CursorPos.y;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Separator()</highlight></codeline>
<codeline lineno="1436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Those<sp/>flags<sp/>should<sp/>eventually<sp/>be<sp/>overridable<sp/>by<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSeparatorFlags<sp/>flags<sp/>=<sp/>(window-&gt;DC.LayoutType<sp/>==<sp/>ImGuiLayoutType_Horizontal)<sp/>?<sp/>ImGuiSeparatorFlags_Vertical<sp/>:<sp/>ImGuiSeparatorFlags_Horizontal;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiSeparatorFlags_SpanAllColumns;<sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>this<sp/>only<sp/>applies<sp/>to<sp/>legacy<sp/>Columns()<sp/>api<sp/>as<sp/>they<sp/>relied<sp/>on<sp/>Separator()<sp/>a<sp/>lot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>SeparatorEx(flags);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>&apos;hover_visibility_delay&apos;<sp/>allows<sp/>us<sp/>to<sp/>hide<sp/>the<sp/>highlight<sp/>and<sp/>mouse<sp/>cursor<sp/>for<sp/>a<sp/>short<sp/>time,<sp/>which<sp/>can<sp/>be<sp/>convenient<sp/>to<sp/>reduce<sp/>visual<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SplitterBehavior(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="group__gtx__std__based__type_1gaf471290b8165697d088a943263fc8af1" kindref="member">size1</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="group__gtx__std__based__type_1ga432937b68775c79e4556150e769c6e6b" kindref="member">size2</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_size1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_size2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hover_extend,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hover_visibility_delay,<sp/>ImU32<sp/>bg_col)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiItemFlags<sp/>item_flags_backup<sp/>=<sp/>g.CurrentItemFlags;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>g.CurrentItemFlags<sp/>|=<sp/>ImGuiItemFlags_NoNav<sp/>|<sp/>ImGuiItemFlags_NoNavDefaultFocus;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>item_add<sp/>=<sp/>ItemAdd(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>g.CurrentItemFlags<sp/>=<sp/>item_flags_backup;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item_add)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb_interact<sp/>=<sp/>bb;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>bb_interact.Expand(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_Y<sp/>?<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>hover_extend)<sp/>:<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(hover_extend,<sp/>0.0f));</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>ButtonBehavior(bb_interact,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held,<sp/>ImGuiButtonFlags_FlattenChildren<sp/>|<sp/>ImGuiButtonFlags_AllowItemOverlap);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData.StatusFlags<sp/>|=<sp/>ImGuiItemStatusFlags_HoveredRect;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>IsItemHovered(),<sp/>because<sp/>bb_interact<sp/>is<sp/>larger<sp/>than<sp/>bb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetItemAllowOverlap();</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(held<sp/>||<sp/>(hovered<sp/>&amp;&amp;<sp/>g.HoveredIdPreviousFrame<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.HoveredIdTimer<sp/>&gt;=<sp/>hover_visibility_delay))</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetMouseCursor(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_Y<sp/>?<sp/>ImGuiMouseCursor_ResizeNS<sp/>:<sp/>ImGuiMouseCursor_ResizeEW);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb_render<sp/>=<sp/>bb;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(held)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>mouse_delta_2d<sp/>=<sp/>g.IO.MousePos<sp/>-<sp/>g.ActiveIdClickOffset<sp/>-<sp/>bb_interact.Min;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mouse_delta<sp/>=<sp/>(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_Y)<sp/>?<sp/>mouse_delta_2d.y<sp/>:<sp/>mouse_delta_2d.x;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>pane<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size_1_maximum_delta<sp/>=<sp/>ImMax(0.0f,<sp/>*<ref refid="group__gtx__std__based__type_1gaf471290b8165697d088a943263fc8af1" kindref="member">size1</ref><sp/>-<sp/>min_size1);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size_2_maximum_delta<sp/>=<sp/>ImMax(0.0f,<sp/>*<ref refid="group__gtx__std__based__type_1ga432937b68775c79e4556150e769c6e6b" kindref="member">size2</ref><sp/>-<sp/>min_size2);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mouse_delta<sp/>&lt;<sp/>-size_1_maximum_delta)</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouse_delta<sp/>=<sp/>-size_1_maximum_delta;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mouse_delta<sp/>&gt;<sp/>size_2_maximum_delta)</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouse_delta<sp/>=<sp/>size_2_maximum_delta;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>resize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mouse_delta<sp/>!=<sp/>0.0f)</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mouse_delta<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(*<ref refid="group__gtx__std__based__type_1gaf471290b8165697d088a943263fc8af1" kindref="member">size1</ref><sp/>+<sp/>mouse_delta<sp/>&gt;=<sp/>min_size1);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mouse_delta<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(*<ref refid="group__gtx__std__based__type_1ga432937b68775c79e4556150e769c6e6b" kindref="member">size2</ref><sp/>-<sp/>mouse_delta<sp/>&gt;=<sp/>min_size2);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group__gtx__std__based__type_1gaf471290b8165697d088a943263fc8af1" kindref="member">size1</ref><sp/>+=<sp/>mouse_delta;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group__gtx__std__based__type_1ga432937b68775c79e4556150e769c6e6b" kindref="member">size2</ref><sp/>-=<sp/>mouse_delta;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb_render.Translate((<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_X)<sp/>?<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(mouse_delta,<sp/>0.0f)<sp/>:<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>mouse_delta));</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>at<sp/>new<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg_col<sp/>&amp;<sp/>IM_COL32_A_MASK)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(bb_render.Min,<sp/>bb_render.Max,<sp/>bg_col,<sp/>0.0f);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col<sp/>=<sp/>GetColorU32(held<sp/>?<sp/>ImGuiCol_SeparatorActive<sp/>:<sp/>(hovered<sp/>&amp;&amp;<sp/>g.HoveredIdTimer<sp/>&gt;=<sp/>hover_visibility_delay)<sp/>?<sp/>ImGuiCol_SeparatorHovered<sp/>:<sp/>ImGuiCol_Separator);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(bb_render.Min,<sp/>bb_render.Max,<sp/>col,<sp/>0.0f);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>held;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IMGUI_CDECL<sp/>ShrinkWidthItemComparer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>rhs)</highlight></codeline>
<codeline lineno="1511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_shrink_width_item" kindref="compound">ImGuiShrinkWidthItem</ref>*<sp/>a<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_shrink_width_item" kindref="compound">ImGuiShrinkWidthItem</ref>*)lhs;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_shrink_width_item" kindref="compound">ImGuiShrinkWidthItem</ref>*<sp/>b<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_shrink_width_item" kindref="compound">ImGuiShrinkWidthItem</ref>*)rhs;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(b-&gt;Width<sp/>-<sp/>a-&gt;Width))</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b-&gt;Index<sp/>-<sp/>a-&gt;Index);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Shrink<sp/>excess<sp/>width<sp/>from<sp/>a<sp/>set<sp/>of<sp/>item,<sp/>by<sp/>removing<sp/>width<sp/>from<sp/>the<sp/>larger<sp/>items<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>items<sp/>Width<sp/>to<sp/>-1.0f<sp/>to<sp/>disable<sp/>shrinking<sp/>this<sp/>item.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::ShrinkWidths(<ref refid="struct_im_gui_shrink_width_item" kindref="compound">ImGuiShrinkWidthItem</ref>*<sp/>items,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width_excess)</highlight></codeline>
<codeline lineno="1522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(items[0].Width<sp/>&gt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items[0].Width<sp/>=<sp/>ImMax(items[0].Width<sp/>-<sp/>width_excess,<sp/>1.0f);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>ImQsort(items,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_gui_shrink_width_item" kindref="compound">ImGuiShrinkWidthItem</ref>),<sp/>ShrinkWidthItemComparer);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_same_width<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(width_excess<sp/>&gt;<sp/>0.0f<sp/>&amp;&amp;<sp/>count_same_width<sp/>&lt;<sp/>count)</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count_same_width<sp/>&lt;<sp/>count<sp/>&amp;&amp;<sp/>items[0].Width<sp/>&lt;=<sp/>items[count_same_width].Width)</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_same_width++;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_width_to_remove_per_item<sp/>=<sp/>(count_same_width<sp/>&lt;<sp/>count<sp/>&amp;&amp;<sp/>items[count_same_width].Width<sp/>&gt;=<sp/>0.0f)<sp/>?<sp/>(items[0].Width<sp/>-<sp/>items[count_same_width].Width)<sp/>:<sp/>(items[0].Width<sp/>-<sp/>1.0f);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_width_to_remove_per_item<sp/>&lt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width_to_remove_per_item<sp/>=<sp/>ImMin(width_excess<sp/>/<sp/>count_same_width,<sp/>max_width_to_remove_per_item);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>item_n<sp/>=<sp/>0;<sp/>item_n<sp/>&lt;<sp/>count_same_width;<sp/>item_n++)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items[item_n].Width<sp/>-=<sp/>width_to_remove_per_item;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_excess<sp/>-=<sp/>width_to_remove_per_item<sp/>*<sp/>count_same_width;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Round<sp/>width<sp/>and<sp/>redistribute<sp/>remainder<sp/>left-to-right<sp/>(could<sp/>make<sp/>it<sp/>an<sp/>option<sp/>of<sp/>the<sp/>function?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>e.g.<sp/>the<sp/>right-most<sp/>tab<sp/>of<sp/>a<sp/>shrunk<sp/>tab-bar<sp/>always<sp/>reaches<sp/>exactly<sp/>at<sp/>the<sp/>same<sp/>distance<sp/>from<sp/>the<sp/>right-most<sp/>edge<sp/>of<sp/>the<sp/>tab<sp/>bar<sp/>separator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>width_excess<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>count;<sp/>n++)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width_rounded<sp/>=<sp/>ImFloor(items[n].Width);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_excess<sp/>+=<sp/>items[n].Width<sp/>-<sp/>width_rounded;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items[n].Width<sp/>=<sp/>width_rounded;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width_excess<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>count;<sp/>n++)</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(items[n].Index<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(width_excess<sp/>+<sp/>0.01f))</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items[n].Width<sp/>+=<sp/>1.0f;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>ComboBox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>CalcMaxPopupHeightFromItemCount()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BeginCombo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BeginComboPopup()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>EndCombo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BeginComboPreview()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>EndComboPreview()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Combo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CalcMaxPopupHeightFromItemCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>items_count)</highlight></codeline>
<codeline lineno="1572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(items_count<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FLT_MAX;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(g.FontSize<sp/>+<sp/>g.Style.ItemSpacing.y)<sp/>*<sp/>items_count<sp/>-<sp/>g.Style.ItemSpacing.y<sp/>+<sp/>(g.Style.WindowPadding.y<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::BeginCombo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>preview_value,<sp/>ImGuiComboFlags<sp/>flags)</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNextWindowDataFlags<sp/>backup_next_window_data_flags<sp/>=<sp/>g.NextWindowData.Flags;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/>g.NextWindowData.ClearFlags();<sp/></highlight><highlight class="comment">//<sp/>We<sp/>behave<sp/>like<sp/>Begin()<sp/>and<sp/>need<sp/>to<sp/>consume<sp/>those<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT((flags<sp/>&amp;<sp/>(ImGuiComboFlags_NoArrowButton<sp/>|<sp/>ImGuiComboFlags_NoPreview))<sp/>!=<sp/>(ImGuiComboFlags_NoArrowButton<sp/>|<sp/>ImGuiComboFlags_NoPreview));<sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>both<sp/>flags<sp/>together</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arrow_size<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiComboFlags_NoArrowButton)<sp/>?<sp/>0.0f<sp/>:<sp/>GetFrameHeight();</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiComboFlags_NoPreview)<sp/>?<sp/>arrow_size<sp/>:<sp/>CalcItemWidth();</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(w,<sp/>label_size.y<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f));</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>total_bb(bb.Min,<sp/>bb.Max<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>label_size.x<sp/>:<sp/>0.0f,<sp/>0.0f));</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(total_bb,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;bb))</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>on<sp/>click</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/>popup_id<sp/>=<sp/>ImHashStr(</highlight><highlight class="stringliteral">&quot;##ComboPopup&quot;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>popup_open<sp/>=<sp/>IsPopupOpen(popup_id,<sp/>ImGuiPopupFlags_None);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed<sp/>&amp;&amp;<sp/>!popup_open)</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopupEx(popup_id,<sp/>ImGuiPopupFlags_None);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popup_open<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>shape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>frame_col<sp/>=<sp/>GetColorU32(hovered<sp/>?<sp/>ImGuiCol_FrameBgHovered<sp/>:<sp/>ImGuiCol_FrameBg);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value_x2<sp/>=<sp/>ImMax(bb.Min.x,<sp/>bb.Max.x<sp/>-<sp/>arrow_size);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiComboFlags_NoPreview))</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(bb.Min,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(value_x2,<sp/>bb.Max.y),<sp/>frame_col,<sp/>style.FrameRounding,<sp/>(flags<sp/>&amp;<sp/>ImGuiComboFlags_NoArrowButton)<sp/>?<sp/>ImDrawFlags_RoundCornersAll<sp/>:<sp/>ImDrawFlags_RoundCornersLeft);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiComboFlags_NoArrowButton))</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImU32<sp/>bg_col<sp/>=<sp/>GetColorU32((popup_open<sp/>||<sp/>hovered)<sp/>?<sp/>ImGuiCol_ButtonHovered<sp/>:<sp/>ImGuiCol_Button);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImU32<sp/>text_col<sp/>=<sp/>GetColorU32(ImGuiCol_Text);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(value_x2,<sp/>bb.Min.y),<sp/>bb.Max,<sp/>bg_col,<sp/>style.FrameRounding,<sp/>(w<sp/>&lt;=<sp/>arrow_size)<sp/>?<sp/>ImDrawFlags_RoundCornersAll<sp/>:<sp/>ImDrawFlags_RoundCornersRight);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_x2<sp/>+<sp/>arrow_size<sp/>-<sp/>style.FramePadding.x<sp/>&lt;=<sp/>bb.Max.x)</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrow(window-&gt;DrawList,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(value_x2<sp/>+<sp/>style.FramePadding.y,<sp/>bb.Min.y<sp/>+<sp/>style.FramePadding.y),<sp/>text_col,<sp/>ImGuiDir_Down,<sp/>1.0f);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderFrameBorder(bb.Min,<sp/>bb.Max,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Custom<sp/>preview</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiComboFlags_CustomPreview)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ComboPreviewData.PreviewRect<sp/>=<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(bb.Min.x,<sp/>bb.Min.y,<sp/>value_x2,<sp/>bb.Max.y);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(preview_value<sp/>==<sp/>NULL<sp/>||<sp/>preview_value[0]<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preview_value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>preview<sp/>and<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preview_value<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiComboFlags_NoPreview))</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled)</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSetNextTextDecoration(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTextClipped(bb.Min<sp/>+<sp/>style.FramePadding,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(value_x2,<sp/>bb.Max.y),<sp/>preview_value,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size.x<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Max.x<sp/>+<sp/>style.ItemInnerSpacing.x,<sp/>bb.Min.y<sp/>+<sp/>style.FramePadding.y),<sp/>label);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!popup_open)</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>g.NextWindowData.Flags<sp/>=<sp/>backup_next_window_data_flags;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BeginComboPopup(popup_id,<sp/>bb,<sp/>flags);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::BeginComboPopup(ImGuiID<sp/>popup_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiComboFlags<sp/>flags)</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsPopupOpen(popup_id,<sp/>ImGuiPopupFlags_None))</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NextWindowData.ClearFlags();</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>popup<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>bb.GetWidth();</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NextWindowData.Flags<sp/>&amp;<sp/>ImGuiNextWindowDataFlags_HasSizeConstraint)</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NextWindowData.SizeConstraintRect.Min.x<sp/>=<sp/>ImMax(g.NextWindowData.SizeConstraintRect.Min.x,<sp/>w);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiComboFlags_HeightMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiComboFlags_HeightRegular;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(ImIsPowerOfTwo(flags<sp/>&amp;<sp/>ImGuiComboFlags_HeightMask_));<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popup_max_height_in_items<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiComboFlags_HeightRegular)<sp/><sp/><sp/><sp/><sp/>popup_max_height_in_items<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiComboFlags_HeightSmall)<sp/><sp/>popup_max_height_in_items<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiComboFlags_HeightLarge)<sp/><sp/>popup_max_height_in_items<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextWindowSizeConstraints(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(w,<sp/>0.0f),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(FLT_MAX,<sp/>CalcMaxPopupHeightFromItemCount(popup_max_height_in_items)));</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>essentially<sp/>a<sp/>specialized<sp/>version<sp/>of<sp/>BeginPopupEx()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[16];</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFormatString(name,<sp/>IM_ARRAYSIZE(name),<sp/></highlight><highlight class="stringliteral">&quot;##Combo_%02d&quot;</highlight><highlight class="normal">,<sp/>g.BeginPopupStack.Size);<sp/></highlight><highlight class="comment">//<sp/>Recycle<sp/>windows<sp/>based<sp/>on<sp/>depth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>position<sp/>given<sp/>a<sp/>custom<sp/>constraint<sp/>(peak<sp/>into<sp/>expected<sp/>window<sp/>size<sp/>so<sp/>we<sp/>can<sp/>position<sp/>it)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>might<sp/>be<sp/>easier<sp/>to<sp/>express<sp/>with<sp/>an<sp/>hypothetical<sp/>SetNextWindowPosConstraints()<sp/>function?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>might<sp/>be<sp/>moved<sp/>to<sp/>Begin()<sp/>or<sp/>at<sp/>least<sp/>around<sp/>the<sp/>same<sp/>spot<sp/>where<sp/>Tooltips<sp/>and<sp/>other<sp/>Popups<sp/>are<sp/>calling<sp/>FindBestWindowPosForPopupEx()?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>popup_window<sp/>=<sp/>FindWindowByName(name))</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(popup_window-&gt;WasActive)</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>override<sp/>&apos;AutoPosLastDirection&apos;<sp/>to<sp/>not<sp/>leave<sp/>a<sp/>chance<sp/>for<sp/>a<sp/>past<sp/>value<sp/>to<sp/>affect<sp/>us.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size_expected<sp/>=<sp/>CalcWindowNextAutoFitSize(popup_window);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popup_window-&gt;AutoPosLastDirection<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiComboFlags_PopupAlignLeft)<sp/>?<sp/>ImGuiDir_Left<sp/>:<sp/>ImGuiDir_Down;<sp/></highlight><highlight class="comment">//<sp/>Left<sp/>=<sp/>&quot;Below,<sp/>Toward<sp/>Left&quot;,<sp/>Down<sp/>=<sp/>&quot;Below,<sp/>Toward<sp/>Right<sp/>(default)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>r_outer<sp/>=<sp/>GetPopupAllowedExtentRect(popup_window);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>FindBestWindowPosForPopupEx(bb.GetBL(),<sp/>size_expected,<sp/>&amp;popup_window-&gt;AutoPosLastDirection,<sp/>r_outer,<sp/>bb,<sp/>ImGuiPopupPositionPolicy_ComboBox);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextWindowPos(pos);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>use<sp/>BeginPopupEx()<sp/>solely<sp/>because<sp/>we<sp/>have<sp/>a<sp/>custom<sp/>name<sp/>string,<sp/>which<sp/>we<sp/>could<sp/>make<sp/>an<sp/>argument<sp/>to<sp/>BeginPopupEx()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowFlags<sp/>window_flags<sp/>=<sp/>ImGuiWindowFlags_AlwaysAutoResize<sp/>|<sp/>ImGuiWindowFlags_Popup<sp/>|<sp/>ImGuiWindowFlags_NoTitleBar<sp/>|<sp/>ImGuiWindowFlags_NoResize<sp/>|<sp/>ImGuiWindowFlags_NoSavedSettings<sp/>|<sp/>ImGuiWindowFlags_NoMove;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>PushStyleVar(ImGuiStyleVar_WindowPadding,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(g.Style.FramePadding.x,<sp/>g.Style.WindowPadding.y));<sp/></highlight><highlight class="comment">//<sp/>Horizontally<sp/>align<sp/>ourselves<sp/>with<sp/>the<sp/>framed<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>Begin(name,<sp/>NULL,<sp/>window_flags);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>PopStyleVar();</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndPopup();</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(0);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>never<sp/>happen<sp/>as<sp/>we<sp/>tested<sp/>for<sp/>IsPopupOpen()<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::EndCombo()</highlight></codeline>
<codeline lineno="1714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>EndPopup();</highlight></codeline>
<codeline lineno="1716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>directly<sp/>after<sp/>the<sp/>BeginCombo/EndCombo<sp/>block.<sp/>The<sp/>preview<sp/>is<sp/>designed<sp/>to<sp/>only<sp/>host<sp/>non-interactive<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Experimental,<sp/>see<sp/>GitHub<sp/>issues:<sp/>#1658,<sp/>#4168)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::BeginComboPreview()</highlight></codeline>
<codeline lineno="1721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_combo_preview_data" kindref="compound">ImGuiComboPreviewData</ref>*<sp/>preview_data<sp/>=<sp/>&amp;g.ComboPreviewData;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems<sp/>||<sp/>!window-&gt;ClipRect.Overlaps(g.LastItemData.Rect))<sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Because<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>ImGuiItemStatusFlags_Visible<sp/>flag<sp/>to<sp/>test<sp/>last<sp/>ItemAdd()<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(g.LastItemData.Rect.Min.x<sp/>==<sp/>preview_data-&gt;PreviewRect.Min.x<sp/>&amp;&amp;<sp/>g.LastItemData.Rect.Min.y<sp/>==<sp/>preview_data-&gt;PreviewRect.Min.y);<sp/></highlight><highlight class="comment">//<sp/>Didn&apos;t<sp/>call<sp/>after<sp/>BeginCombo/EndCombo<sp/>block<sp/>or<sp/>forgot<sp/>to<sp/>pass<sp/>ImGuiComboFlags_CustomPreview<sp/>flag?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;ClipRect.Contains(preview_data-&gt;PreviewRect))<sp/></highlight><highlight class="comment">//<sp/>Narrower<sp/>test<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>could<sp/>be<sp/>contained<sp/>in<sp/>a<sp/>PushWorkRect()<sp/>api</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>preview_data-&gt;BackupCursorPos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>preview_data-&gt;BackupCursorMaxPos<sp/>=<sp/>window-&gt;DC.CursorMaxPos;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>preview_data-&gt;BackupCursorPosPrevLine<sp/>=<sp/>window-&gt;DC.CursorPosPrevLine;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>preview_data-&gt;BackupPrevLineTextBaseOffset<sp/>=<sp/>window-&gt;DC.PrevLineTextBaseOffset;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>preview_data-&gt;BackupLayout<sp/>=<sp/>window-&gt;DC.LayoutType;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>preview_data-&gt;PreviewRect.Min<sp/>+<sp/>g.Style.FramePadding;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorMaxPos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.LayoutType<sp/>=<sp/>ImGuiLayoutType_Horizontal;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>PushClipRect(preview_data-&gt;PreviewRect.Min,<sp/>preview_data-&gt;PreviewRect.Max,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::EndComboPreview()</highlight></codeline>
<codeline lineno="1747"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_combo_preview_data" kindref="compound">ImGuiComboPreviewData</ref>*<sp/>preview_data<sp/>=<sp/>&amp;g.ComboPreviewData;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Using<sp/>CursorMaxPos<sp/>approximation<sp/>instead<sp/>of<sp/>correct<sp/>AABB<sp/>which<sp/>we<sp/>will<sp/>store<sp/>in<sp/>ImDrawCmd<sp/>in<sp/>the<sp/>future</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list<sp/>=<sp/>window-&gt;DrawList;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;DC.CursorMaxPos.x<sp/>&lt;<sp/>preview_data-&gt;PreviewRect.Max.x<sp/>&amp;&amp;<sp/>window-&gt;DC.CursorMaxPos.y<sp/>&lt;<sp/>preview_data-&gt;PreviewRect.Max.y)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(draw_list-&gt;CmdBuffer.Size<sp/>&gt;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>Unlikely<sp/>case<sp/>that<sp/>the<sp/>PushClipRect()<sp/>didn&apos;t<sp/>create<sp/>a<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;_CmdHeader.ClipRect<sp/>=<sp/>draw_list-&gt;CmdBuffer[draw_list-&gt;CmdBuffer.Size<sp/>-<sp/>1].ClipRect<sp/>=<sp/>draw_list-&gt;CmdBuffer[draw_list-&gt;CmdBuffer.Size<sp/>-<sp/>2].ClipRect;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;_TryMergeDrawCmds();</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/>PopClipRect();</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>preview_data-&gt;BackupCursorPos;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorMaxPos<sp/>=<sp/>ImMax(window-&gt;DC.CursorMaxPos,<sp/>preview_data-&gt;BackupCursorMaxPos);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPosPrevLine<sp/>=<sp/>preview_data-&gt;BackupCursorPosPrevLine;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.PrevLineTextBaseOffset<sp/>=<sp/>preview_data-&gt;BackupPrevLineTextBaseOffset;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.LayoutType<sp/>=<sp/>preview_data-&gt;BackupLayout;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>preview_data-&gt;PreviewRect<sp/>=<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>();</highlight></codeline>
<codeline lineno="1767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Getter<sp/>for<sp/>the<sp/>old<sp/>Combo()<sp/>API:<sp/>const<sp/>char*[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Items_ArrayGetter(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>out_text)</highlight></codeline>
<codeline lineno="1771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>items<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*)data;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_text)</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_text<sp/>=<sp/>items[idx];</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Getter<sp/>for<sp/>the<sp/>old<sp/>Combo()<sp/>API:<sp/>&quot;item1\0item2\0item3\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Items_SingleStringGetter(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>out_text)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>we<sp/>could<sp/>pre-compute<sp/>the<sp/>indices<sp/>to<sp/>fasten<sp/>this.<sp/>But<sp/>only<sp/>1<sp/>active<sp/>combo<sp/>means<sp/>the<sp/>waste<sp/>is<sp/>limited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>items_separated_by_zeros<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)data;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>items_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>items_separated_by_zeros;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>==<sp/>items_count)</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>strlen(p)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items_count++;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*p)</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_text)</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_text<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Old<sp/>API,<sp/>prefer<sp/>using<sp/>BeginCombo()<sp/>nowadays<sp/>if<sp/>you<sp/>can.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::Combo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>current_item,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>(*items_getter)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>items_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popup_max_height_in_items)</highlight></codeline>
<codeline lineno="1801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>getter<sp/>to<sp/>obtain<sp/>the<sp/>preview<sp/>string<sp/>which<sp/>is<sp/>a<sp/>parameter<sp/>to<sp/>BeginCombo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>preview_value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*current_item<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>*current_item<sp/>&lt;<sp/>items_count)</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items_getter(data,<sp/>*current_item,<sp/>&amp;preview_value);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>old<sp/>Combo()<sp/>API<sp/>exposed<sp/>&quot;popup_max_height_in_items&quot;.<sp/>The<sp/>new<sp/>more<sp/>general<sp/>BeginCombo()<sp/>API<sp/>doesn&apos;t<sp/>have/need<sp/>it,<sp/>but<sp/>we<sp/>emulate<sp/>it<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(popup_max_height_in_items<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>!(g.NextWindowData.Flags<sp/>&amp;<sp/>ImGuiNextWindowDataFlags_HasSizeConstraint))</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextWindowSizeConstraints(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(FLT_MAX,<sp/>CalcMaxPopupHeightFromItemCount(popup_max_height_in_items)));</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!BeginCombo(label,<sp/>preview_value,<sp/>ImGuiComboFlags_None))</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>Use<sp/>clipper<sp/>(but<sp/>we<sp/>need<sp/>to<sp/>disable<sp/>it<sp/>on<sp/>the<sp/>appearing<sp/>frame<sp/>to<sp/>make<sp/>sure<sp/>our<sp/>call<sp/>to<sp/>SetItemDefaultFocus()<sp/>is<sp/>processed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>items_count;<sp/>i++)</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushID(i);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>item_selected<sp/>=<sp/>(i<sp/>==<sp/>*current_item);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>item_text;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!items_getter(data,<sp/>i,<sp/>&amp;item_text))</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;*Unknown<sp/>item*&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Selectable(item_text,<sp/>item_selected))</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*current_item<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item_selected)</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetItemDefaultFocus();</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>EndCombo();</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed)</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(g.LastItemData.ID);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Combo<sp/>box<sp/>helper<sp/>allowing<sp/>to<sp/>pass<sp/>an<sp/>array<sp/>of<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::Combo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>current_item,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>items[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>items_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_in_items)</highlight></codeline>
<codeline lineno="1846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/>Combo(label,<sp/>current_item,<sp/>Items_ArrayGetter,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)items,<sp/>items_count,<sp/>height_in_items);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Combo<sp/>box<sp/>helper<sp/>allowing<sp/>to<sp/>pass<sp/>all<sp/>items<sp/>in<sp/>a<sp/>single<sp/>string<sp/>literal<sp/>holding<sp/>multiple<sp/>zero-terminated<sp/>items<sp/>&quot;item1\0item2\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::Combo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>current_item,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>items_separated_by_zeros,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_in_items)</highlight></codeline>
<codeline lineno="1853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>items_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>items_separated_by_zeros;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>Avoid<sp/>computing<sp/>this,<sp/>or<sp/>at<sp/>least<sp/>only<sp/>when<sp/>combo<sp/>is<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p)</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>strlen(p)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items_count++;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/>Combo(label,<sp/>current_item,<sp/>Items_SingleStringGetter,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)items_separated_by_zeros,<sp/>items_count,<sp/>height_in_items);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Data<sp/>Type<sp/>and<sp/>Data<sp/>Formatting<sp/>Helpers<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>PatchFormatStringFloatToInt()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DataTypeGetInfo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DataTypeFormatString()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DataTypeApplyOp()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DataTypeApplyOpFromText()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DataTypeClamp()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>GetMinimumStepAtDecimalPrecision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>RoundScalarWithFormat&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_data_type_info" kindref="compound">ImGuiDataTypeInfo</ref><sp/>GDataTypeInfo[]<sp/>=</highlight></codeline>
<codeline lineno="1879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;S8&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiDataType_S8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char),<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;U8&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(short),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;S16&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiDataType_S16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;U16&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;S32&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiDataType_S32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;U32&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImS64),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;S64&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;%I64d&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%I64d&quot;</highlight><highlight class="normal"><sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiDataType_S64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImU64),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;U64&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;%I64u&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%I64u&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImS64),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;S64&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;%lld&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%lld&quot;</highlight><highlight class="normal"><sp/><sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiDataType_S64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImU64),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;U64&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;%llu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%llu&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%.3f&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiDataType_Float<sp/>(float<sp/>are<sp/>promoted<sp/>to<sp/>double<sp/>in<sp/>va_arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;double&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>ImGuiDataType_Double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1896"><highlight class="normal">IM_STATIC_ASSERT(IM_ARRAYSIZE(GDataTypeInfo)<sp/>==<sp/>ImGuiDataType_COUNT);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME-LEGACY:<sp/>Prior<sp/>to<sp/>1.61<sp/>our<sp/>DragInt()<sp/>function<sp/>internally<sp/>used<sp/>floats<sp/>and<sp/>because<sp/>of<sp/>this<sp/>the<sp/>compile-time<sp/>default<sp/>value<sp/>for<sp/>format<sp/>was<sp/>&quot;%.0f&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>we<sp/>changed<sp/>the<sp/>compile-time<sp/>default,<sp/>we<sp/>expect<sp/>users<sp/>to<sp/>have<sp/>carried<sp/>%f<sp/>around,<sp/>which<sp/>would<sp/>break<sp/>the<sp/>display<sp/>of<sp/>DragInt()<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>honor<sp/>backward<sp/>compatibility<sp/>we<sp/>are<sp/>rewriting<sp/>the<sp/>format<sp/>string,<sp/>unless<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS<sp/>is<sp/>enabled.<sp/>What<sp/>could<sp/>possibly<sp/>go<sp/>wrong?!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>PatchFormatStringFloatToInt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt)</highlight></codeline>
<codeline lineno="1902"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[3]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[4]<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>Fast<sp/>legacy<sp/>path<sp/>for<sp/>&quot;%.0f&quot;<sp/>which<sp/>is<sp/>expected<sp/>to<sp/>be<sp/>the<sp/>most<sp/>common<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt_start<sp/>=<sp/>ImParseFormatFindStart(fmt);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>%<sp/>(if<sp/>any,<sp/>and<sp/>ignore<sp/>%%)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt_end<sp/>=<sp/>ImParseFormatFindEnd(fmt_start);<sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>end<sp/>of<sp/>format<sp/>specifier,<sp/>which<sp/>itself<sp/>is<sp/>an<sp/>exercise<sp/>of<sp/>confidence/recklessness<sp/>(because<sp/>snprintf<sp/>is<sp/>dependent<sp/>on<sp/>libc<sp/>or<sp/>user).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt_end<sp/>&gt;<sp/>fmt_start<sp/>&amp;&amp;<sp/>fmt_end[-1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt_start<sp/>==<sp/>fmt<sp/>&amp;&amp;<sp/>fmt_end[0]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatString(g.TempBuffer,<sp/>IM_ARRAYSIZE(g.TempBuffer),<sp/></highlight><highlight class="stringliteral">&quot;%.*s%%d%s&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(fmt_start<sp/>-<sp/>fmt),<sp/>fmt,<sp/>fmt_end);<sp/></highlight><highlight class="comment">//<sp/>Honor<sp/>leading<sp/>and<sp/>trailing<sp/>decorations,<sp/>but<sp/>lose<sp/>alignment/precision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.TempBuffer;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;DragInt():<sp/>Invalid<sp/>format<sp/>string!&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Old<sp/>versions<sp/>used<sp/>a<sp/>default<sp/>parameter<sp/>of<sp/>&quot;%.0f&quot;,<sp/>please<sp/>replace<sp/>with<sp/>e.g.<sp/>&quot;%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_data_type_info" kindref="compound">ImGuiDataTypeInfo</ref>*<sp/>ImGui::DataTypeGetInfo(ImGuiDataType<sp/>data_type)</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(data_type<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>data_type<sp/>&lt;<sp/>ImGuiDataType_COUNT);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;GDataTypeInfo[data_type];</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGui::DataTypeFormatString(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format)</highlight></codeline>
<codeline lineno="1929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Signedness<sp/>doesn&apos;t<sp/>matter<sp/>when<sp/>pushing<sp/>integer<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_S32<sp/>||<sp/>data_type<sp/>==<sp/>ImGuiDataType_U32)</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImFormatString(buf,<sp/>buf_size,<sp/>format,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*)p_data);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_S64<sp/>||<sp/>data_type<sp/>==<sp/>ImGuiDataType_U64)</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImFormatString(buf,<sp/>buf_size,<sp/>format,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*)p_data);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_Float)</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImFormatString(buf,<sp/>buf_size,<sp/>format,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)p_data);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_Double)</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImFormatString(buf,<sp/>buf_size,<sp/>format,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_data);</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_S8)</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImFormatString(buf,<sp/>buf_size,<sp/>format,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*)p_data);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_U8)</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImFormatString(buf,<sp/>buf_size,<sp/>format,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*)p_data);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_S16)</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImFormatString(buf,<sp/>buf_size,<sp/>format,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*)p_data);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_U16)</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImFormatString(buf,<sp/>buf_size,<sp/>format,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*)p_data);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(0);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::DataTypeApplyOp(ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structoutput" kindref="compound">output</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg2)</highlight></codeline>
<codeline lineno="1952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/>||<sp/>op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_type)</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S8:</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImS8*)<ref refid="structoutput" kindref="compound">output</ref><sp/><sp/>=<sp/>ImAddClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*)arg1,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*)arg2,<sp/><sp/>IM_S8_MIN,<sp/><sp/>IM_S8_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImS8*)<ref refid="structoutput" kindref="compound">output</ref><sp/><sp/>=<sp/>ImSubClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*)arg1,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*)arg2,<sp/><sp/>IM_S8_MIN,<sp/><sp/>IM_S8_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U8:</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImU8*)<ref refid="structoutput" kindref="compound">output</ref><sp/><sp/>=<sp/>ImAddClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*)arg1,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*)arg2,<sp/><sp/>IM_U8_MIN,<sp/><sp/>IM_U8_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImU8*)<ref refid="structoutput" kindref="compound">output</ref><sp/><sp/>=<sp/>ImSubClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*)arg1,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*)arg2,<sp/><sp/>IM_U8_MIN,<sp/><sp/>IM_U8_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S16:</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImS16*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImAddClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*)arg2,<sp/>IM_S16_MIN,<sp/>IM_S16_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImS16*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImSubClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*)arg2,<sp/>IM_S16_MIN,<sp/>IM_S16_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U16:</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImU16*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImAddClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*)arg2,<sp/>IM_U16_MIN,<sp/>IM_U16_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImU16*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImSubClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*)arg2,<sp/>IM_U16_MIN,<sp/>IM_U16_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S32:</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImS32*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImAddClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*)arg2,<sp/>IM_S32_MIN,<sp/>IM_S32_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImS32*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImSubClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*)arg2,<sp/>IM_S32_MIN,<sp/>IM_S32_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U32:</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImU32*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImAddClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*)arg2,<sp/>IM_U32_MIN,<sp/>IM_U32_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImU32*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImSubClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*)arg2,<sp/>IM_U32_MIN,<sp/>IM_U32_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S64:</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImS64*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImAddClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*)arg2,<sp/>IM_S64_MIN,<sp/>IM_S64_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImS64*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImSubClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*)arg2,<sp/>IM_S64_MIN,<sp/>IM_S64_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U64:</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImU64*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImAddClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*)arg2,<sp/>IM_U64_MIN,<sp/>IM_U64_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(ImU64*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>ImSubClampOverflow(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*)arg1,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*)arg2,<sp/>IM_U64_MIN,<sp/>IM_U64_MAX);<sp/>}</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_Float:</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)arg1<sp/>+<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)arg2;<sp/>}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)arg1<sp/>-<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)arg2;<sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_Double:</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)arg1<sp/>+<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)arg2;<sp/>}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)arg1<sp/>-<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)arg2;<sp/>}</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_COUNT:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(0);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="comment">//<sp/>User<sp/>can<sp/>input<sp/>math<sp/>operators<sp/>(e.g.<sp/>+100)<sp/>to<sp/>edit<sp/>a<sp/>numerical<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>This<sp/>is<sp/>_not_<sp/>a<sp/>full<sp/>expression<sp/>evaluator.<sp/>We<sp/>should<sp/>probably<sp/>add<sp/>one<sp/>and<sp/>replace<sp/>this<sp/>dumb<sp/>mess..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DataTypeApplyOpFromText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>initial_value_buf,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format)</highlight></codeline>
<codeline lineno="2004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ImCharIsBlankA(*buf))</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf++;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>support<sp/>&apos;-&apos;<sp/>op<sp/>because<sp/>it<sp/>would<sp/>conflict<sp/>with<sp/>inputing<sp/>negative<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instead<sp/>you<sp/>can<sp/>use<sp/>+-100<sp/>to<sp/>subtract<sp/>from<sp/>an<sp/>existing<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>op<sp/>=<sp/>buf[0];</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/>||<sp/>op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal"><sp/>||<sp/>op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf++;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ImCharIsBlankA(*buf))</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf++;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf[0])</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>value<sp/>in<sp/>an<sp/>opaque<sp/>buffer<sp/>so<sp/>we<sp/>can<sp/>compare<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>function<sp/>if<sp/>it<sp/>changed<sp/>at<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_data_type_info" kindref="compound">ImGuiDataTypeInfo</ref>*<sp/>type_info<sp/>=<sp/>DataTypeGetInfo(data_type);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_data_type_temp_storage" kindref="compound">ImGuiDataTypeTempStorage</ref><sp/>data_backup;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;data_backup,<sp/>p_data,<sp/>type_info-&gt;Size);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/>type_info-&gt;ScanFmt;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-LEGACY:<sp/>The<sp/>aim<sp/>is<sp/>to<sp/>remove<sp/>those<sp/>operators<sp/>and<sp/>write<sp/>a<sp/>proper<sp/>expression<sp/>evaluator<sp/>at<sp/>some<sp/>point..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg1i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_S32)</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>v<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)p_data;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg0i<sp/>=<sp/>*v;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg1f<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>&amp;&amp;<sp/>sscanf(initial_value_buf,<sp/>format,<sp/>&amp;arg0i)<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>operand<sp/>in<sp/>a<sp/>float<sp/>so<sp/>we<sp/>can<sp/>use<sp/>fractional<sp/>value<sp/>for<sp/>multipliers<sp/>(*1.1),<sp/>but<sp/>constant<sp/>always<sp/>parsed<sp/>as<sp/>integer<sp/>so<sp/>we<sp/>can<sp/>fit<sp/>big<sp/>integers<sp/>(e.g.<sp/>2000000003)<sp/>past<sp/>float<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;arg1i))<sp/>*v<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(arg0i<sp/>+<sp/>arg1i);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>(use<sp/>&quot;+-&quot;<sp/>to<sp/>subtract)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;arg1f))<sp/>*v<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(arg0i<sp/>*<sp/>arg1f);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multiply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;arg1f)<sp/>&amp;&amp;<sp/>arg1f<sp/>!=<sp/>0.0f)<sp/>*v<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(arg0i<sp/>/<sp/>arg1f);<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>Divide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(buf,<sp/>format,<sp/>&amp;arg1i)<sp/>==<sp/>1)<sp/>*v<sp/>=<sp/>arg1i;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_Float)</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>floats<sp/>we<sp/>have<sp/>to<sp/>ignore<sp/>format<sp/>with<sp/>precision<sp/>(e.g.<sp/>&quot;%.2f&quot;)<sp/>because<sp/>sscanf<sp/>doesn&apos;t<sp/>take<sp/>them<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>v<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)p_data;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg0f<sp/>=<sp/>*v,<sp/>arg1f<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>&amp;&amp;<sp/>sscanf(initial_value_buf,<sp/>format,<sp/>&amp;arg0f)<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(buf,<sp/>format,<sp/>&amp;arg1f)<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>*v<sp/>=<sp/>arg0f<sp/>+<sp/>arg1f;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>(use<sp/>&quot;+-&quot;<sp/>to<sp/>subtract)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*v<sp/>=<sp/>arg0f<sp/>*<sp/>arg1f;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multiply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1f<sp/>!=<sp/>0.0f)<sp/>*v<sp/>=<sp/>arg0f<sp/>/<sp/>arg1f;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Divide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>*v<sp/>=<sp/>arg1f;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_Double)</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>scanf<sp/>differentiate<sp/>float/double<sp/>unlike<sp/>printf<sp/>which<sp/>forces<sp/>everything<sp/>to<sp/>double<sp/>because<sp/>of<sp/>ellipsis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>v<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_data;</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arg0f<sp/>=<sp/>*v,<sp/>arg1f<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>&amp;&amp;<sp/>sscanf(initial_value_buf,<sp/>format,<sp/>&amp;arg0f)<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(buf,<sp/>format,<sp/>&amp;arg1f)<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>*v<sp/>=<sp/>arg0f<sp/>+<sp/>arg1f;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>(use<sp/>&quot;+-&quot;<sp/>to<sp/>subtract)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>{<sp/>*v<sp/>=<sp/>arg0f<sp/>*<sp/>arg1f;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multiply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1f<sp/>!=<sp/>0.0f)<sp/>*v<sp/>=<sp/>arg0f<sp/>/<sp/>arg1f;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Divide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>*v<sp/>=<sp/>arg1f;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_U32<sp/>||<sp/>data_type<sp/>==<sp/>ImGuiDataType_S64<sp/>||<sp/>data_type<sp/>==<sp/>ImGuiDataType_U64)</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>other<sp/>types<sp/>assign<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>bother<sp/>handling<sp/>support<sp/>for<sp/>legacy<sp/>operators<sp/>since<sp/>they<sp/>are<sp/>a<sp/>little<sp/>too<sp/>crappy.<sp/>Instead<sp/>we<sp/>will<sp/>later<sp/>implement<sp/>a<sp/>proper<sp/>expression<sp/>evaluator<sp/>in<sp/>the<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(buf,<sp/>format,<sp/>p_data)<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>types<sp/>need<sp/>a<sp/>32-bit<sp/>buffer<sp/>to<sp/>receive<sp/>the<sp/>result<sp/>from<sp/>scanf()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v32;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(buf,<sp/>format,<sp/>&amp;v32)<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_S8)</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(ImS8*)p_data<sp/>=<sp/>(ImS8)ImClamp(v32,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)IM_S8_MIN,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)IM_S8_MAX);</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_U8)</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(ImU8*)p_data<sp/>=<sp/>(ImU8)ImClamp(v32,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)IM_U8_MIN,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)IM_U8_MAX);</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_S16)</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(ImS16*)p_data<sp/>=<sp/>(ImS16)ImClamp(v32,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)IM_S16_MIN,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)IM_S16_MAX);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_U16)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(ImU16*)p_data<sp/>=<sp/>(ImU16)ImClamp(v32,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)IM_U16_MIN,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)IM_U16_MAX);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(0);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>memcmp(&amp;data_backup,<sp/>p_data,<sp/>type_info-&gt;Size)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataTypeCompareT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>rhs)</highlight></codeline>
<codeline lineno="2106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*lhs<sp/>&lt;<sp/>*rhs)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*lhs<sp/>&gt;<sp/>*rhs)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>+1;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGui::DataTypeCompare(ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg_1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg_2)</highlight></codeline>
<codeline lineno="2113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_type)</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S8:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeCompareT&lt;ImS8<sp/><sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*<sp/><sp/>)arg_1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*<sp/><sp/>)arg_2);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U8:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeCompareT&lt;ImU8<sp/><sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*<sp/><sp/>)arg_1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*<sp/><sp/>)arg_2);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S16:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeCompareT&lt;ImS16<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*<sp/>)arg_1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*<sp/>)arg_2);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U16:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeCompareT&lt;ImU16<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*<sp/>)arg_1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*<sp/>)arg_2);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S32:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeCompareT&lt;ImS32<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*<sp/>)arg_1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*<sp/>)arg_2);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U32:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeCompareT&lt;ImU32<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*<sp/>)arg_1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*<sp/>)arg_2);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S64:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeCompareT&lt;ImS64<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*<sp/>)arg_1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*<sp/>)arg_2);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U64:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeCompareT&lt;ImU64<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*<sp/>)arg_1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*<sp/>)arg_2);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_Float:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeCompareT&lt;float<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>)arg_1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>)arg_2);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_Double:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeCompareT&lt;double&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)arg_1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)arg_2);</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_COUNT:<sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(0);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DataTypeClampT(T*<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>v_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>v_max)</highlight></codeline>
<codeline lineno="2134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clamp,<sp/>both<sp/>sides<sp/>are<sp/>optional,<sp/>return<sp/>true<sp/>if<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_min<sp/>&amp;&amp;<sp/>*v<sp/>&lt;<sp/>*v_min)<sp/>{<sp/>*v<sp/>=<sp/>*v_min;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_max<sp/>&amp;&amp;<sp/>*v<sp/>&gt;<sp/>*v_max)<sp/>{<sp/>*v<sp/>=<sp/>*v_max;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DataTypeClamp(ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max)</highlight></codeline>
<codeline lineno="2142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_type)</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S8:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeClampT&lt;ImS8<sp/><sp/>&gt;((ImS8*<sp/><sp/>)p_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*<sp/><sp/>)p_min,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*<sp/><sp/>)p_max);</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U8:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeClampT&lt;ImU8<sp/><sp/>&gt;((ImU8*<sp/><sp/>)p_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*<sp/><sp/>)p_min,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*<sp/><sp/>)p_max);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S16:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeClampT&lt;ImS16<sp/>&gt;((ImS16*<sp/>)p_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*<sp/>)p_min,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*<sp/>)p_max);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U16:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeClampT&lt;ImU16<sp/>&gt;((ImU16*<sp/>)p_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*<sp/>)p_min,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*<sp/>)p_max);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S32:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeClampT&lt;ImS32<sp/>&gt;((ImS32*<sp/>)p_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*<sp/>)p_min,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*<sp/>)p_max);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U32:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeClampT&lt;ImU32<sp/>&gt;((ImU32*<sp/>)p_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*<sp/>)p_min,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*<sp/>)p_max);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S64:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeClampT&lt;ImS64<sp/>&gt;((ImS64*<sp/>)p_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*<sp/>)p_min,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*<sp/>)p_max);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U64:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeClampT&lt;ImU64<sp/>&gt;((ImU64*<sp/>)p_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*<sp/>)p_min,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*<sp/>)p_max);</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_Float:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeClampT&lt;float<sp/>&gt;((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>)p_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>)p_min,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>)p_max);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_Double:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypeClampT&lt;double&gt;((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_min,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_max);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_COUNT:<sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(0);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetMinimumStepAtDecimalPrecision(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimal_precision)</highlight></codeline>
<codeline lineno="2162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_steps[10]<sp/>=<sp/>{<sp/>1.0f,<sp/>0.1f,<sp/>0.01f,<sp/>0.001f,<sp/>0.0001f,<sp/>0.00001f,<sp/>0.000001f,<sp/>0.0000001f,<sp/>0.00000001f,<sp/>0.000000001f<sp/>};</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decimal_precision<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FLT_MIN;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(decimal_precision<sp/>&lt;<sp/>IM_ARRAYSIZE(min_steps))<sp/>?<sp/>min_steps[decimal_precision]<sp/>:<sp/>ImPow(10.0f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-decimal_precision);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ImAtoi(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src,<sp/>TYPE*<sp/><ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="2171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>negative<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*src<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>negative<sp/>=<sp/>1;<sp/>src++;<sp/>}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*src<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{<sp/>src++;<sp/>}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE<sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*src<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*src<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>*<sp/>10)<sp/>+<sp/>(*src++<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>negative<sp/>?<sp/>-v<sp/>:<sp/>v;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>src;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sanitize<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Zero<sp/>terminate<sp/>so<sp/>extra<sp/>characters<sp/>after<sp/>format<sp/>(e.g.<sp/>&quot;%f123&quot;)<sp/>don&apos;t<sp/>confuse<sp/>atof/atoi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>stb_sprintf.h<sp/>supports<sp/>several<sp/>new<sp/>modifiers<sp/>which<sp/>format<sp/>numbers<sp/>in<sp/>a<sp/>way<sp/>that<sp/>also<sp/>makes<sp/>them<sp/>incompatible<sp/>atof/atoi.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SanitizeFormatString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt_out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fmt_out_size)</highlight></codeline>
<codeline lineno="2186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_UNUSED(fmt_out_size);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt_end<sp/>=<sp/>ImParseFormatFindEnd(fmt);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(fmt_end<sp/>-<sp/>fmt<sp/>+<sp/>1)<sp/>&lt;<sp/>fmt_out_size);<sp/></highlight><highlight class="comment">//<sp/>Format<sp/>is<sp/>too<sp/>long,<sp/>let<sp/>us<sp/>know<sp/>if<sp/>this<sp/>happens<sp/>to<sp/>you!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fmt<sp/>&lt;<sp/>fmt_end)</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*(fmt++);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;$&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>Custom<sp/>flags<sp/>provided<sp/>by<sp/>stb_sprintf.h.<sp/>POSIX<sp/>2008<sp/>also<sp/>supports<sp/>&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(fmt_out++)<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/>*fmt_out<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Zero-terminate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SIGNEDTYPE&gt;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal">TYPE<sp/>ImGui::RoundScalarWithFormatT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiDataType<sp/>data_type,<sp/>TYPE<sp/>v)</highlight></codeline>
<codeline lineno="2201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt_start<sp/>=<sp/>ImParseFormatFindStart(format);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt_start[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal"><sp/>||<sp/>fmt_start[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>apply<sp/>if<sp/>the<sp/>value<sp/>is<sp/>not<sp/>visible<sp/>in<sp/>the<sp/>format<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanitize<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fmt_sanitized[32];</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>SanitizeFormatString(fmt_start,<sp/>fmt_sanitized,<sp/>IM_ARRAYSIZE(fmt_sanitized));</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_start<sp/>=<sp/>fmt_sanitized;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Format<sp/>value<sp/>with<sp/>our<sp/>rounding,<sp/>and<sp/>read<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v_str[64];</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFormatString(v_str,<sp/>IM_ARRAYSIZE(v_str),<sp/>fmt_start,<sp/>v);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>v_str;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p++;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_Float<sp/>||<sp/>data_type<sp/>==<sp/>ImGuiDataType_Double)</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(TYPE)ImAtof(p);</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImAtoi(p,<sp/>(SIGNEDTYPE*)&amp;v);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>DragScalar,<sp/>DragFloat,<sp/>DragInt,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragBehaviorT&lt;&gt;()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragBehavior()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragScalar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragScalarN()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragFloat()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragFloat2()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragFloat3()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragFloat4()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragFloatRange2()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragInt()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragInt2()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragInt3()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragInt4()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>DragIntRange2()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>called<sp/>by<sp/>DragBehavior()<sp/>when<sp/>the<sp/>widget<sp/>is<sp/>active<sp/>(held<sp/>by<sp/>mouse<sp/>or<sp/>being<sp/>manipulated<sp/>with<sp/>Nav<sp/>controls)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SIGNEDTYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FLOATTYPE&gt;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragBehaviorT(ImGuiDataType<sp/>data_type,<sp/>TYPE*<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE<sp/>v_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE<sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_Vertical)<sp/>?<sp/>ImGuiAxis_Y<sp/>:<sp/>ImGuiAxis_X;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_clamped<sp/>=<sp/>(v_min<sp/>&lt;<sp/>v_max);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_logarithmic<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_Logarithmic)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_floating_point<sp/>=<sp/>(data_type<sp/>==<sp/>ImGuiDataType_Float)<sp/>||<sp/>(data_type<sp/>==<sp/>ImGuiDataType_Double);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>tweak<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_speed<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/>is_clamped<sp/>&amp;&amp;<sp/>(v_max<sp/>-<sp/>v_min<sp/>&lt;<sp/>FLT_MAX))</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_speed<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((v_max<sp/>-<sp/>v_min)<sp/>*<sp/>g.DragSpeedDefaultRatio);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inputs<sp/>accumulates<sp/>into<sp/>g.DragCurrentAccum,<sp/>which<sp/>is<sp/>flushed<sp/>into<sp/>the<sp/>current<sp/>value<sp/>as<sp/>soon<sp/>as<sp/>it<sp/>makes<sp/>a<sp/>difference<sp/>with<sp/>our<sp/>precision<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>adjust_delta<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdSource<sp/>==<sp/>ImGuiInputSource_Mouse<sp/>&amp;&amp;<sp/>IsMousePosValid()<sp/>&amp;&amp;<sp/>IsMouseDragPastThreshold(0,<sp/>g.IO.MouseDragThreshold<sp/>*<sp/>DRAG_MOUSE_THRESHOLD_FACTOR))</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_delta<sp/>=<sp/>g.IO.MouseDelta[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>];</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.IO.KeyAlt)</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_delta<sp/>*=<sp/>1.0f<sp/>/<sp/>100.0f;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.IO.KeyShift)</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_delta<sp/>*=<sp/>10.0f;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdSource<sp/>==<sp/>ImGuiInputSource_Nav)</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimal_precision<sp/>=<sp/>is_floating_point<sp/>?<sp/>ImParseFormatPrecision(format,<sp/>3)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_delta<sp/>=<sp/>GetNavInputAmount2d(ImGuiNavDirSourceFlags_Keyboard<sp/>|<sp/>ImGuiNavDirSourceFlags_PadDPad,<sp/>ImGuiInputReadMode_RepeatFast,<sp/>1.0f<sp/>/<sp/>10.0f,<sp/>10.0f)[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>];</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_speed<sp/>=<sp/>ImMax(v_speed,<sp/>GetMinimumStepAtDecimalPrecision(decimal_precision));</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>adjust_delta<sp/>*=<sp/>v_speed;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>vertical<sp/>drag<sp/>we<sp/>currently<sp/>assume<sp/>that<sp/>Up=higher<sp/>value<sp/>(like<sp/>we<sp/>do<sp/>with<sp/>vertical<sp/>sliders).<sp/>This<sp/>may<sp/>become<sp/>a<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_Y)</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_delta<sp/>=<sp/>-adjust_delta;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>logarithmic<sp/>use<sp/>our<sp/>range<sp/>is<sp/>effectively<sp/>0..1<sp/>so<sp/>scale<sp/>the<sp/>delta<sp/>into<sp/>that<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_logarithmic<sp/>&amp;&amp;<sp/>(v_max<sp/>-<sp/>v_min<sp/>&lt;<sp/>FLT_MAX)<sp/>&amp;&amp;<sp/>((v_max<sp/>-<sp/>v_min)<sp/>&gt;<sp/>0.000001f))<sp/></highlight><highlight class="comment">//<sp/>Epsilon<sp/>to<sp/>avoid<sp/>/0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_delta<sp/>/=<sp/>(float)(v_max<sp/>-<sp/>v_min);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>current<sp/>value<sp/>on<sp/>activation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>altering<sp/>values<sp/>and<sp/>clamping<sp/>when<sp/>we<sp/>are<sp/>_already_<sp/>past<sp/>the<sp/>limits<sp/>and<sp/>heading<sp/>in<sp/>the<sp/>same<sp/>direction,<sp/>so<sp/>e.g.<sp/>if<sp/>range<sp/>is<sp/>0..255,<sp/>current<sp/>value<sp/>is<sp/>300<sp/>and<sp/>we<sp/>are<sp/>pushing<sp/>to<sp/>the<sp/>right<sp/>side,<sp/>keep<sp/>the<sp/>300.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_just_activated<sp/>=<sp/>g.ActiveIdIsJustActivated;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_already_past_limits_and_pushing_outward<sp/>=<sp/>is_clamped<sp/>&amp;&amp;<sp/>((*v<sp/>&gt;=<sp/>v_max<sp/>&amp;&amp;<sp/>adjust_delta<sp/>&gt;<sp/>0.0f)<sp/>||<sp/>(*v<sp/>&lt;=<sp/>v_min<sp/>&amp;&amp;<sp/>adjust_delta<sp/>&lt;<sp/>0.0f));</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_just_activated<sp/>||<sp/>is_already_past_limits_and_pushing_outward)</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.DragCurrentAccum<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.DragCurrentAccumDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adjust_delta<sp/>!=<sp/>0.0f)</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.DragCurrentAccum<sp/>+=<sp/>adjust_delta;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.DragCurrentAccumDirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g.DragCurrentAccumDirty)</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE<sp/>v_cur<sp/>=<sp/>*v;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>FLOATTYPE<sp/>v_old_ref_for_accum_remainder<sp/>=<sp/>(FLOATTYPE)0.0f;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>logarithmic_zero_epsilon<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>valid<sp/>when<sp/>is_logarithmic<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_deadzone_halfsize<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>Drag<sp/>widgets<sp/>have<sp/>no<sp/>deadzone<sp/>(as<sp/>it<sp/>doesn&apos;t<sp/>make<sp/>sense)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_logarithmic)</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>using<sp/>logarithmic<sp/>sliders,<sp/>we<sp/>need<sp/>to<sp/>clamp<sp/>to<sp/>avoid<sp/>hitting<sp/>zero,<sp/>but<sp/>our<sp/>choice<sp/>of<sp/>clamp<sp/>value<sp/>greatly<sp/>affects<sp/>slider<sp/>precision.<sp/>We<sp/>attempt<sp/>to<sp/>use<sp/>the<sp/>specified<sp/>precision<sp/>to<sp/>estimate<sp/>a<sp/>good<sp/>lower<sp/>bound.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimal_precision<sp/>=<sp/>is_floating_point<sp/>?<sp/>ImParseFormatPrecision(format,<sp/>3)<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logarithmic_zero_epsilon<sp/>=<sp/>ImPow(0.1f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)decimal_precision);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>parametric<sp/>space,<sp/>apply<sp/>delta,<sp/>convert<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_old_parametric<sp/>=<sp/>ScaleRatioFromValueT&lt;TYPE,<sp/>SIGNEDTYPE,<sp/>FLOATTYPE&gt;(data_type,<sp/>v_cur,<sp/>v_min,<sp/>v_max,<sp/>is_logarithmic,<sp/>logarithmic_zero_epsilon,<sp/>zero_deadzone_halfsize);</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_new_parametric<sp/>=<sp/>v_old_parametric<sp/>+<sp/>g.DragCurrentAccum;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_cur<sp/>=<sp/>ScaleValueFromRatioT&lt;TYPE,<sp/>SIGNEDTYPE,<sp/>FLOATTYPE&gt;(data_type,<sp/>v_new_parametric,<sp/>v_min,<sp/>v_max,<sp/>is_logarithmic,<sp/>logarithmic_zero_epsilon,<sp/>zero_deadzone_halfsize);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_old_ref_for_accum_remainder<sp/>=<sp/>v_old_parametric;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_cur<sp/>+=<sp/>(SIGNEDTYPE)g.DragCurrentAccum;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Round<sp/>to<sp/>user<sp/>desired<sp/>precision<sp/>based<sp/>on<sp/>format<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiSliderFlags_NoRoundToFormat))</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_cur<sp/>=<sp/>RoundScalarWithFormatT&lt;TYPE,<sp/>SIGNEDTYPE&gt;(format,<sp/>data_type,<sp/>v_cur);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preserve<sp/>remainder<sp/>after<sp/>rounding<sp/>has<sp/>been<sp/>applied.<sp/>This<sp/>also<sp/>allow<sp/>slow<sp/>tweaking<sp/>of<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/>g.DragCurrentAccumDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_logarithmic)</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>parametric<sp/>space,<sp/>apply<sp/>delta,<sp/>convert<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_new_parametric<sp/>=<sp/>ScaleRatioFromValueT&lt;TYPE,<sp/>SIGNEDTYPE,<sp/>FLOATTYPE&gt;(data_type,<sp/>v_cur,<sp/>v_min,<sp/>v_max,<sp/>is_logarithmic,<sp/>logarithmic_zero_epsilon,<sp/>zero_deadzone_halfsize);</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.DragCurrentAccum<sp/>-=<sp/>(float)(v_new_parametric<sp/>-<sp/>v_old_ref_for_accum_remainder);</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.DragCurrentAccum<sp/>-=<sp/>(float)((SIGNEDTYPE)v_cur<sp/>-<sp/>(SIGNEDTYPE)*v);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lose<sp/>zero<sp/>sign<sp/>for<sp/>float/double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_cur<sp/>==<sp/>(TYPE)-0)</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_cur<sp/>=<sp/>(TYPE)0;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clamp<sp/>values<sp/>(+<sp/>handle<sp/>overflow/wrap-around<sp/>for<sp/>integer<sp/>types)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*v<sp/>!=<sp/>v_cur<sp/>&amp;&amp;<sp/>is_clamped)</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_cur<sp/>&lt;<sp/>v_min<sp/>||<sp/>(v_cur<sp/>&gt;<sp/>*v<sp/>&amp;&amp;<sp/>adjust_delta<sp/>&lt;<sp/>0.0f<sp/>&amp;&amp;<sp/>!is_floating_point))</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_cur<sp/>=<sp/>v_min;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_cur<sp/>&gt;<sp/>v_max<sp/>||<sp/>(v_cur<sp/>&lt;<sp/>*v<sp/>&amp;&amp;<sp/>adjust_delta<sp/>&gt;<sp/>0.0f<sp/>&amp;&amp;<sp/>!is_floating_point))</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_cur<sp/>=<sp/>v_max;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*v<sp/>==<sp/>v_cur)</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>*v<sp/>=<sp/>v_cur;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragBehavior(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>imgui.cpp<sp/>&quot;API<sp/>BREAKING<sp/>CHANGES&quot;<sp/>section<sp/>for<sp/>1.78<sp/>if<sp/>you<sp/>hit<sp/>this<sp/>assert.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT((flags<sp/>==<sp/>1<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_InvalidMask_)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>ImGuiSliderFlags<sp/>flags!<sp/>Has<sp/>the<sp/>&apos;float<sp/>power&apos;<sp/>argument<sp/>been<sp/>mistakenly<sp/>cast<sp/>to<sp/>flags?<sp/>Call<sp/>function<sp/>with<sp/>ImGuiSliderFlags_Logarithmic<sp/>flags<sp/>instead.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdSource<sp/>==<sp/>ImGuiInputSource_Mouse<sp/>&amp;&amp;<sp/>!g.IO.MouseDown[0])</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdSource<sp/>==<sp/>ImGuiInputSource_Nav<sp/>&amp;&amp;<sp/>g.NavActivatePressedId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!g.ActiveIdIsJustActivated)</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((g.LastItemData.InFlags<sp/>&amp;<sp/>ImGuiItemFlags_ReadOnly)<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_ReadOnly))</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_type)</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S8:<sp/><sp/><sp/><sp/><sp/>{<sp/>ImS32<sp/>v32<sp/>=<sp/>(ImS32)*(ImS8*)p_v;<sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>DragBehaviorT&lt;ImS32,<sp/>ImS32,<sp/>float&gt;(ImGuiDataType_S32,<sp/>&amp;v32,<sp/>v_speed,<sp/>p_min<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*)<sp/>p_min<sp/>:<sp/>IM_S8_MIN,<sp/><sp/>p_max<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*)p_max<sp/><sp/>:<sp/>IM_S8_MAX,<sp/><sp/>format,<sp/>flags);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>*(ImS8*)p_v<sp/>=<sp/>(ImS8)v32;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U8:<sp/><sp/><sp/><sp/><sp/>{<sp/>ImU32<sp/>v32<sp/>=<sp/>(ImU32)*(ImU8*)p_v;<sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>DragBehaviorT&lt;ImU32,<sp/>ImS32,<sp/>float&gt;(ImGuiDataType_U32,<sp/>&amp;v32,<sp/>v_speed,<sp/>p_min<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*)<sp/>p_min<sp/>:<sp/>IM_U8_MIN,<sp/><sp/>p_max<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*)p_max<sp/><sp/>:<sp/>IM_U8_MAX,<sp/><sp/>format,<sp/>flags);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>*(ImU8*)p_v<sp/>=<sp/>(ImU8)v32;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S16:<sp/><sp/><sp/><sp/>{<sp/>ImS32<sp/>v32<sp/>=<sp/>(ImS32)*(ImS16*)p_v;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>DragBehaviorT&lt;ImS32,<sp/>ImS32,<sp/>float&gt;(ImGuiDataType_S32,<sp/>&amp;v32,<sp/>v_speed,<sp/>p_min<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*)p_min<sp/>:<sp/>IM_S16_MIN,<sp/>p_max<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*)p_max<sp/>:<sp/>IM_S16_MAX,<sp/>format,<sp/>flags);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>*(ImS16*)p_v<sp/>=<sp/>(ImS16)v32;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U16:<sp/><sp/><sp/><sp/>{<sp/>ImU32<sp/>v32<sp/>=<sp/>(ImU32)*(ImU16*)p_v;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>DragBehaviorT&lt;ImU32,<sp/>ImS32,<sp/>float&gt;(ImGuiDataType_U32,<sp/>&amp;v32,<sp/>v_speed,<sp/>p_min<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*)p_min<sp/>:<sp/>IM_U16_MIN,<sp/>p_max<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*)p_max<sp/>:<sp/>IM_U16_MAX,<sp/>format,<sp/>flags);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>*(ImU16*)p_v<sp/>=<sp/>(ImU16)v32;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S32:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragBehaviorT&lt;ImS32,<sp/>ImS32,<sp/>float<sp/>&gt;(data_type,<sp/>(ImS32*)p_v,<sp/><sp/>v_speed,<sp/>p_min<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*<sp/>)p_min<sp/>:<sp/>IM_S32_MIN,<sp/>p_max<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*<sp/>)p_max<sp/>:<sp/>IM_S32_MAX,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U32:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragBehaviorT&lt;ImU32,<sp/>ImS32,<sp/>float<sp/>&gt;(data_type,<sp/>(ImU32*)p_v,<sp/><sp/>v_speed,<sp/>p_min<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*<sp/>)p_min<sp/>:<sp/>IM_U32_MIN,<sp/>p_max<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*<sp/>)p_max<sp/>:<sp/>IM_U32_MAX,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S64:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragBehaviorT&lt;ImS64,<sp/>ImS64,<sp/>double&gt;(data_type,<sp/>(ImS64*)p_v,<sp/><sp/>v_speed,<sp/>p_min<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*<sp/>)p_min<sp/>:<sp/>IM_S64_MIN,<sp/>p_max<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*<sp/>)p_max<sp/>:<sp/>IM_S64_MAX,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U64:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragBehaviorT&lt;ImU64,<sp/>ImS64,<sp/>double&gt;(data_type,<sp/>(ImU64*)p_v,<sp/><sp/>v_speed,<sp/>p_min<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*<sp/>)p_min<sp/>:<sp/>IM_U64_MIN,<sp/>p_max<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*<sp/>)p_max<sp/>:<sp/>IM_U64_MAX,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_Float:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragBehaviorT&lt;float,<sp/>float,<sp/>float<sp/>&gt;(data_type,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)p_v,<sp/><sp/>v_speed,<sp/>p_min<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>)p_min<sp/>:<sp/>-FLT_MAX,<sp/><sp/><sp/>p_max<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>)p_max<sp/>:<sp/>FLT_MAX,<sp/><sp/><sp/><sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_Double:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragBehaviorT&lt;double,double,double&gt;(data_type,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_v,<sp/>v_speed,<sp/>p_min<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_min<sp/>:<sp/>-DBL_MAX,<sp/><sp/><sp/>p_max<sp/>?<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_max<sp/>:<sp/>DBL_MAX,<sp/><sp/><sp/><sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_COUNT:<sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(0);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>p_data,<sp/>p_min<sp/>and<sp/>p_max<sp/>are<sp/>_pointers_<sp/>to<sp/>a<sp/>memory<sp/>address<sp/>holding<sp/>the<sp/>data.<sp/>For<sp/>a<sp/>Drag<sp/>widget,<sp/>p_min<sp/>and<sp/>p_max<sp/>are<sp/>optional.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>code<sp/>of<sp/>e.g.<sp/>DragFloat(),<sp/>DragInt()<sp/>etc.<sp/>or<sp/>examples<sp/>in<sp/>&apos;Demo-&gt;Widgets-&gt;Data<sp/>Types&apos;<sp/>to<sp/>understand<sp/>how<sp/>to<sp/>use<sp/>this<sp/>function<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragScalar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>CalcItemWidth();</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>frame_bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(w,<sp/>label_size.y<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f));</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>total_bb(frame_bb.Min,<sp/>frame_bb.Max<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>label_size.x<sp/>:<sp/>0.0f,<sp/>0.0f));</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>temp_input_allowed<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_NoInput)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(total_bb,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;frame_bb,<sp/>temp_input_allowed<sp/>?<sp/>ImGuiItemFlags_Inputable<sp/>:<sp/>0))</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>format<sp/>string<sp/>when<sp/>passing<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/>DataTypeGetInfo(data_type)-&gt;PrintFmt;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_S32<sp/>&amp;&amp;<sp/>strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>(FIXME-LEGACY:<sp/>Patch<sp/>old<sp/>&quot;%.0f&quot;<sp/>format<sp/>string<sp/>to<sp/>use<sp/>&quot;%d&quot;,<sp/>read<sp/>function<sp/>more<sp/>details.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/>PatchFormatStringFloatToInt(format);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tabbing<sp/>or<sp/>CTRL-clicking<sp/>on<sp/>Drag<sp/>turns<sp/>it<sp/>into<sp/>an<sp/>InputText</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered<sp/>=<sp/>ItemHoverable(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>temp_input_is_active<sp/>=<sp/>temp_input_allowed<sp/>&amp;&amp;<sp/>TempInputIsActive(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!temp_input_is_active)</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_requested_by_tabbing<sp/>=<sp/>temp_input_allowed<sp/>&amp;&amp;<sp/>(g.LastItemData.StatusFlags<sp/>&amp;<sp/>ImGuiItemStatusFlags_FocusedByTabbing)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clicked<sp/>=<sp/>(hovered<sp/>&amp;&amp;<sp/>g.IO.MouseClicked[0]);</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>double_clicked<sp/>=<sp/>(hovered<sp/>&amp;&amp;<sp/>g.IO.MouseClickedCount[0]<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_requested_by_tabbing<sp/>||<sp/>clicked<sp/>||<sp/>double_clicked<sp/>||<sp/>g.NavActivateId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>||<sp/>g.NavActivateInputId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFocusID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusWindow(window);</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdUsingNavDirMask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiDir_Left)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiDir_Right);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_input_allowed)</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_requested_by_tabbing<sp/>||<sp/>(clicked<sp/>&amp;&amp;<sp/>g.IO.KeyCtrl)<sp/>||<sp/>double_clicked<sp/>||<sp/>g.NavActivateInputId<sp/>==<sp/>id)</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_input_is_active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Experimental:<sp/>simple<sp/>click<sp/>(without<sp/>moving)<sp/>turns<sp/>Drag<sp/>into<sp/>an<sp/>InputText</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.IO.ConfigDragClickToInputText<sp/>&amp;&amp;<sp/>temp_input_allowed<sp/>&amp;&amp;<sp/>!temp_input_is_active)</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>hovered<sp/>&amp;&amp;<sp/>g.IO.MouseReleased[0]<sp/>&amp;&amp;<sp/>!IsMouseDragPastThreshold(0,<sp/>g.IO.MouseDragThreshold<sp/>*<sp/>DRAG_MOUSE_THRESHOLD_FACTOR))</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavActivateId<sp/>=<sp/>g.NavActivateInputId<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavActivateFlags<sp/>=<sp/>ImGuiActivateFlags_PreferInput;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_input_is_active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_input_is_active)</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>clamp<sp/>CTRL+Click<sp/>input<sp/>when<sp/>ImGuiSliderFlags_AlwaysClamp<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_clamp_input<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_AlwaysClamp)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(p_min<sp/>==<sp/>NULL<sp/>||<sp/>p_max<sp/>==<sp/>NULL<sp/>||<sp/>DataTypeCompare(data_type,<sp/>p_min,<sp/>p_max)<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TempInputScalar(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>data_type,<sp/>p_data,<sp/>format,<sp/>is_clamp_input<sp/>?<sp/>p_min<sp/>:<sp/>NULL,<sp/>is_clamp_input<sp/>?<sp/>p_max<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>frame_col<sp/>=<sp/>GetColorU32(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>?<sp/>ImGuiCol_FrameBgActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_FrameBgHovered<sp/>:<sp/>ImGuiCol_FrameBg);</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderFrame(frame_bb.Min,<sp/>frame_bb.Max,<sp/>frame_col,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drag<sp/>behavior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/>DragBehavior(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>data_type,<sp/>p_data,<sp/>v_speed,<sp/>p_min,<sp/>p_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed)</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>value<sp/>using<sp/>user-provided<sp/>display<sp/>format<sp/>so<sp/>user<sp/>can<sp/>add<sp/>prefix/suffix/decorations<sp/>to<sp/>the<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value_buf[64];</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value_buf_end<sp/>=<sp/>value_buf<sp/>+<sp/>DataTypeFormatString(value_buf,<sp/>IM_ARRAYSIZE(value_buf),<sp/>data_type,<sp/>p_data,<sp/>format);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled)</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSetNextTextDecoration(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderTextClipped(frame_bb.Min,<sp/>frame_bb.Max,<sp/>value_buf,<sp/>value_buf_end,<sp/>NULL,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.5f,<sp/>0.5f));</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size.x<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(frame_bb.Max.x<sp/>+<sp/>style.ItemInnerSpacing.x,<sp/>frame_bb.Min.y<sp/>+<sp/>style.FramePadding.y),<sp/>label);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags);</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragScalarN(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>components,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginGroup();</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(label);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/>PushMultiItemsWidths(components,<sp/>CalcItemWidth());</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>type_size<sp/>=<sp/>GDataTypeInfo[data_type].Size;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>components;<sp/>i++)</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushID(i);</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>g.Style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>|=<sp/>DragScalar(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>data_type,<sp/>p_data,<sp/>v_speed,<sp/>p_min,<sp/>p_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopItemWidth();</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_data<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)p_data<sp/>+<sp/>type_size);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_end<sp/>=<sp/>FindRenderedTextEnd(label);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>!=<sp/>label_end)</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>g.Style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(label,<sp/>label_end);</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragFloat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragScalar(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>v_speed,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragFloat2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragScalarN(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>2,<sp/>v_speed,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragFloat3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v[3],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragScalarN(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>3,<sp/>v_speed,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragFloat4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v[4],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragScalarN(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>4,<sp/>v_speed,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>You<sp/>likely<sp/>want<sp/>to<sp/>specify<sp/>the<sp/>ImGuiSliderFlags_AlwaysClamp<sp/>when<sp/>using<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragFloatRange2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>v_current_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>v_current_max,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format_max,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(label);</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginGroup();</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/>PushMultiItemsWidths(2,<sp/>CalcItemWidth());</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_min<sp/>=<sp/>(v_min<sp/>&gt;=<sp/>v_max)<sp/>?<sp/>-FLT_MAX<sp/>:<sp/>v_min;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_max<sp/>=<sp/>(v_min<sp/>&gt;=<sp/>v_max)<sp/>?<sp/>*v_current_max<sp/>:<sp/>ImMin(v_max,<sp/>*v_current_max);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSliderFlags<sp/>min_flags<sp/>=<sp/>flags<sp/>|<sp/>((min_min<sp/>==<sp/>min_max)<sp/>?<sp/>ImGuiSliderFlags_ReadOnly<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/>DragScalar(</highlight><highlight class="stringliteral">&quot;##min&quot;</highlight><highlight class="normal">,<sp/>ImGuiDataType_Float,<sp/>v_current_min,<sp/>v_speed,<sp/>&amp;min_min,<sp/>&amp;min_max,<sp/>format,<sp/>min_flags);</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/>PopItemWidth();</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/>SameLine(0,<sp/>g.Style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_min<sp/>=<sp/>(v_min<sp/>&gt;=<sp/>v_max)<sp/>?<sp/>*v_current_min<sp/>:<sp/>ImMax(v_min,<sp/>*v_current_min);</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_max<sp/>=<sp/>(v_min<sp/>&gt;=<sp/>v_max)<sp/>?<sp/>FLT_MAX<sp/>:<sp/>v_max;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSliderFlags<sp/>max_flags<sp/>=<sp/>flags<sp/>|<sp/>((max_min<sp/>==<sp/>max_max)<sp/>?<sp/>ImGuiSliderFlags_ReadOnly<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/>value_changed<sp/>|=<sp/>DragScalar(</highlight><highlight class="stringliteral">&quot;##max&quot;</highlight><highlight class="normal">,<sp/>ImGuiDataType_Float,<sp/>v_current_max,<sp/>v_speed,<sp/>&amp;max_min,<sp/>&amp;max_max,<sp/>format_max<sp/>?<sp/>format_max<sp/>:<sp/>format,<sp/>max_flags);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/>PopItemWidth();</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/>SameLine(0,<sp/>g.Style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/>TextEx(label,<sp/>FindRenderedTextEnd(label));</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>v_speed<sp/>is<sp/>float<sp/>to<sp/>allow<sp/>adjusting<sp/>the<sp/>drag<sp/>speed<sp/>with<sp/>more<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragInt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragScalar(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>v_speed,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragInt2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragScalarN(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>2,<sp/>v_speed,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragInt3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[3],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragScalarN(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>3,<sp/>v_speed,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragInt4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[4],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragScalarN(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>4,<sp/>v_speed,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="2591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>You<sp/>likely<sp/>want<sp/>to<sp/>specify<sp/>the<sp/>ImGuiSliderFlags_AlwaysClamp<sp/>when<sp/>using<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragIntRange2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>v_current_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>v_current_max,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format_max,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="2595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(label);</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginGroup();</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/>PushMultiItemsWidths(2,<sp/>CalcItemWidth());</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_min<sp/>=<sp/>(v_min<sp/>&gt;=<sp/>v_max)<sp/>?<sp/>INT_MIN<sp/>:<sp/>v_min;</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_max<sp/>=<sp/>(v_min<sp/>&gt;=<sp/>v_max)<sp/>?<sp/>*v_current_max<sp/>:<sp/>ImMin(v_max,<sp/>*v_current_max);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSliderFlags<sp/>min_flags<sp/>=<sp/>flags<sp/>|<sp/>((min_min<sp/>==<sp/>min_max)<sp/>?<sp/>ImGuiSliderFlags_ReadOnly<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/>DragInt(</highlight><highlight class="stringliteral">&quot;##min&quot;</highlight><highlight class="normal">,<sp/>v_current_min,<sp/>v_speed,<sp/>min_min,<sp/>min_max,<sp/>format,<sp/>min_flags);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/>PopItemWidth();</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/>SameLine(0,<sp/>g.Style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_min<sp/>=<sp/>(v_min<sp/>&gt;=<sp/>v_max)<sp/>?<sp/>*v_current_min<sp/>:<sp/>ImMax(v_min,<sp/>*v_current_min);</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_max<sp/>=<sp/>(v_min<sp/>&gt;=<sp/>v_max)<sp/>?<sp/>INT_MAX<sp/>:<sp/>v_max;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSliderFlags<sp/>max_flags<sp/>=<sp/>flags<sp/>|<sp/>((max_min<sp/>==<sp/>max_max)<sp/>?<sp/>ImGuiSliderFlags_ReadOnly<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/>value_changed<sp/>|=<sp/>DragInt(</highlight><highlight class="stringliteral">&quot;##max&quot;</highlight><highlight class="normal">,<sp/>v_current_max,<sp/>v_speed,<sp/>max_min,<sp/>max_max,<sp/>format_max<sp/>?<sp/>format_max<sp/>:<sp/>format,<sp/>max_flags);</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>PopItemWidth();</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/>SameLine(0,<sp/>g.Style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/>TextEx(label,<sp/>FindRenderedTextEnd(label));</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Obsolete<sp/>versions<sp/>with<sp/>power<sp/>parameter.<sp/>See<sp/>https://github.com/ocornut/imgui/issues/3361<sp/>for<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragScalar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="2630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSliderFlags<sp/>drag_flags<sp/>=<sp/>ImGuiSliderFlags_None;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>!=<sp/>1.0f)</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(power<sp/>==<sp/>1.0f<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>function<sp/>with<sp/>ImGuiSliderFlags_Logarithmic<sp/>flags<sp/>instead<sp/>of<sp/>using<sp/>the<sp/>old<sp/>&apos;float<sp/>power&apos;<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(p_min<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>p_max<sp/>!=<sp/>NULL);<sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>using<sp/>a<sp/>power<sp/>curve<sp/>the<sp/>drag<sp/>needs<sp/>to<sp/>have<sp/>known<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drag_flags<sp/>|=<sp/>ImGuiSliderFlags_Logarithmic;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback<sp/>for<sp/>non-asserting<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragScalar(label,<sp/>data_type,<sp/>p_data,<sp/>v_speed,<sp/>p_min,<sp/>p_max,<sp/>format,<sp/>drag_flags);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::DragScalarN(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>components,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_speed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="2642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSliderFlags<sp/>drag_flags<sp/>=<sp/>ImGuiSliderFlags_None;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>!=<sp/>1.0f)</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(power<sp/>==<sp/>1.0f<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>function<sp/>with<sp/>ImGuiSliderFlags_Logarithmic<sp/>flags<sp/>instead<sp/>of<sp/>using<sp/>the<sp/>old<sp/>&apos;float<sp/>power&apos;<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(p_min<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>p_max<sp/>!=<sp/>NULL);<sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>using<sp/>a<sp/>power<sp/>curve<sp/>the<sp/>drag<sp/>needs<sp/>to<sp/>have<sp/>known<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drag_flags<sp/>|=<sp/>ImGuiSliderFlags_Logarithmic;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback<sp/>for<sp/>non-asserting<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DragScalarN(label,<sp/>data_type,<sp/>p_data,<sp/>components,<sp/>v_speed,<sp/>p_min,<sp/>p_max,<sp/>format,<sp/>drag_flags);</highlight></codeline>
<codeline lineno="2651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>SliderScalar,<sp/>SliderFloat,<sp/>SliderInt,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ScaleRatioFromValueT&lt;&gt;<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ScaleValueFromRatioT&lt;&gt;<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderBehaviorT&lt;&gt;()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderBehavior()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderScalar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderScalarN()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderFloat()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderFloat2()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderFloat3()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderFloat4()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderAngle()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderInt()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderInt2()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderInt3()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SliderInt4()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>VSliderScalar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>VSliderFloat()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>VSliderInt()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>value<sp/>v<sp/>in<sp/>the<sp/>output<sp/>space<sp/>of<sp/>a<sp/>slider<sp/>into<sp/>a<sp/>parametric<sp/>position<sp/>on<sp/>the<sp/>slider<sp/>itself<sp/>(the<sp/>logical<sp/>opposite<sp/>of<sp/>ScaleValueFromRatioT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SIGNEDTYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FLOATTYPE&gt;</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ImGui::ScaleRatioFromValueT(ImGuiDataType<sp/>data_type,<sp/>TYPE<sp/>v,<sp/>TYPE<sp/>v_min,<sp/>TYPE<sp/>v_max,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_logarithmic,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>logarithmic_zero_epsilon,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_deadzone_halfsize)</highlight></codeline>
<codeline lineno="2681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_min<sp/>==<sp/>v_max)</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_UNUSED(data_type);</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE<sp/>v_clamped<sp/>=<sp/>(v_min<sp/>&lt;<sp/>v_max)<sp/>?<sp/>ImClamp(v,<sp/>v_min,<sp/>v_max)<sp/>:<sp/>ImClamp(v,<sp/>v_max,<sp/>v_min);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_logarithmic)</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipped<sp/>=<sp/>v_max<sp/>&lt;<sp/>v_min;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flipped)<sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>the<sp/>case<sp/>where<sp/>the<sp/>range<sp/>is<sp/>backwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImSwap(v_min,<sp/>v_max);</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fudge<sp/>min/max<sp/>to<sp/>avoid<sp/>getting<sp/>close<sp/>to<sp/>log(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLOATTYPE<sp/>v_min_fudged<sp/>=<sp/>(ImAbs((FLOATTYPE)v_min)<sp/>&lt;<sp/>logarithmic_zero_epsilon)<sp/>?<sp/>((v_min<sp/>&lt;<sp/>0.0f)<sp/>?<sp/>-logarithmic_zero_epsilon<sp/>:<sp/>logarithmic_zero_epsilon)<sp/>:<sp/>(FLOATTYPE)v_min;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLOATTYPE<sp/>v_max_fudged<sp/>=<sp/>(ImAbs((FLOATTYPE)v_max)<sp/>&lt;<sp/>logarithmic_zero_epsilon)<sp/>?<sp/>((v_max<sp/>&lt;<sp/>0.0f)<sp/>?<sp/>-logarithmic_zero_epsilon<sp/>:<sp/>logarithmic_zero_epsilon)<sp/>:<sp/>(FLOATTYPE)v_max;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Awkward<sp/>special<sp/>cases<sp/>-<sp/>we<sp/>need<sp/>ranges<sp/>of<sp/>the<sp/>form<sp/>(-100<sp/>..<sp/>0)<sp/>to<sp/>convert<sp/>to<sp/>(-100<sp/>..<sp/>-epsilon),<sp/>not<sp/>(-100<sp/>..<sp/>epsilon)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v_min<sp/>==<sp/>0.0f)<sp/>&amp;&amp;<sp/>(v_max<sp/>&lt;<sp/>0.0f))</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_min_fudged<sp/>=<sp/>-logarithmic_zero_epsilon;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v_max<sp/>==<sp/>0.0f)<sp/>&amp;&amp;<sp/>(v_min<sp/>&lt;<sp/>0.0f))</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_max_fudged<sp/>=<sp/>-logarithmic_zero_epsilon;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_clamped<sp/>&lt;=<sp/>v_min_fudged)</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>for<sp/>values<sp/>that<sp/>are<sp/>in-range<sp/>but<sp/>below<sp/>our<sp/>fudge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_clamped<sp/>&gt;=<sp/>v_max_fudged)</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>1.0f;<sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>for<sp/>values<sp/>that<sp/>are<sp/>in-range<sp/>but<sp/>above<sp/>our<sp/>fudge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v_min<sp/>*<sp/>v_max)<sp/>&lt;<sp/>0.0f)<sp/></highlight><highlight class="comment">//<sp/>Range<sp/>crosses<sp/>zero,<sp/>so<sp/>split<sp/>into<sp/>two<sp/>portions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_point_center<sp/>=<sp/>(-(float)v_min)<sp/>/<sp/>((float)v_max<sp/>-<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)v_min);<sp/></highlight><highlight class="comment">//<sp/>The<sp/>zero<sp/>point<sp/>in<sp/>parametric<sp/>space.<sp/><sp/>There&apos;s<sp/>an<sp/>argument<sp/>we<sp/>should<sp/>take<sp/>the<sp/>logarithmic<sp/>nature<sp/>into<sp/>account<sp/>when<sp/>calculating<sp/>this,<sp/>but<sp/>for<sp/>now<sp/>this<sp/>should<sp/>do<sp/>(and<sp/>the<sp/>most<sp/>common<sp/>case<sp/>of<sp/>a<sp/>symmetrical<sp/>range<sp/>works<sp/>fine)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_point_snap_L<sp/>=<sp/>zero_point_center<sp/>-<sp/>zero_deadzone_halfsize;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_point_snap_R<sp/>=<sp/>zero_point_center<sp/>+<sp/>zero_deadzone_halfsize;</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>zero_point_center;<sp/></highlight><highlight class="comment">//<sp/>Special<sp/>case<sp/>for<sp/>exactly<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>(1.0f<sp/>-<sp/>(float)(ImLog(-(FLOATTYPE)v_clamped<sp/>/<sp/>logarithmic_zero_epsilon)<sp/>/<sp/>ImLog(-v_min_fudged<sp/>/<sp/>logarithmic_zero_epsilon)))<sp/>*<sp/>zero_point_snap_L;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>zero_point_snap_R<sp/>+<sp/>((float)(ImLog((FLOATTYPE)v_clamped<sp/>/<sp/>logarithmic_zero_epsilon)<sp/>/<sp/>ImLog(v_max_fudged<sp/>/<sp/>logarithmic_zero_epsilon))<sp/>*<sp/>(1.0f<sp/>-<sp/>zero_point_snap_R));</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v_min<sp/>&lt;<sp/>0.0f)<sp/>||<sp/>(v_max<sp/>&lt;<sp/>0.0f))<sp/></highlight><highlight class="comment">//<sp/>Entirely<sp/>negative<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>1.0f<sp/>-<sp/>(float)(ImLog(-(FLOATTYPE)v_clamped<sp/>/<sp/>-v_max_fudged)<sp/>/<sp/>ImLog(-v_min_fudged<sp/>/<sp/>-v_max_fudged));</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>(float)(ImLog((FLOATTYPE)v_clamped<sp/>/<sp/>v_min_fudged)<sp/>/<sp/>ImLog(v_max_fudged<sp/>/<sp/>v_min_fudged));</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flipped<sp/>?<sp/>(1.0f<sp/>-<sp/><ref refid="structresult" kindref="compound">result</ref>)<sp/>:<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Linear<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((FLOATTYPE)(SIGNEDTYPE)(v_clamped<sp/>-<sp/>v_min)<sp/>/<sp/>(FLOATTYPE)(SIGNEDTYPE)(v_max<sp/>-<sp/>v_min));</highlight></codeline>
<codeline lineno="2732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>parametric<sp/>position<sp/>on<sp/>a<sp/>slider<sp/>into<sp/>a<sp/>value<sp/>v<sp/>in<sp/>the<sp/>output<sp/>space<sp/>(the<sp/>logical<sp/>opposite<sp/>of<sp/>ScaleRatioFromValueT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SIGNEDTYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FLOATTYPE&gt;</highlight></codeline>
<codeline lineno="2736"><highlight class="normal">TYPE<sp/>ImGui::ScaleValueFromRatioT(ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t,<sp/>TYPE<sp/>v_min,<sp/>TYPE<sp/>v_max,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_logarithmic,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>logarithmic_zero_epsilon,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_deadzone_halfsize)</highlight></codeline>
<codeline lineno="2737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_min<sp/>==<sp/>v_max)</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v_min;</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_floating_point<sp/>=<sp/>(data_type<sp/>==<sp/>ImGuiDataType_Float)<sp/>||<sp/>(data_type<sp/>==<sp/>ImGuiDataType_Double);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE<sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_logarithmic)</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>special-case<sp/>the<sp/>extents<sp/>because<sp/>otherwise<sp/>our<sp/>fudging<sp/>can<sp/>lead<sp/>to<sp/>&quot;mathematically<sp/>correct&quot;<sp/>but<sp/>non-intuitive<sp/>behaviors<sp/>like<sp/>a<sp/>fully-left<sp/>slider<sp/>not<sp/>actually<sp/>reaching<sp/>the<sp/>minimum<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>v_min;</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&gt;=<sp/>1.0f)</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>v_max;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipped<sp/>=<sp/>v_max<sp/>&lt;<sp/>v_min;<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>range<sp/>is<sp/>&quot;backwards&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fudge<sp/>min/max<sp/>to<sp/>avoid<sp/>getting<sp/>silly<sp/>results<sp/>close<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLOATTYPE<sp/>v_min_fudged<sp/>=<sp/>(ImAbs((FLOATTYPE)v_min)<sp/>&lt;<sp/>logarithmic_zero_epsilon)<sp/>?<sp/>((v_min<sp/>&lt;<sp/>0.0f)<sp/>?<sp/>-logarithmic_zero_epsilon<sp/>:<sp/>logarithmic_zero_epsilon)<sp/>:<sp/>(FLOATTYPE)v_min;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLOATTYPE<sp/>v_max_fudged<sp/>=<sp/>(ImAbs((FLOATTYPE)v_max)<sp/>&lt;<sp/>logarithmic_zero_epsilon)<sp/>?<sp/>((v_max<sp/>&lt;<sp/>0.0f)<sp/>?<sp/>-logarithmic_zero_epsilon<sp/>:<sp/>logarithmic_zero_epsilon)<sp/>:<sp/>(FLOATTYPE)v_max;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flipped)</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImSwap(v_min_fudged,<sp/>v_max_fudged);</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Awkward<sp/>special<sp/>case<sp/>-<sp/>we<sp/>need<sp/>ranges<sp/>of<sp/>the<sp/>form<sp/>(-100<sp/>..<sp/>0)<sp/>to<sp/>convert<sp/>to<sp/>(-100<sp/>..<sp/>-epsilon),<sp/>not<sp/>(-100<sp/>..<sp/>epsilon)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v_max<sp/>==<sp/>0.0f)<sp/>&amp;&amp;<sp/>(v_min<sp/>&lt;<sp/>0.0f))</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_max_fudged<sp/>=<sp/>-logarithmic_zero_epsilon;</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t_with_flip<sp/>=<sp/>flipped<sp/>?<sp/>(1.0f<sp/>-<sp/>t)<sp/>:<sp/>t;<sp/></highlight><highlight class="comment">//<sp/>t,<sp/>but<sp/>flipped<sp/>if<sp/>necessary<sp/>to<sp/>account<sp/>for<sp/>us<sp/>flipping<sp/>the<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v_min<sp/>*<sp/>v_max)<sp/>&lt;<sp/>0.0f)<sp/></highlight><highlight class="comment">//<sp/>Range<sp/>crosses<sp/>zero,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>do<sp/>this<sp/>in<sp/>two<sp/>parts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_point_center<sp/>=<sp/>(-(float)ImMin(v_min,<sp/>v_max))<sp/>/<sp/>ImAbs((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)v_max<sp/>-<sp/>(float)v_min);<sp/></highlight><highlight class="comment">//<sp/>The<sp/>zero<sp/>point<sp/>in<sp/>parametric<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_point_snap_L<sp/>=<sp/>zero_point_center<sp/>-<sp/>zero_deadzone_halfsize;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_point_snap_R<sp/>=<sp/>zero_point_center<sp/>+<sp/>zero_deadzone_halfsize;</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_with_flip<sp/>&gt;=<sp/>zero_point_snap_L<sp/>&amp;&amp;<sp/>t_with_flip<sp/>&lt;=<sp/>zero_point_snap_R)</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>(TYPE)0.0f;<sp/></highlight><highlight class="comment">//<sp/>Special<sp/>case<sp/>to<sp/>make<sp/>getting<sp/>exactly<sp/>zero<sp/>possible<sp/>(the<sp/>epsilon<sp/>prevents<sp/>it<sp/>otherwise)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_with_flip<sp/>&lt;<sp/>zero_point_center)</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>(TYPE)-(logarithmic_zero_epsilon<sp/>*<sp/>ImPow(-v_min_fudged<sp/>/<sp/>logarithmic_zero_epsilon,<sp/>(FLOATTYPE)(1.0f<sp/>-<sp/>(t_with_flip<sp/>/<sp/>zero_point_snap_L))));</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>(TYPE)(logarithmic_zero_epsilon<sp/>*<sp/>ImPow(v_max_fudged<sp/>/<sp/>logarithmic_zero_epsilon,<sp/>(FLOATTYPE)((t_with_flip<sp/>-<sp/>zero_point_snap_R)<sp/>/<sp/>(1.0f<sp/>-<sp/>zero_point_snap_R))));</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v_min<sp/>&lt;<sp/>0.0f)<sp/>||<sp/>(v_max<sp/>&lt;<sp/>0.0f))<sp/></highlight><highlight class="comment">//<sp/>Entirely<sp/>negative<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>(TYPE)-(-v_max_fudged<sp/>*<sp/>ImPow(-v_min_fudged<sp/>/<sp/>-v_max_fudged,<sp/>(FLOATTYPE)(1.0f<sp/>-<sp/>t_with_flip)));</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>(TYPE)(v_min_fudged<sp/>*<sp/>ImPow(v_max_fudged<sp/>/<sp/>v_min_fudged,<sp/>(FLOATTYPE)t_with_flip));</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Linear<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_floating_point)</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>ImLerp(v_min,<sp/>v_max,<sp/>t);</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>For<sp/>integer<sp/>values<sp/>we<sp/>want<sp/>the<sp/>clicking<sp/>position<sp/>to<sp/>match<sp/>the<sp/>grab<sp/>box<sp/>so<sp/>we<sp/>round<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>This<sp/>code<sp/>is<sp/>carefully<sp/>tuned<sp/>to<sp/>work<sp/>with<sp/>large<sp/>values<sp/>(e.g.<sp/>high<sp/>ranges<sp/>of<sp/>U64)<sp/>while<sp/>preserving<sp/>this<sp/>property..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Not<sp/>doing<sp/>a<sp/>*1.0<sp/>multiply<sp/>at<sp/>the<sp/>end<sp/>of<sp/>a<sp/>range<sp/>as<sp/>it<sp/>tends<sp/>to<sp/>be<sp/>lossy.<sp/>While<sp/>absolute<sp/>aiming<sp/>at<sp/>a<sp/>large<sp/>s64/u64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>range<sp/>is<sp/>going<sp/>to<sp/>be<sp/>imprecise<sp/>anyway,<sp/>with<sp/>this<sp/>check<sp/>we<sp/>at<sp/>least<sp/>make<sp/>the<sp/>edge<sp/>values<sp/>matches<sp/>expected<sp/>limits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLOATTYPE<sp/>v_new_off_f<sp/>=<sp/>(SIGNEDTYPE)(v_max<sp/>-<sp/>v_min)<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>(TYPE)((SIGNEDTYPE)v_min<sp/>+<sp/>(SIGNEDTYPE)(v_new_off_f<sp/>+<sp/>(FLOATTYPE)(v_min<sp/>&gt;<sp/>v_max<sp/>?<sp/>-0.5<sp/>:<sp/>0.5)));</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>v_max;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structresult" kindref="compound">result</ref>;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Move<sp/>more<sp/>of<sp/>the<sp/>code<sp/>into<sp/>SliderBehavior()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SIGNEDTYPE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FLOATTYPE&gt;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderBehaviorT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType<sp/>data_type,<sp/>TYPE*<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE<sp/>v_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE<sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags,<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>*<sp/>out_grab_bb)</highlight></codeline>
<codeline lineno="2816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_Vertical)<sp/>?<sp/>ImGuiAxis_Y<sp/>:<sp/>ImGuiAxis_X;</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_logarithmic<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_Logarithmic)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_floating_point<sp/>=<sp/>(data_type<sp/>==<sp/>ImGuiDataType_Float)<sp/>||<sp/>(data_type<sp/>==<sp/>ImGuiDataType_Double);</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grab_padding<sp/>=<sp/>2.0f;</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>slider_sz<sp/>=<sp/>(bb.Max[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>-<sp/>bb.Min[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>])<sp/>-<sp/>grab_padding<sp/>*<sp/>2.0f;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grab_sz<sp/>=<sp/>style.GrabMinSize;</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/>SIGNEDTYPE<sp/>v_range<sp/>=<sp/>(v_min<sp/>&lt;<sp/>v_max<sp/>?<sp/>v_max<sp/>-<sp/>v_min<sp/>:<sp/>v_min<sp/>-<sp/>v_max);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_floating_point<sp/>&amp;&amp;<sp/>v_range<sp/>&gt;=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>v_range<sp/>&lt;<sp/>0<sp/>may<sp/>happen<sp/>on<sp/>integer<sp/>overflows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab_sz<sp/>=<sp/>ImMax((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(slider_sz<sp/>/<sp/>(v_range<sp/>+<sp/>1)),<sp/>style.GrabMinSize);<sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>integer<sp/>sliders:<sp/>if<sp/>possible<sp/>have<sp/>the<sp/>grab<sp/>size<sp/>represent<sp/>1<sp/>unit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/>grab_sz<sp/>=<sp/>ImMin(grab_sz,<sp/>slider_sz);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>slider_usable_sz<sp/>=<sp/>slider_sz<sp/>-<sp/>grab_sz;</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>slider_usable_pos_min<sp/>=<sp/>bb.Min[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>+<sp/>grab_padding<sp/>+<sp/>grab_sz<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>slider_usable_pos_max<sp/>=<sp/>bb.Max[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>-<sp/>grab_padding<sp/>-<sp/>grab_sz<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>logarithmic_zero_epsilon<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>valid<sp/>when<sp/>is_logarithmic<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero_deadzone_halfsize<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>valid<sp/>when<sp/>is_logarithmic<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_logarithmic)</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>using<sp/>logarithmic<sp/>sliders,<sp/>we<sp/>need<sp/>to<sp/>clamp<sp/>to<sp/>avoid<sp/>hitting<sp/>zero,<sp/>but<sp/>our<sp/>choice<sp/>of<sp/>clamp<sp/>value<sp/>greatly<sp/>affects<sp/>slider<sp/>precision.<sp/>We<sp/>attempt<sp/>to<sp/>use<sp/>the<sp/>specified<sp/>precision<sp/>to<sp/>estimate<sp/>a<sp/>good<sp/>lower<sp/>bound.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimal_precision<sp/>=<sp/>is_floating_point<sp/>?<sp/>ImParseFormatPrecision(format,<sp/>3)<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logarithmic_zero_epsilon<sp/>=<sp/>ImPow(0.1f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)decimal_precision);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zero_deadzone_halfsize<sp/>=<sp/>(style.LogSliderDeadzone<sp/>*<sp/>0.5f)<sp/>/<sp/>ImMax(slider_usable_sz,<sp/>1.0f);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>interacting<sp/>with<sp/>the<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_new_value<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>clicked_t<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdSource<sp/>==<sp/>ImGuiInputSource_Mouse)</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g.IO.MouseDown[0])</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mouse_abs_pos<sp/>=<sp/>g.IO.MousePos[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>];</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clicked_t<sp/>=<sp/>(slider_usable_sz<sp/>&gt;<sp/>0.0f)<sp/>?<sp/>ImClamp((mouse_abs_pos<sp/>-<sp/>slider_usable_pos_min)<sp/>/<sp/>slider_usable_sz,<sp/>0.0f,<sp/>1.0f)<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_Y)</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clicked_t<sp/>=<sp/>1.0f<sp/>-<sp/>clicked_t;</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_new_value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdSource<sp/>==<sp/>ImGuiInputSource_Nav)</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveIdIsJustActivated)</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.SliderCurrentAccum<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>any<sp/>stored<sp/>nav<sp/>delta<sp/>upon<sp/>activation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.SliderCurrentAccumDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>input_delta2<sp/>=<sp/>GetNavInputAmount2d(ImGuiNavDirSourceFlags_Keyboard<sp/>|<sp/>ImGuiNavDirSourceFlags_PadDPad,<sp/>ImGuiInputReadMode_RepeatFast,<sp/>0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>input_delta<sp/>=<sp/>(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_X)<sp/>?<sp/>input_delta2.x<sp/>:<sp/>-input_delta2.y;</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(input_delta<sp/>!=<sp/>0.0f)</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimal_precision<sp/>=<sp/>is_floating_point<sp/>?<sp/>ImParseFormatPrecision(format,<sp/>3)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decimal_precision<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_delta<sp/>/=<sp/>100.0f;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gamepad/keyboard<sp/>tweak<sp/>speeds<sp/>in<sp/>%<sp/>of<sp/>slider<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsNavInputDown(ImGuiNavInput_TweakSlow))</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_delta<sp/>/=<sp/>10.0f;</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v_range<sp/>&gt;=<sp/>-100.0f<sp/>&amp;&amp;<sp/>v_range<sp/>&lt;=<sp/>100.0f)<sp/>||<sp/>IsNavInputDown(ImGuiNavInput_TweakSlow))</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_delta<sp/>=<sp/>((input_delta<sp/>&lt;<sp/>0.0f)<sp/>?<sp/>-1.0f<sp/>:<sp/>+1.0f)<sp/>/<sp/>(float)v_range;<sp/></highlight><highlight class="comment">//<sp/>Gamepad/keyboard<sp/>tweak<sp/>speeds<sp/>in<sp/>integer<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_delta<sp/>/=<sp/>100.0f;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsNavInputDown(ImGuiNavInput_TweakFast))</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_delta<sp/>*=<sp/>10.0f;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.SliderCurrentAccum<sp/>+=<sp/>input_delta;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.SliderCurrentAccumDirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>g.SliderCurrentAccum;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavActivatePressedId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!g.ActiveIdIsJustActivated)</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.SliderCurrentAccumDirty)</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clicked_t<sp/>=<sp/>ScaleRatioFromValueT&lt;TYPE,<sp/>SIGNEDTYPE,<sp/>FLOATTYPE&gt;(data_type,<sp/>*v,<sp/>v_min,<sp/>v_max,<sp/>is_logarithmic,<sp/>logarithmic_zero_epsilon,<sp/>zero_deadzone_halfsize);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((clicked_t<sp/>&gt;=<sp/>1.0f<sp/>&amp;&amp;<sp/>delta<sp/>&gt;<sp/>0.0f)<sp/>||<sp/>(clicked_t<sp/>&lt;=<sp/>0.0f<sp/>&amp;&amp;<sp/>delta<sp/>&lt;<sp/>0.0f))<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>to<sp/>avoid<sp/>applying<sp/>the<sp/>saturation<sp/>when<sp/>already<sp/>past<sp/>the<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_new_value<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.SliderCurrentAccum<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>If<sp/>pushing<sp/>up<sp/>against<sp/>the<sp/>limits,<sp/>don&apos;t<sp/>continue<sp/>to<sp/>accumulate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_new_value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>old_clicked_t<sp/>=<sp/>clicked_t;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clicked_t<sp/>=<sp/>ImSaturate(clicked_t<sp/>+<sp/>delta);</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>what<sp/>our<sp/>&quot;new&quot;<sp/>clicked_t<sp/>will<sp/>be,<sp/>and<sp/>thus<sp/>how<sp/>far<sp/>we<sp/>actually<sp/>moved<sp/>the<sp/>slider,<sp/>and<sp/>subtract<sp/>this<sp/>from<sp/>the<sp/>accumulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE<sp/>v_new<sp/>=<sp/>ScaleValueFromRatioT&lt;TYPE,<sp/>SIGNEDTYPE,<sp/>FLOATTYPE&gt;(data_type,<sp/>clicked_t,<sp/>v_min,<sp/>v_max,<sp/>is_logarithmic,<sp/>logarithmic_zero_epsilon,<sp/>zero_deadzone_halfsize);</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiSliderFlags_NoRoundToFormat))</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_new<sp/>=<sp/>RoundScalarWithFormatT&lt;TYPE,<sp/>SIGNEDTYPE&gt;(format,<sp/>data_type,<sp/>v_new);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_clicked_t<sp/>=<sp/>ScaleRatioFromValueT&lt;TYPE,<sp/>SIGNEDTYPE,<sp/>FLOATTYPE&gt;(data_type,<sp/>v_new,<sp/>v_min,<sp/>v_max,<sp/>is_logarithmic,<sp/>logarithmic_zero_epsilon,<sp/>zero_deadzone_halfsize);</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.SliderCurrentAccum<sp/>-=<sp/>ImMin(new_clicked_t<sp/>-<sp/>old_clicked_t,<sp/>delta);</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.SliderCurrentAccum<sp/>-=<sp/>ImMax(new_clicked_t<sp/>-<sp/>old_clicked_t,<sp/>delta);</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.SliderCurrentAccumDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_new_value)</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE<sp/>v_new<sp/>=<sp/>ScaleValueFromRatioT&lt;TYPE,<sp/>SIGNEDTYPE,<sp/>FLOATTYPE&gt;(data_type,<sp/>clicked_t,<sp/>v_min,<sp/>v_max,<sp/>is_logarithmic,<sp/>logarithmic_zero_epsilon,<sp/>zero_deadzone_halfsize);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Round<sp/>to<sp/>user<sp/>desired<sp/>precision<sp/>based<sp/>on<sp/>format<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiSliderFlags_NoRoundToFormat))</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_new<sp/>=<sp/>RoundScalarWithFormatT&lt;TYPE,<sp/>SIGNEDTYPE&gt;(format,<sp/>data_type,<sp/>v_new);</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*v<sp/>!=<sp/>v_new)</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v<sp/>=<sp/>v_new;</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slider_sz<sp/>&lt;<sp/>1.0f)</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_grab_bb<sp/>=<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(bb.Min,<sp/>bb.Min);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>grab<sp/>position<sp/>so<sp/>it<sp/>can<sp/>be<sp/>displayed<sp/>by<sp/>the<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grab_t<sp/>=<sp/>ScaleRatioFromValueT&lt;TYPE,<sp/>SIGNEDTYPE,<sp/>FLOATTYPE&gt;(data_type,<sp/>*v,<sp/>v_min,<sp/>v_max,<sp/>is_logarithmic,<sp/>logarithmic_zero_epsilon,<sp/>zero_deadzone_halfsize);</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_Y)</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab_t<sp/>=<sp/>1.0f<sp/>-<sp/>grab_t;</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grab_pos<sp/>=<sp/>ImLerp(slider_usable_pos_min,<sp/>slider_usable_pos_max,<sp/>grab_t);</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>==<sp/>ImGuiAxis_X)</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_grab_bb<sp/>=<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(grab_pos<sp/>-<sp/>grab_sz<sp/>*<sp/>0.5f,<sp/>bb.Min.y<sp/>+<sp/>grab_padding,<sp/>grab_pos<sp/>+<sp/>grab_sz<sp/>*<sp/>0.5f,<sp/>bb.Max.y<sp/>-<sp/>grab_padding);</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_grab_bb<sp/>=<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(bb.Min.x<sp/>+<sp/>grab_padding,<sp/>grab_pos<sp/>-<sp/>grab_sz<sp/>*<sp/>0.5f,<sp/>bb.Max.x<sp/>-<sp/>grab_padding,<sp/>grab_pos<sp/>+<sp/>grab_sz<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="2970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>32-bit<sp/>and<sp/>larger<sp/>types,<sp/>slider<sp/>bounds<sp/>are<sp/>limited<sp/>to<sp/>half<sp/>the<sp/>natural<sp/>type<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight><highlight class="comment">//<sp/>So<sp/>e.g.<sp/>an<sp/>integer<sp/>Slider<sp/>between<sp/>INT_MAX-10<sp/>and<sp/>INT_MAX<sp/>will<sp/>fail,<sp/>but<sp/>an<sp/>integer<sp/>Slider<sp/>between<sp/>INT_MAX/2-10<sp/>and<sp/>INT_MAX/2<sp/>will<sp/>be<sp/>ok.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>would<sp/>be<sp/>possible<sp/>to<sp/>lift<sp/>that<sp/>limitation<sp/>with<sp/>some<sp/>work<sp/>but<sp/>it<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>be<sp/>worth<sp/>it<sp/>for<sp/>sliders.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderBehavior(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags,<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>*<sp/>out_grab_bb)</highlight></codeline>
<codeline lineno="2976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>imgui.cpp<sp/>&quot;API<sp/>BREAKING<sp/>CHANGES&quot;<sp/>section<sp/>for<sp/>1.78<sp/>if<sp/>you<sp/>hit<sp/>this<sp/>assert.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT((flags<sp/>==<sp/>1<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_InvalidMask_)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>ImGuiSliderFlags<sp/>flag!<sp/><sp/>Has<sp/>the<sp/>&apos;float<sp/>power&apos;<sp/>argument<sp/>been<sp/>mistakenly<sp/>cast<sp/>to<sp/>flags?<sp/>Call<sp/>function<sp/>with<sp/>ImGuiSliderFlags_Logarithmic<sp/>flags<sp/>instead.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((g.LastItemData.InFlags<sp/>&amp;<sp/>ImGuiItemFlags_ReadOnly)<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_ReadOnly))</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_type)</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S8:<sp/><sp/>{<sp/>ImS32<sp/>v32<sp/>=<sp/>(ImS32)*(ImS8*)p_v;<sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>SliderBehaviorT&lt;ImS32,<sp/>ImS32,<sp/>float&gt;(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType_S32,<sp/>&amp;v32,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*)p_min,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS8*)p_max,<sp/><sp/>format,<sp/>flags,<sp/>out_grab_bb);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>*(ImS8*)p_v<sp/><sp/>=<sp/>(ImS8)v32;<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U8:<sp/><sp/>{<sp/>ImU32<sp/>v32<sp/>=<sp/>(ImU32)*(ImU8*)p_v;<sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>SliderBehaviorT&lt;ImU32,<sp/>ImS32,<sp/>float&gt;(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType_U32,<sp/>&amp;v32,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*)p_min,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU8*)p_max,<sp/><sp/>format,<sp/>flags,<sp/>out_grab_bb);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>*(ImU8*)p_v<sp/><sp/>=<sp/>(ImU8)v32;<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S16:<sp/>{<sp/>ImS32<sp/>v32<sp/>=<sp/>(ImS32)*(ImS16*)p_v;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>SliderBehaviorT&lt;ImS32,<sp/>ImS32,<sp/>float&gt;(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType_S32,<sp/>&amp;v32,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*)p_min,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS16*)p_max,<sp/>format,<sp/>flags,<sp/>out_grab_bb);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>*(ImS16*)p_v<sp/>=<sp/>(ImS16)v32;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U16:<sp/>{<sp/>ImU32<sp/>v32<sp/>=<sp/>(ImU32)*(ImU16*)p_v;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>SliderBehaviorT&lt;ImU32,<sp/>ImS32,<sp/>float&gt;(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiDataType_U32,<sp/>&amp;v32,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*)p_min,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU16*)p_max,<sp/>format,<sp/>flags,<sp/>out_grab_bb);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>*(ImU16*)p_v<sp/>=<sp/>(ImU16)v32;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S32:</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*)p_min<sp/>&gt;=<sp/>IM_S32_MIN<sp/>/<sp/>2<sp/>&amp;&amp;<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*)p_max<sp/>&lt;=<sp/>IM_S32_MAX<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderBehaviorT&lt;ImS32,<sp/>ImS32,<sp/>float<sp/>&gt;(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>data_type,<sp/>(ImS32*)p_v,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*)p_min,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS32*)p_max,<sp/><sp/>format,<sp/>flags,<sp/>out_grab_bb);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U32:</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*)p_max<sp/>&lt;=<sp/>IM_U32_MAX<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderBehaviorT&lt;ImU32,<sp/>ImS32,<sp/>float<sp/>&gt;(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>data_type,<sp/>(ImU32*)p_v,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*)p_min,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32*)p_max,<sp/><sp/>format,<sp/>flags,<sp/>out_grab_bb);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_S64:</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*)p_min<sp/>&gt;=<sp/>IM_S64_MIN<sp/>/<sp/>2<sp/>&amp;&amp;<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*)p_max<sp/>&lt;=<sp/>IM_S64_MAX<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderBehaviorT&lt;ImS64,<sp/>ImS64,<sp/>double&gt;(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>data_type,<sp/>(ImS64*)p_v,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*)p_min,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImS64*)p_max,<sp/><sp/>format,<sp/>flags,<sp/>out_grab_bb);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_U64:</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*)p_max<sp/>&lt;=<sp/>IM_U64_MAX<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderBehaviorT&lt;ImU64,<sp/>ImS64,<sp/>double&gt;(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>data_type,<sp/>(ImU64*)p_v,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*)p_min,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU64*)p_max,<sp/><sp/>format,<sp/>flags,<sp/>out_grab_bb);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_Float:</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)p_min<sp/>&gt;=<sp/>-FLT_MAX<sp/>/<sp/>2.0f<sp/>&amp;&amp;<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)p_max<sp/>&lt;=<sp/>FLT_MAX<sp/>/<sp/>2.0f);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderBehaviorT&lt;float,<sp/>float,<sp/>float<sp/>&gt;(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>data_type,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)p_v,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)p_min,<sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)p_max,<sp/><sp/>format,<sp/>flags,<sp/>out_grab_bb);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_Double:</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_min<sp/>&gt;=<sp/>-DBL_MAX<sp/>/<sp/>2.0f<sp/>&amp;&amp;<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_max<sp/>&lt;=<sp/>DBL_MAX<sp/>/<sp/>2.0f);</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderBehaviorT&lt;double,<sp/>double,<sp/>double&gt;(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>data_type,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_v,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_min,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)p_max,<sp/>format,<sp/>flags,<sp/>out_grab_bb);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ImGuiDataType_COUNT:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(0);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"></highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>p_data,<sp/>p_min<sp/>and<sp/>p_max<sp/>are<sp/>_pointers_<sp/>to<sp/>a<sp/>memory<sp/>address<sp/>holding<sp/>the<sp/>data.<sp/>For<sp/>a<sp/>slider,<sp/>they<sp/>are<sp/>all<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>code<sp/>of<sp/>e.g.<sp/>SliderFloat(),<sp/>SliderInt()<sp/>etc.<sp/>or<sp/>examples<sp/>in<sp/>&apos;Demo-&gt;Widgets-&gt;Data<sp/>Types&apos;<sp/>to<sp/>understand<sp/>how<sp/>to<sp/>use<sp/>this<sp/>function<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderScalar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>CalcItemWidth();</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>frame_bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(w,<sp/>label_size.y<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f));</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>total_bb(frame_bb.Min,<sp/>frame_bb.Max<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>label_size.x<sp/>:<sp/>0.0f,<sp/>0.0f));</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>temp_input_allowed<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_NoInput)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(total_bb,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;frame_bb,<sp/>temp_input_allowed<sp/>?<sp/>ImGuiItemFlags_Inputable<sp/>:<sp/>0))</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>format<sp/>string<sp/>when<sp/>passing<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/>DataTypeGetInfo(data_type)-&gt;PrintFmt;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_S32<sp/>&amp;&amp;<sp/>strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>(FIXME-LEGACY:<sp/>Patch<sp/>old<sp/>&quot;%.0f&quot;<sp/>format<sp/>string<sp/>to<sp/>use<sp/>&quot;%d&quot;,<sp/>read<sp/>function<sp/>more<sp/>details.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/>PatchFormatStringFloatToInt(format);</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tabbing<sp/>or<sp/>CTRL-clicking<sp/>on<sp/>Slider<sp/>turns<sp/>it<sp/>into<sp/>an<sp/>input<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered<sp/>=<sp/>ItemHoverable(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>temp_input_is_active<sp/>=<sp/>temp_input_allowed<sp/>&amp;&amp;<sp/>TempInputIsActive(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!temp_input_is_active)</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_requested_by_tabbing<sp/>=<sp/>temp_input_allowed<sp/>&amp;&amp;<sp/>(g.LastItemData.StatusFlags<sp/>&amp;<sp/>ImGuiItemStatusFlags_FocusedByTabbing)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clicked<sp/>=<sp/>(hovered<sp/>&amp;&amp;<sp/>g.IO.MouseClicked[0]);</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_requested_by_tabbing<sp/>||<sp/>clicked<sp/>||<sp/>g.NavActivateId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>||<sp/>g.NavActivateInputId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFocusID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusWindow(window);</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdUsingNavDirMask<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiDir_Left)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiDir_Right);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_input_allowed<sp/>&amp;&amp;<sp/>(input_requested_by_tabbing<sp/>||<sp/>(clicked<sp/>&amp;&amp;<sp/>g.IO.KeyCtrl)<sp/>||<sp/>g.NavActivateInputId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_input_is_active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_input_is_active)</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>clamp<sp/>CTRL+Click<sp/>input<sp/>when<sp/>ImGuiSliderFlags_AlwaysClamp<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_clamp_input<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSliderFlags_AlwaysClamp)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TempInputScalar(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>data_type,<sp/>p_data,<sp/>format,<sp/>is_clamp_input<sp/>?<sp/>p_min<sp/>:<sp/>NULL,<sp/>is_clamp_input<sp/>?<sp/>p_max<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>frame_col<sp/>=<sp/>GetColorU32(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>?<sp/>ImGuiCol_FrameBgActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_FrameBgHovered<sp/>:<sp/>ImGuiCol_FrameBg);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderFrame(frame_bb.Min,<sp/>frame_bb.Max,<sp/>frame_col,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>g.Style.FrameRounding);</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slider<sp/>behavior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>grab_bb;</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/>SliderBehavior(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>data_type,<sp/>p_data,<sp/>p_min,<sp/>p_max,<sp/>format,<sp/>flags,<sp/>&amp;grab_bb);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed)</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>grab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grab_bb.Max.x<sp/>&gt;<sp/>grab_bb.Min.x)</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(grab_bb.Min,<sp/>grab_bb.Max,<sp/>GetColorU32(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>?<sp/>ImGuiCol_SliderGrabActive<sp/>:<sp/>ImGuiCol_SliderGrab),<sp/>style.GrabRounding);</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>value<sp/>using<sp/>user-provided<sp/>display<sp/>format<sp/>so<sp/>user<sp/>can<sp/>add<sp/>prefix/suffix/decorations<sp/>to<sp/>the<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value_buf[64];</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value_buf_end<sp/>=<sp/>value_buf<sp/>+<sp/>DataTypeFormatString(value_buf,<sp/>IM_ARRAYSIZE(value_buf),<sp/>data_type,<sp/>p_data,<sp/>format);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled)</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSetNextTextDecoration(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderTextClipped(frame_bb.Min,<sp/>frame_bb.Max,<sp/>value_buf,<sp/>value_buf_end,<sp/>NULL,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.5f,<sp/>0.5f));</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size.x<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(frame_bb.Max.x<sp/>+<sp/>style.ItemInnerSpacing.x,<sp/>frame_bb.Min.y<sp/>+<sp/>style.FramePadding.y),<sp/>label);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags);</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="3094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>multiple<sp/>sliders<sp/>on<sp/>1<sp/>line<sp/>for<sp/>compact<sp/>edition<sp/>of<sp/>multiple<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderScalarN(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>components,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3098"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginGroup();</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(label);</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/>PushMultiItemsWidths(components,<sp/>CalcItemWidth());</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>type_size<sp/>=<sp/>GDataTypeInfo[data_type].Size;</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>components;<sp/>i++)</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushID(i);</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>g.Style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>|=<sp/>SliderScalar(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>data_type,<sp/>v,<sp/>v_min,<sp/>v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopItemWidth();</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)v<sp/>+<sp/>type_size);</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_end<sp/>=<sp/>FindRenderedTextEnd(label);</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>!=<sp/>label_end)</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>g.Style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(label,<sp/>label_end);</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="3130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderFloat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderScalar(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderFloat2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderScalarN(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>2,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderFloat3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v[3],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderScalarN(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>3,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderFloat4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v[4],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderScalarN(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>4,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderAngle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>v_rad,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_degrees_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_degrees_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%.0f<sp/>deg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_deg<sp/>=<sp/>(*v_rad)<sp/>*<sp/>360.0f<sp/>/<sp/>(2<sp/>*<sp/>IM_PI);</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/>SliderFloat(label,<sp/>&amp;v_deg,<sp/>v_degrees_min,<sp/>v_degrees_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/>*v_rad<sp/>=<sp/>v_deg<sp/>*<sp/>(2<sp/>*<sp/>IM_PI)<sp/>/<sp/>360.0f;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderInt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderScalar(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderInt2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[2],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderScalarN(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>2,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderInt3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[3],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderScalarN(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>3,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderInt4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderScalarN(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>4,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::VSliderScalar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>frame_bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(frame_bb.Min,<sp/>frame_bb.Max<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>label_size.x<sp/>:<sp/>0.0f,<sp/>0.0f));</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(bb,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>format<sp/>string<sp/>when<sp/>passing<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/>DataTypeGetInfo(data_type)-&gt;PrintFmt;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type<sp/>==<sp/>ImGuiDataType_S32<sp/>&amp;&amp;<sp/>strcmp(format,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>(FIXME-LEGACY:<sp/>Patch<sp/>old<sp/>&quot;%.0f&quot;<sp/>format<sp/>string<sp/>to<sp/>use<sp/>&quot;%d&quot;,<sp/>read<sp/>function<sp/>more<sp/>details.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/>PatchFormatStringFloatToInt(format);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered<sp/>=<sp/>ItemHoverable(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hovered<sp/>&amp;&amp;<sp/>g.IO.MouseClicked[0])<sp/>||<sp/>g.NavActivateId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>||<sp/>g.NavActivateInputId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFocusID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusWindow(window);</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdUsingNavDirMask<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiDir_Up)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiDir_Down);</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>frame_col<sp/>=<sp/>GetColorU32(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>?<sp/>ImGuiCol_FrameBgActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_FrameBgHovered<sp/>:<sp/>ImGuiCol_FrameBg);</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderFrame(frame_bb.Min,<sp/>frame_bb.Max,<sp/>frame_col,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>g.Style.FrameRounding);</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"></highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slider<sp/>behavior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>grab_bb;</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/>SliderBehavior(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>data_type,<sp/>p_data,<sp/>p_min,<sp/>p_max,<sp/>format,<sp/>flags<sp/>|<sp/>ImGuiSliderFlags_Vertical,<sp/>&amp;grab_bb);</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed)</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>grab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grab_bb.Max.y<sp/>&gt;<sp/>grab_bb.Min.y)</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(grab_bb.Min,<sp/>grab_bb.Max,<sp/>GetColorU32(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>?<sp/>ImGuiCol_SliderGrabActive<sp/>:<sp/>ImGuiCol_SliderGrab),<sp/>style.GrabRounding);</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>value<sp/>using<sp/>user-provided<sp/>display<sp/>format<sp/>so<sp/>user<sp/>can<sp/>add<sp/>prefix/suffix/decorations<sp/>to<sp/>the<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>vertical<sp/>slider<sp/>we<sp/>allow<sp/>centered<sp/>text<sp/>to<sp/>overlap<sp/>the<sp/>frame<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value_buf[64];</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value_buf_end<sp/>=<sp/>value_buf<sp/>+<sp/>DataTypeFormatString(value_buf,<sp/>IM_ARRAYSIZE(value_buf),<sp/>data_type,<sp/>p_data,<sp/>format);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderTextClipped(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(frame_bb.Min.x,<sp/>frame_bb.Min.y<sp/>+<sp/>style.FramePadding.y),<sp/>frame_bb.Max,<sp/>value_buf,<sp/>value_buf_end,<sp/>NULL,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.5f,<sp/>0.0f));</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size.x<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(frame_bb.Max.x<sp/>+<sp/>style.ItemInnerSpacing.x,<sp/>frame_bb.Min.y<sp/>+<sp/>style.FramePadding.y),<sp/>label);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"></highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::VSliderFloat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VSliderScalar(label,<sp/>size,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::VSliderInt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiSliderFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VSliderScalar(label,<sp/>size,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>&amp;v_min,<sp/>&amp;v_max,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Obsolete<sp/>versions<sp/>with<sp/>power<sp/>parameter.<sp/>See<sp/>https://github.com/ocornut/imgui/issues/3361<sp/>for<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderScalar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="3255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSliderFlags<sp/>slider_flags<sp/>=<sp/>ImGuiSliderFlags_None;</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>!=<sp/>1.0f)</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(power<sp/>==<sp/>1.0f<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>function<sp/>with<sp/>ImGuiSliderFlags_Logarithmic<sp/>flags<sp/>instead<sp/>of<sp/>using<sp/>the<sp/>old<sp/>&apos;float<sp/>power&apos;<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slider_flags<sp/>|=<sp/>ImGuiSliderFlags_Logarithmic;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback<sp/>for<sp/>non-asserting<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderScalar(label,<sp/>data_type,<sp/>p_data,<sp/>p_min,<sp/>p_max,<sp/>format,<sp/>slider_flags);</highlight></codeline>
<codeline lineno="3263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::SliderScalarN(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>components,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="3266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiSliderFlags<sp/>slider_flags<sp/>=<sp/>ImGuiSliderFlags_None;</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>!=<sp/>1.0f)</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(power<sp/>==<sp/>1.0f<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>function<sp/>with<sp/>ImGuiSliderFlags_Logarithmic<sp/>flags<sp/>instead<sp/>of<sp/>using<sp/>the<sp/>old<sp/>&apos;float<sp/>power&apos;<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slider_flags<sp/>|=<sp/>ImGuiSliderFlags_Logarithmic;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback<sp/>for<sp/>non-asserting<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SliderScalarN(label,<sp/>data_type,<sp/>v,<sp/>components,<sp/>v_min,<sp/>v_max,<sp/>format,<sp/>slider_flags);</highlight></codeline>
<codeline lineno="3274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>InputScalar,<sp/>InputFloat,<sp/>InputInt,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ImParseFormatFindStart()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ImParseFormatFindEnd()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ImParseFormatTrimDecorations()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ImParseFormatPrecision()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TempInputTextScalar()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputScalar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputScalarN()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputFloat()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputFloat2()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputFloat3()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputFloat4()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputInt()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputInt2()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputInt3()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputInt4()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputDouble()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>use<sp/>strchr()<sp/>because<sp/>our<sp/>strings<sp/>are<sp/>usually<sp/>very<sp/>short<sp/>and<sp/>often<sp/>start<sp/>with<sp/>&apos;%&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ImParseFormatFindStart(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt)</highlight></codeline>
<codeline lineno="3301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>fmt[0])</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fmt[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt++;</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt++;</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ImParseFormatFindEnd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt)</highlight></codeline>
<codeline lineno="3314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Printf/scanf<sp/>types<sp/>modifiers:<sp/>I/L/h/j/l/t/w/z.<sp/>Other<sp/>uppercase<sp/>letters<sp/>qualify<sp/>as<sp/>types<sp/>aka<sp/>end<sp/>of<sp/>the<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ignored_uppercase_mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>(</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">-</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">))<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>(</highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal">-</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ignored_lowercase_mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>(</highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal">-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">))<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>(</highlight><highlight class="charliteral">&apos;j&apos;</highlight><highlight class="normal">-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">))<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>(</highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">))<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>(</highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">))<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>(</highlight><highlight class="charliteral">&apos;w&apos;</highlight><highlight class="normal">-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">))<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;<sp/>(c<sp/>=<sp/>*fmt)<sp/>!=<sp/>0;<sp/>fmt++)</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>((1<sp/>&lt;&lt;<sp/>(c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">))<sp/>&amp;<sp/>ignored_uppercase_mask)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>((1<sp/>&lt;&lt;<sp/>(c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">))<sp/>&amp;<sp/>ignored_lowercase_mask)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt;</highlight></codeline>
<codeline lineno="3328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>format<sp/>out<sp/>of<sp/>a<sp/>format<sp/>string<sp/>with<sp/>leading<sp/>or<sp/>trailing<sp/>decorations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3331"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>fmt<sp/>=<sp/>&quot;blah<sp/>blah&quot;<sp/><sp/>-&gt;<sp/>return<sp/>fmt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>fmt<sp/>=<sp/>&quot;%.3f&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>return<sp/>fmt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>fmt<sp/>=<sp/>&quot;hello<sp/>%.3f&quot;<sp/>-&gt;<sp/>return<sp/>fmt<sp/>+<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>fmt<sp/>=<sp/>&quot;%.3f<sp/>hello&quot;<sp/>-&gt;<sp/>return<sp/>buf<sp/>written<sp/>with<sp/>&quot;%.3f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ImParseFormatTrimDecorations(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size)</highlight></codeline>
<codeline lineno="3336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt_start<sp/>=<sp/>ImParseFormatFindStart(fmt);</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt_start[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt;</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt_end<sp/>=<sp/>ImParseFormatFindEnd(fmt_start);</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt_end[0]<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>only<sp/>have<sp/>leading<sp/>decoration,<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>copy<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt_start;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/>ImStrncpy(buf,<sp/>fmt_start,<sp/>ImMin((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(fmt_end<sp/>-<sp/>fmt_start)<sp/>+<sp/>1,<sp/>buf_size));</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parse<sp/>display<sp/>precision<sp/>back<sp/>from<sp/>the<sp/>display<sp/>format<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>is<sp/>still<sp/>used<sp/>by<sp/>some<sp/>navigation<sp/>code<sp/>path<sp/>to<sp/>infer<sp/>a<sp/>minimum<sp/>tweak<sp/>step,<sp/>but<sp/>we<sp/>should<sp/>aim<sp/>to<sp/>rework<sp/>widgets<sp/>so<sp/>it<sp/>isn&apos;t<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImParseFormatPrecision(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_precision)</highlight></codeline>
<codeline lineno="3350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/>ImParseFormatFindStart(fmt);</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_precision;</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt++;</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*fmt<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*fmt<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt++;</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>INT_MAX;</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*fmt<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/>ImAtoi&lt;int&gt;(fmt<sp/>+<sp/>1,<sp/>&amp;precision);</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(precision<sp/>&lt;<sp/>0<sp/>||<sp/>precision<sp/>&gt;<sp/>99)</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision<sp/>=<sp/>default_precision;</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*fmt<sp/>==<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>||<sp/>*fmt<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>precision<sp/>with<sp/>scientific<sp/>notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*fmt<sp/>==<sp/></highlight><highlight class="charliteral">&apos;g&apos;</highlight><highlight class="normal"><sp/>||<sp/>*fmt<sp/>==<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>precision<sp/>==<sp/>INT_MAX)</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(precision<sp/>==<sp/>INT_MAX)<sp/>?<sp/>default_precision<sp/>:<sp/>precision;</highlight></codeline>
<codeline lineno="3369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>text<sp/>input<sp/>in<sp/>place<sp/>of<sp/>another<sp/>active<sp/>widget<sp/>(e.g.<sp/>used<sp/>when<sp/>doing<sp/>a<sp/>CTRL+Click<sp/>on<sp/>drag/slider<sp/>widgets)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Facilitate<sp/>using<sp/>this<sp/>in<sp/>variety<sp/>of<sp/>other<sp/>situations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TempInputText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size,<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>first<sp/>frame,<sp/>g.TempInputTextId<sp/>==<sp/>0,<sp/>then<sp/>on<sp/>subsequent<sp/>frames<sp/>it<sp/>becomes<sp/>==<sp/>id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>clear<sp/>ActiveID<sp/>on<sp/>the<sp/>first<sp/>frame<sp/>to<sp/>allow<sp/>the<sp/>InputText()<sp/>taking<sp/>it<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init<sp/>=<sp/>(g.TempInputId<sp/>!=<sp/>id);</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init)</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/>g.CurrentWindow-&gt;DC.CursorPos<sp/>=<sp/>bb.Min;</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/>InputTextEx(label,<sp/>NULL,<sp/>buf,<sp/>buf_size,<sp/>bb.GetSize(),<sp/>flags<sp/>|<sp/>ImGuiInputTextFlags_MergedItem);</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init)</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>frame<sp/>we<sp/>started<sp/>displaying<sp/>the<sp/>InputText<sp/>widget,<sp/>we<sp/>expect<sp/>it<sp/>to<sp/>take<sp/>the<sp/>active<sp/>id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.TempInputId<sp/>=<sp/>g.ActiveId;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="3391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>Drag/Slider<sp/>functions<sp/>are<sp/>only<sp/>forwarding<sp/>the<sp/>min/max<sp/>values<sp/>clamping<sp/>values<sp/>if<sp/>the<sp/>ImGuiSliderFlags_AlwaysClamp<sp/>flag<sp/>is<sp/>set!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>intended:<sp/>this<sp/>way<sp/>we<sp/>allow<sp/>CTRL+Click<sp/>manual<sp/>input<sp/>to<sp/>set<sp/>a<sp/>value<sp/>out<sp/>of<sp/>bounds,<sp/>for<sp/>maximum<sp/>flexibility.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"></highlight><highlight class="comment">//<sp/>However<sp/>this<sp/>may<sp/>not<sp/>be<sp/>ideal<sp/>for<sp/>all<sp/>uses,<sp/>as<sp/>some<sp/>user<sp/>code<sp/>may<sp/>break<sp/>on<sp/>out<sp/>of<sp/>bound<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TempInputScalar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_clamp_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_clamp_max)</highlight></codeline>
<codeline lineno="3397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fmt_buf[32];</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data_buf[32];</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/>format<sp/>=<sp/>ImParseFormatTrimDecorations(format,<sp/>fmt_buf,<sp/>IM_ARRAYSIZE(fmt_buf));</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/>DataTypeFormatString(data_buf,<sp/>IM_ARRAYSIZE(data_buf),<sp/>data_type,<sp/>p_data,<sp/>format);</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/>ImStrTrimBlanks(data_buf);</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiInputTextFlags<sp/>flags<sp/>=<sp/>ImGuiInputTextFlags_AutoSelectAll<sp/>|<sp/>ImGuiInputTextFlags_NoMarkEdited;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>((data_type<sp/>==<sp/>ImGuiDataType_Float<sp/>||<sp/>data_type<sp/>==<sp/>ImGuiDataType_Double)<sp/>?<sp/>ImGuiInputTextFlags_CharsScientific<sp/>:<sp/>ImGuiInputTextFlags_CharsDecimal);</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TempInputText(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>data_buf,<sp/>IM_ARRAYSIZE(data_buf),<sp/>flags))</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>old<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_type_size<sp/>=<sp/>DataTypeGetInfo(data_type)-&gt;Size;</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_data_type_temp_storage" kindref="compound">ImGuiDataTypeTempStorage</ref><sp/>data_backup;</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;data_backup,<sp/>p_data,<sp/>data_type_size);</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>new<sp/>value<sp/>(or<sp/>operations)<sp/>then<sp/>clamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataTypeApplyOpFromText(data_buf,<sp/>g.InputTextState.InitialTextA.Data,<sp/>data_type,<sp/>p_data,<sp/>NULL);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_clamp_min<sp/>||<sp/>p_clamp_max)</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_clamp_min<sp/>&amp;&amp;<sp/>p_clamp_max<sp/>&amp;&amp;<sp/>DataTypeCompare(data_type,<sp/>p_clamp_min,<sp/>p_clamp_max)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImSwap(p_clamp_min,<sp/>p_clamp_max);</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataTypeClamp(data_type,<sp/>p_data,<sp/>p_clamp_min,<sp/>p_clamp_max);</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>mark<sp/>as<sp/>edited<sp/>if<sp/>new<sp/>value<sp/>is<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/>memcmp(&amp;data_backup,<sp/>p_data,<sp/>data_type_size)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed)</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="3431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>p_data,<sp/>p_step,<sp/>p_step_fast<sp/>are<sp/>_pointers_<sp/>to<sp/>a<sp/>memory<sp/>address<sp/>holding<sp/>the<sp/>data.<sp/>For<sp/>an<sp/>Input<sp/>widget,<sp/>p_step<sp/>and<sp/>p_step_fast<sp/>are<sp/>optional.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>code<sp/>of<sp/>e.g.<sp/>InputFloat(),<sp/>InputInt()<sp/>etc.<sp/>or<sp/>examples<sp/>in<sp/>&apos;Demo-&gt;Widgets-&gt;Data<sp/>Types&apos;<sp/>to<sp/>understand<sp/>how<sp/>to<sp/>use<sp/>this<sp/>function<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputScalar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_step,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_step_fast,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"></highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/>DataTypeGetInfo(data_type)-&gt;PrintFmt;</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64];</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/>DataTypeFormatString(buf,<sp/>IM_ARRAYSIZE(buf),<sp/>data_type,<sp/>p_data,<sp/>format);</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"></highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>(ImGuiInputTextFlags_CharsHexadecimal<sp/>|<sp/>ImGuiInputTextFlags_CharsScientific))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiInputTextFlags_CharsDecimal;</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiInputTextFlags_AutoSelectAll;</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiInputTextFlags_NoMarkEdited;<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>call<sp/>MarkItemEdited()<sp/>ourselves<sp/>by<sp/>comparing<sp/>the<sp/>actual<sp/>data<sp/>rather<sp/>than<sp/>the<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_step<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>button_size<sp/>=<sp/>GetFrameHeight();</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginGroup();<sp/></highlight><highlight class="comment">//<sp/>The<sp/>only<sp/>purpose<sp/>of<sp/>the<sp/>group<sp/>here<sp/>is<sp/>to<sp/>allow<sp/>the<sp/>caller<sp/>to<sp/>query<sp/>item<sp/>data<sp/>e.g.<sp/>IsItemActive()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushID(label);</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextItemWidth(ImMax(1.0f,<sp/>CalcItemWidth()<sp/>-<sp/>(button_size<sp/>+<sp/>style.ItemInnerSpacing.x)<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InputText(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>buf,<sp/>IM_ARRAYSIZE(buf),<sp/>flags))<sp/></highlight><highlight class="comment">//<sp/>PushId(label)<sp/>+<sp/>&quot;&quot;<sp/>gives<sp/>us<sp/>the<sp/>expected<sp/>ID<sp/>from<sp/>outside<sp/>point<sp/>of<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/>DataTypeApplyOpFromText(buf,<sp/>g.InputTextState.InitialTextA.Data,<sp/>data_type,<sp/>p_data,<sp/>format);</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>buttons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>backup_frame_padding<sp/>=<sp/>style.FramePadding;</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>style.FramePadding.x<sp/>=<sp/>style.FramePadding.y;</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiButtonFlags<sp/>button_flags<sp/>=<sp/>ImGuiButtonFlags_Repeat<sp/>|<sp/>ImGuiButtonFlags_DontClosePopups;</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_ReadOnly)</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginDisabled();</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ButtonEx(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(button_size,<sp/>button_size),<sp/>button_flags))</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataTypeApplyOp(data_type,<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">,<sp/>p_data,<sp/>p_data,<sp/>g.IO.KeyCtrl<sp/>&amp;&amp;<sp/>p_step_fast<sp/>?<sp/>p_step_fast<sp/>:<sp/>p_step);</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ButtonEx(</highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(button_size,<sp/>button_size),<sp/>button_flags))</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataTypeApplyOp(data_type,<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">,<sp/>p_data,<sp/>p_data,<sp/>g.IO.KeyCtrl<sp/>&amp;&amp;<sp/>p_step_fast<sp/>?<sp/>p_step_fast<sp/>:<sp/>p_step);</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_ReadOnly)</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndDisabled();</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_end<sp/>=<sp/>FindRenderedTextEnd(label);</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>!=<sp/>label_end)</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(label,<sp/>label_end);</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>style.FramePadding<sp/>=<sp/>backup_frame_padding;</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InputText(label,<sp/>buf,<sp/>IM_ARRAYSIZE(buf),<sp/>flags))</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/>DataTypeApplyOpFromText(buf,<sp/>g.InputTextState.InitialTextA.Data,<sp/>data_type,<sp/>p_data,<sp/>format);</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed)</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(g.LastItemData.ID);</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="3507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputScalarN(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiDataType<sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>components,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_step,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_step_fast,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginGroup();</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(label);</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/>PushMultiItemsWidths(components,<sp/>CalcItemWidth());</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>type_size<sp/>=<sp/>GDataTypeInfo[data_type].Size;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>components;<sp/>i++)</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushID(i);</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>g.Style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>|=<sp/>InputScalar(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>data_type,<sp/>p_data,<sp/>p_step,<sp/>p_step_fast,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopItemWidth();</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_data<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)p_data<sp/>+<sp/>type_size);</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_end<sp/>=<sp/>FindRenderedTextEnd(label);</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>!=<sp/>label_end)</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0.0f,<sp/>g.Style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(label,<sp/>label_end);</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputFloat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_fast,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiInputTextFlags_CharsScientific;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputScalar(label,<sp/>ImGuiDataType_Float,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)v,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>&gt;<sp/>0.0f<sp/>?<sp/>&amp;<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>:<sp/>NULL),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(step_fast<sp/>&gt;<sp/>0.0f<sp/>?<sp/>&amp;step_fast<sp/>:<sp/>NULL),<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputFloat2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v[2],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputScalarN(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>2,<sp/>NULL,<sp/>NULL,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputFloat3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v[3],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputScalarN(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>3,<sp/>NULL,<sp/>NULL,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputFloat4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v[4],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputScalarN(label,<sp/>ImGuiDataType_Float,<sp/>v,<sp/>4,<sp/>NULL,<sp/>NULL,<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputInt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step_fast,<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hexadecimal<sp/>input<sp/>provided<sp/>as<sp/>a<sp/>convenience<sp/>but<sp/>the<sp/>flag<sp/>name<sp/>is<sp/>awkward.<sp/>Typically<sp/>you&apos;d<sp/>use<sp/>InputText()<sp/>to<sp/>parse<sp/>your<sp/>own<sp/>data,<sp/>if<sp/>you<sp/>want<sp/>to<sp/>handle<sp/>prefixes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CharsHexadecimal)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;%08X&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputScalar(label,<sp/>ImGuiDataType_S32,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)v,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>&gt;<sp/>0<sp/>?<sp/>&amp;<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>:<sp/>NULL),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(step_fast<sp/>&gt;<sp/>0<sp/>?<sp/>&amp;step_fast<sp/>:<sp/>NULL),<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputInt2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[2],<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputScalarN(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>2,<sp/>NULL,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>flags);</highlight></codeline>
<codeline lineno="3575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputInt3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[3],<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputScalarN(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>3,<sp/>NULL,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>flags);</highlight></codeline>
<codeline lineno="3580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputInt4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[4],<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputScalarN(label,<sp/>ImGuiDataType_S32,<sp/>v,<sp/>4,<sp/>NULL,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>flags);</highlight></codeline>
<codeline lineno="3585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputDouble(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_fast,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>ImGuiInputTextFlags<sp/>flags)</highlight></codeline>
<codeline lineno="3588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiInputTextFlags_CharsScientific;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputScalar(label,<sp/>ImGuiDataType_Double,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)v,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>&gt;<sp/>0.0<sp/>?<sp/>&amp;<ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>:<sp/>NULL),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(step_fast<sp/>&gt;<sp/>0.0<sp/>?<sp/>&amp;step_fast<sp/>:<sp/>NULL),<sp/>format,<sp/>flags);</highlight></codeline>
<codeline lineno="3591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>InputText,<sp/>InputTextMultiline,<sp/>InputTextWithHint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputText()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputTextWithHint()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputTextMultiline()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>InputTextEx()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3600"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size,<sp/>ImGuiInputTextFlags<sp/>flags,<sp/>ImGuiInputTextCallback<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="3603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(!(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_Multiline));<sp/></highlight><highlight class="comment">//<sp/>call<sp/>InputTextMultiline()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputTextEx(label,<sp/>NULL,<sp/>buf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)buf_size,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0),<sp/>flags,<sp/>callback,<sp/>user_data);</highlight></codeline>
<codeline lineno="3606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputTextMultiline(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size,<sp/>ImGuiInputTextFlags<sp/>flags,<sp/>ImGuiInputTextCallback<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="3609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputTextEx(label,<sp/>NULL,<sp/>buf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)buf_size,<sp/>size,<sp/>flags<sp/>|<sp/>ImGuiInputTextFlags_Multiline,<sp/>callback,<sp/>user_data);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputTextWithHint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hint,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size,<sp/>ImGuiInputTextFlags<sp/>flags,<sp/>ImGuiInputTextCallback<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="3614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(!(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_Multiline));<sp/></highlight><highlight class="comment">//<sp/>call<sp/>InputTextMultiline()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InputTextEx(label,<sp/>hint,<sp/>buf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)buf_size,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0),<sp/>flags,<sp/>callback,<sp/>user_data);</highlight></codeline>
<codeline lineno="3617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>InputTextCalcTextLenAndLineCount(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>out_text_end)</highlight></codeline>
<codeline lineno="3620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s<sp/>=<sp/>text_begin;</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*s++)<sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>only<sp/>matching<sp/>for<sp/>\n<sp/>so<sp/>we<sp/>can<sp/>ignore<sp/>UTF-8<sp/>decoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_count++;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/>s--;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>s[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_count++;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_text_end<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>line_count;</highlight></codeline>
<codeline lineno="3631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>InputTextCalcTextSizeW(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>text_begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>text_end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar**<sp/>remaining,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>out_offset,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop_on_new_line)</highlight></codeline>
<codeline lineno="3634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>font<sp/>=<sp/>g.Font;</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>line_height<sp/>=<sp/>g.FontSize;</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>line_height<sp/>/<sp/>font-&gt;FontSize;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_size<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0);</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>s<sp/>=<sp/>text_begin;</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s<sp/>&lt;<sp/>text_end)</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)(*s++);</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.x<sp/>=<sp/>ImMax(text_size.x,<sp/>line_width);</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.y<sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stop_on_new_line)</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>char_width<sp/>=<sp/>font-&gt;GetCharAdvance((ImWchar)c)<sp/>*<sp/><ref refid="group__gtc__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width<sp/>+=<sp/>char_width;</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_size.x<sp/>&lt;<sp/>line_width)</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.x<sp/>=<sp/>line_width;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_offset)</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_offset<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(line_width,<sp/>text_size.y<sp/>+<sp/>line_height);<sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>allow<sp/>for<sp/>the<sp/>possibility<sp/>of<sp/>sitting<sp/>after<sp/>a<sp/>trailing<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_width<sp/>&gt;<sp/>0<sp/>||<sp/>text_size.y<sp/>==<sp/>0.0f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whereas<sp/>size.y<sp/>will<sp/>ignore<sp/>the<sp/>trailing<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.y<sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining)</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*remaining<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text_size;</highlight></codeline>
<codeline lineno="3676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wrapper<sp/>for<sp/>stb_textedit.h<sp/>to<sp/>edit<sp/>text<sp/>(our<sp/>wrapper<sp/>is<sp/>for:<sp/>statically<sp/>sized<sp/>buffer,<sp/>single-line,<sp/>wchar<sp/>characters.<sp/>InputText<sp/>converts<sp/>between<sp/>UTF-8<sp/>and<sp/>wchar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ImStb</highlight></codeline>
<codeline lineno="3680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>STB_TEXTEDIT_STRINGLEN(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj-&gt;CurLenW;<sp/>}</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ImWchar<sp/>STB_TEXTEDIT_GETCHAR(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj-&gt;TextW[idx];<sp/>}</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>STB_TEXTEDIT_GETWIDTH(<ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_start_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_idx)<sp/><sp/>{<sp/>ImWchar<sp/>c<sp/>=<sp/>obj-&gt;TextW[line_start_idx<sp/>+<sp/>char_idx];<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STB_TEXTEDIT_GETWIDTH_NEWLINE;<sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.Font-&gt;GetCharAdvance(c)<sp/>*<sp/>(g.FontSize<sp/>/<sp/>g.Font-&gt;FontSize);<sp/>}</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>STB_TEXTEDIT_KEYTOTEXT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key<sp/>&gt;=<sp/>0x200000<sp/>?<sp/>0<sp/>:<sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ImWchar<sp/>STB_TEXTEDIT_NEWLINE<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>STB_TEXTEDIT_LAYOUTROW(<ref refid="struct_stb_textedit_row" kindref="compound">StbTexteditRow</ref>*<sp/>r,<sp/><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_start_idx)</highlight></codeline>
<codeline lineno="3688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>text<sp/>=<sp/>obj-&gt;TextW.Data;</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>text_remaining<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size<sp/>=<sp/>InputTextCalcTextSizeW(text<sp/>+<sp/>line_start_idx,<sp/>text<sp/>+<sp/>obj-&gt;CurLenW,<sp/>&amp;text_remaining,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;x0<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;x1<sp/>=<sp/>size.x;</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;baseline_y_delta<sp/>=<sp/>size.y;</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;ymin<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;ymax<sp/>=<sp/>size.y;</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;num_chars<sp/>=<sp/>(int)(text_remaining<sp/>-<sp/>(text<sp/>+<sp/>line_start_idx));</highlight></codeline>
<codeline lineno="3698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>ImGuiInputTextFlags_Password<sp/>is<sp/>set,<sp/>we<sp/>don&apos;t<sp/>want<sp/>actions<sp/>such<sp/>as<sp/>CTRL+Arrow<sp/>to<sp/>leak<sp/>the<sp/>fact<sp/>that<sp/>underlying<sp/>data<sp/>are<sp/>blanks<sp/>or<sp/>separators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_separator(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImCharIsBlankW(c)<sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>c==</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>is_word_boundary_from_right(<ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;Flags<sp/>&amp;<sp/>ImGuiInputTextFlags_Password)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idx<sp/>&gt;<sp/>0<sp/>?<sp/>(is_separator(obj-&gt;TextW[idx<sp/>-<sp/>1])<sp/>&amp;&amp;<sp/>!is_separator(obj-&gt;TextW[idx])<sp/>)<sp/>:<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>is_word_boundary_from_left(<ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;Flags<sp/>&amp;<sp/>ImGuiInputTextFlags_Password)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idx<sp/>&gt;<sp/>0<sp/>?<sp/>(!is_separator(obj-&gt;TextW[idx<sp/>-<sp/>1])<sp/>&amp;&amp;<sp/>is_separator(obj-&gt;TextW[idx]))<sp/>:<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>STB_TEXTEDIT_MOVEWORDLEFT_IMPL(<ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/><sp/><sp/>{<sp/>idx--;<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(idx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>!is_word_boundary_from_right(obj,<sp/>idx))<sp/>idx--;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idx<sp/>&lt;<sp/>0<sp/>?<sp/>0<sp/>:<sp/>idx;<sp/>}</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>STB_TEXTEDIT_MOVEWORDRIGHT_MAC(<ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/><sp/><sp/>{<sp/>idx++;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>obj-&gt;CurLenW;<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>!is_word_boundary_from_left(obj,<sp/>idx))<sp/>idx++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idx<sp/>&gt;<sp/>len<sp/>?<sp/>len<sp/>:<sp/>idx;<sp/>}</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_MOVEWORDLEFT<sp/><sp/><sp/>STB_TEXTEDIT_MOVEWORDLEFT_IMPL<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>They<sp/>need<sp/>to<sp/>be<sp/>#define<sp/>for<sp/>stb_textedit.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Move<sp/>setting<sp/>to<sp/>IO<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_MOVEWORDRIGHT<sp/><sp/>STB_TEXTEDIT_MOVEWORDRIGHT_MAC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>STB_TEXTEDIT_MOVEWORDRIGHT_WIN(<ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/><sp/><sp/>{<sp/>idx++;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>obj-&gt;CurLenW;<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>!is_word_boundary_from_right(obj,<sp/>idx))<sp/>idx++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idx<sp/>&gt;<sp/>len<sp/>?<sp/>len<sp/>:<sp/>idx;<sp/>}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_MOVEWORDRIGHT<sp/><sp/>STB_TEXTEDIT_MOVEWORDRIGHT_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3713"><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>STB_TEXTEDIT_DELETECHARS(<ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="3715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/>ImWchar*<sp/>dst<sp/>=<sp/>obj-&gt;TextW.Data<sp/>+<sp/>pos;</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>maintain<sp/>our<sp/>buffer<sp/>length<sp/>in<sp/>both<sp/>UTF-8<sp/>and<sp/>wchar<sp/>formats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/>obj-&gt;Edited<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/>obj-&gt;CurLenA<sp/>-=<sp/>ImTextCountUtf8BytesFromStr(dst,<sp/>dst<sp/>+<sp/>n);</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/>obj-&gt;CurLenW<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>remaining<sp/>text<sp/>(FIXME-OPT:<sp/>Use<sp/>memmove)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>src<sp/>=<sp/>obj-&gt;TextW.Data<sp/>+<sp/>pos<sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ImWchar<sp/>c<sp/>=<sp/>*src++)</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>STB_TEXTEDIT_INSERTCHARS(<ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>new_text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_text_len)</highlight></codeline>
<codeline lineno="3731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_resizable<sp/>=<sp/>(obj-&gt;Flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackResize)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>text_len<sp/>=<sp/>obj-&gt;CurLenW;</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(pos<sp/>&lt;=<sp/>text_len);</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_text_len_utf8<sp/>=<sp/>ImTextCountUtf8BytesFromStr(new_text,<sp/>new_text<sp/>+<sp/>new_text_len);</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_resizable<sp/>&amp;&amp;<sp/>(new_text_len_utf8<sp/>+<sp/>obj-&gt;CurLenA<sp/>+<sp/>1<sp/>&gt;<sp/>obj-&gt;BufCapacityA))</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grow<sp/>internal<sp/>buffer<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_text_len<sp/>+<sp/>text_len<sp/>+<sp/>1<sp/>&gt;<sp/>obj-&gt;TextW.Size)</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_resizable)</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(text_len<sp/>&lt;<sp/>obj-&gt;TextW.Size);</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj-&gt;TextW.resize(text_len<sp/>+<sp/>ImClamp(new_text_len<sp/>*<sp/>4,<sp/>32,<sp/>ImMax(256,<sp/>new_text_len))<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/>ImWchar*<sp/>text<sp/>=<sp/>obj-&gt;TextW.Data;</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>text_len)</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(text<sp/>+<sp/>pos<sp/>+<sp/>new_text_len,<sp/>text<sp/>+<sp/>pos,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(text_len<sp/>-<sp/>pos)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImWchar));</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(text<sp/>+<sp/>pos,<sp/>new_text,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)new_text_len<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImWchar));</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/>obj-&gt;Edited<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/>obj-&gt;CurLenW<sp/>+=<sp/>new_text_len;</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/>obj-&gt;CurLenA<sp/>+=<sp/>new_text_len_utf8;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/>obj-&gt;TextW[obj-&gt;CurLenW]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>use<sp/>an<sp/>enum<sp/>so<sp/>we<sp/>can<sp/>build<sp/>even<sp/>with<sp/>conflicting<sp/>symbols<sp/>(if<sp/>another<sp/>user<sp/>of<sp/>stb_textedit.h<sp/>leak<sp/>their<sp/>STB_TEXTEDIT_K_*<sp/>symbols)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_LEFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200000<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_RIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200001<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_UP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200002<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_DOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200003<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_LINESTART<sp/><sp/><sp/><sp/>0x200004<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>to<sp/>start<sp/>of<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_LINEEND<sp/><sp/><sp/><sp/><sp/><sp/>0x200005<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>to<sp/>end<sp/>of<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_TEXTSTART<sp/><sp/><sp/><sp/>0x200006<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>to<sp/>start<sp/>of<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_TEXTEND<sp/><sp/><sp/><sp/><sp/><sp/>0x200007<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>to<sp/>end<sp/>of<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_DELETE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200008<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>delete<sp/>selection<sp/>or<sp/>character<sp/>under<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_BACKSPACE<sp/><sp/><sp/><sp/>0x200009<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>delete<sp/>selection<sp/>or<sp/>character<sp/>left<sp/>of<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_UNDO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20000A<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>perform<sp/>undo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_REDO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20000B<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>perform<sp/>redo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_WORDLEFT<sp/><sp/><sp/><sp/><sp/>0x20000C<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>left<sp/>one<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_WORDRIGHT<sp/><sp/><sp/><sp/>0x20000D<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>right<sp/>one<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_PGUP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20000E<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>up<sp/>a<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_PGDOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20000F<sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>input<sp/>to<sp/>move<sp/>cursor<sp/>down<sp/>a<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_K_SHIFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x400000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TEXTEDIT_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imstb_textedit.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stb_textedit<sp/>internally<sp/>allows<sp/>for<sp/>a<sp/>single<sp/>undo<sp/>record<sp/>to<sp/>do<sp/>addition<sp/>and<sp/>deletion,<sp/>but<sp/>somehow,<sp/>calling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>stb_textedit_paste()<sp/>function<sp/>creates<sp/>two<sp/>separate<sp/>records,<sp/>so<sp/>we<sp/>perform<sp/>it<sp/>manually.<sp/>(FIXME:<sp/>Report<sp/>to<sp/>nothings/stb?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stb_textedit_replace(<ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>str,<sp/><ref refid="struct_s_t_b___textedit_state" kindref="compound">STB_TexteditState</ref>*<sp/>state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STB_TEXTEDIT_CHARTYPE*<sp/>text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>text_len)</highlight></codeline>
<codeline lineno="3787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/>stb_text_makeundo_replace(str,<sp/>state,<sp/>0,<sp/>str-&gt;CurLenW,<sp/>text_len);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/>ImStb::STB_TEXTEDIT_DELETECHARS(str,<sp/>0,<sp/>str-&gt;CurLenW);</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_len<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImStb::STB_TEXTEDIT_INSERTCHARS(str,<sp/>0,<sp/>text,<sp/>text_len))</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;cursor<sp/>=<sp/>text_len;</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;has_preferred_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(0);<sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>to<sp/>insert<sp/>character,<sp/>normally<sp/>shouldn&apos;t<sp/>happen<sp/>because<sp/>of<sp/>how<sp/>we<sp/>currently<sp/>use<sp/>stb_textedit_replace()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ImStb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGuiInputTextState::OnKeyPressed(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="3804"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/>stb_textedit_key(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;Stb,<sp/>key);</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/>CursorFollow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/>CursorAnimReset();</highlight></codeline>
<codeline lineno="3808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal">ImGuiInputTextCallbackData::ImGuiInputTextCallbackData()</highlight></codeline>
<codeline lineno="3811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Public<sp/>API<sp/>to<sp/>manipulate<sp/>UTF-8<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>expose<sp/>UTF-8<sp/>to<sp/>the<sp/>user<sp/>(unlike<sp/>the<sp/>STB_TEXTEDIT_*<sp/>functions<sp/>which<sp/>are<sp/>manipulating<sp/>wchar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>The<sp/>existence<sp/>of<sp/>this<sp/>rarely<sp/>exercised<sp/>code<sp/>path<sp/>is<sp/>a<sp/>bit<sp/>of<sp/>a<sp/>nuisance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGuiInputTextCallbackData::DeleteChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_count)</highlight></codeline>
<codeline lineno="3819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(pos<sp/>+<sp/>bytes_count<sp/>&lt;=<sp/>BufTextLen);</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dst<sp/>=<sp/>Buf<sp/>+<sp/>pos;</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src<sp/>=<sp/>Buf<sp/>+<sp/>pos<sp/>+<sp/>bytes_count;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*src++)</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CursorPos<sp/>&gt;=<sp/>pos<sp/>+<sp/>bytes_count)</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorPos<sp/>-=<sp/>bytes_count;</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CursorPos<sp/>&gt;=<sp/>pos)</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorPos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/>SelectionStart<sp/>=<sp/>SelectionEnd<sp/>=<sp/>CursorPos;</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/>BufDirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/>BufTextLen<sp/>-=<sp/>bytes_count;</highlight></codeline>
<codeline lineno="3834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGuiInputTextCallbackData::InsertChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>new_text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>new_text_end)</highlight></codeline>
<codeline lineno="3837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_resizable<sp/>=<sp/>(Flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackResize)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_text_len<sp/>=<sp/>new_text_end<sp/>?<sp/>(int)(new_text_end<sp/>-<sp/>new_text)<sp/>:<sp/>(int)strlen(new_text);</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_text_len<sp/>+<sp/>BufTextLen<sp/>&gt;=<sp/>BufSize)</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_resizable)</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contrary<sp/>to<sp/>STB_TEXTEDIT_INSERTCHARS()<sp/>this<sp/>is<sp/>working<sp/>in<sp/>the<sp/>UTF8<sp/>buffer,<sp/>hence<sp/>the<sp/>mildly<sp/>similar<sp/>code<sp/>(until<sp/>we<sp/>remove<sp/>the<sp/>U16<sp/>buffer<sp/>altogether!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>edit_state<sp/>=<sp/>&amp;g.InputTextState;</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(edit_state-&gt;ID<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>g.ActiveId<sp/>==<sp/>edit_state-&gt;ID);</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(Buf<sp/>==<sp/>edit_state-&gt;TextA.Data);</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_buf_size<sp/>=<sp/>BufTextLen<sp/>+<sp/>ImClamp(new_text_len<sp/>*<sp/>4,<sp/>32,<sp/>ImMax(256,<sp/>new_text_len))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edit_state-&gt;TextA.reserve(new_buf_size<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buf<sp/>=<sp/>edit_state-&gt;TextA.Data;</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BufSize<sp/>=<sp/>edit_state-&gt;BufCapacityA<sp/>=<sp/>new_buf_size;</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BufTextLen<sp/>!=<sp/>pos)</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(Buf<sp/>+<sp/>pos<sp/>+<sp/>new_text_len,<sp/>Buf<sp/>+<sp/>pos,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(BufTextLen<sp/>-<sp/>pos));</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(Buf<sp/>+<sp/>pos,<sp/>new_text,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)new_text_len<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/>Buf[BufTextLen<sp/>+<sp/>new_text_len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CursorPos<sp/>&gt;=<sp/>pos)</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CursorPos<sp/>+=<sp/>new_text_len;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/>SelectionStart<sp/>=<sp/>SelectionEnd<sp/>=<sp/>CursorPos;</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/>BufDirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/>BufTextLen<sp/>+=<sp/>new_text_len;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>false<sp/>to<sp/>discard<sp/>a<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InputTextFilterCharacter(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>p_char,<sp/>ImGuiInputTextFlags<sp/>flags,<sp/>ImGuiInputTextCallback<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data,<sp/>ImGuiInputSource<sp/>input_source)</highlight></codeline>
<codeline lineno="3870"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(input_source<sp/>==<sp/>ImGuiInputSource_Keyboard<sp/>||<sp/>input_source<sp/>==<sp/>ImGuiInputSource_Clipboard);</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*p_char;</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter<sp/>non-printable<sp/>(NB:<sp/>isprint<sp/>is<sp/>unreliable!<sp/>see<sp/>#2467)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>apply_named_filters<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0x20)</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>|=<sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_Multiline));</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>|=<sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_AllowTabInput));</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pass)</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apply_named_filters<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Override<sp/>named<sp/>filters<sp/>below<sp/>so<sp/>newline<sp/>and<sp/>tabs<sp/>can<sp/>still<sp/>be<sp/>inserted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_source<sp/>!=<sp/>ImGuiInputSource_Clipboard)</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>ignore<sp/>Ascii<sp/>representation<sp/>of<sp/>delete<sp/>(emitted<sp/>from<sp/>Backspace<sp/>on<sp/>OSX,<sp/>see<sp/>#2578,<sp/>#2817)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>127)</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter<sp/>private<sp/>Unicode<sp/>range.<sp/>GLFW<sp/>on<sp/>OSX<sp/>seems<sp/>to<sp/>send<sp/>private<sp/>characters<sp/>for<sp/>special<sp/>keys<sp/>like<sp/>arrow<sp/>keys<sp/>(FIXME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/>0xE000<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xF8FF)</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter<sp/>Unicode<sp/>ranges<sp/>we<sp/>are<sp/>not<sp/>handling<sp/>in<sp/>this<sp/>build</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>IM_UNICODE_CODEPOINT_MAX)</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generic<sp/>named<sp/>filters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apply_named_filters<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>(ImGuiInputTextFlags_CharsDecimal<sp/>|<sp/>ImGuiInputTextFlags_CharsHexadecimal<sp/>|<sp/>ImGuiInputTextFlags_CharsUppercase<sp/>|<sp/>ImGuiInputTextFlags_CharsNoBlank<sp/>|<sp/>ImGuiInputTextFlags_CharsScientific)))</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>libc<sp/>allows<sp/>overriding<sp/>locale,<sp/>with<sp/>e.g.<sp/>&apos;setlocale(LC_NUMERIC,<sp/>&quot;de_DE.UTF-8&quot;);&apos;<sp/>which<sp/>affect<sp/>the<sp/>output/input<sp/>of<sp/>printf/scanf<sp/>to<sp/>use<sp/>e.g.<sp/>&apos;,&apos;<sp/>instead<sp/>of<sp/>&apos;.&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>standard<sp/>mandate<sp/>that<sp/>programs<sp/>starts<sp/>in<sp/>the<sp/>&quot;C&quot;<sp/>locale<sp/>where<sp/>the<sp/>decimal<sp/>point<sp/>is<sp/>&apos;.&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>really<sp/>intend<sp/>to<sp/>provide<sp/>widespread<sp/>support<sp/>for<sp/>it,<sp/>but<sp/>out<sp/>of<sp/>empathy<sp/>for<sp/>people<sp/>stuck<sp/>with<sp/>using<sp/>odd<sp/>API,<sp/>we<sp/>support<sp/>the<sp/>bare<sp/>minimum<sp/>aka<sp/>overriding<sp/>the<sp/>decimal<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>default<sp/>decimal_point<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ImGui::GetCurrentContext()-&gt;PlatformLocaleDecimalPoint<sp/>=<sp/>*localeconv()-&gt;decimal_point;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Users<sp/>of<sp/>non-default<sp/>decimal<sp/>point<sp/>(in<sp/>particular<sp/>&apos;,&apos;)<sp/>may<sp/>be<sp/>affected<sp/>by<sp/>word-selection<sp/>logic<sp/>(is_word_boundary_from_right/is_word_boundary_from_left)<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>c_decimal_point<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)g.PlatformLocaleDecimalPoint;</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"></highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>0-9<sp/>.<sp/>-<sp/>+<sp/>*<sp/>/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CharsDecimal)</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/>c_decimal_point)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>0-9<sp/>.<sp/>-<sp/>+<sp/>*<sp/>/<sp/>e<sp/>E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CharsScientific)</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/>c_decimal_point)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"></highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>0-9<sp/>a-F<sp/>A-F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CharsHexadecimal)</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>a-z<sp/>into<sp/>A-Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CharsUppercase)</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_char<sp/>=<sp/>(c<sp/>+=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CharsNoBlank)</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImCharIsBlankW(c))</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Custom<sp/>callback<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackCharFilter)</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_text_callback_data" kindref="compound">ImGuiInputTextCallbackData</ref><sp/>callback_data;</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;callback_data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_gui_input_text_callback_data" kindref="compound">ImGuiInputTextCallbackData</ref>));</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.EventFlag<sp/>=<sp/>ImGuiInputTextFlags_CallbackCharFilter;</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.EventChar<sp/>=<sp/>(ImWchar)c;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.Flags<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.UserData<sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback(&amp;callback_data)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_char<sp/>=<sp/>callback_data.EventChar;</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback_data.EventChar)</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Edit<sp/>a<sp/>string<sp/>of<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>buf_size<sp/>account<sp/>for<sp/>the<sp/>zero-terminator,<sp/>so<sp/>a<sp/>buf_size<sp/>of<sp/>6<sp/>can<sp/>hold<sp/>&quot;Hello&quot;<sp/>but<sp/>not<sp/>&quot;Hello!&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>This<sp/>is<sp/>so<sp/>we<sp/>can<sp/>easily<sp/>call<sp/>InputText()<sp/>on<sp/>static<sp/>arrays<sp/>using<sp/>ARRAYSIZE()<sp/>and<sp/>to<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Note<sp/>that<sp/>in<sp/>std::string<sp/>world,<sp/>capacity()<sp/>would<sp/>omit<sp/>1<sp/>byte<sp/>used<sp/>by<sp/>the<sp/>zero-terminator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>When<sp/>active,<sp/>hold<sp/>on<sp/>a<sp/>privately<sp/>held<sp/>copy<sp/>of<sp/>the<sp/>text<sp/>(and<sp/>apply<sp/>back<sp/>to<sp/>&apos;buf&apos;).<sp/>So<sp/>changing<sp/>&apos;buf&apos;<sp/>while<sp/>the<sp/>InputText<sp/>is<sp/>active<sp/>has<sp/>no<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>you<sp/>want<sp/>to<sp/>use<sp/>ImGui::InputText()<sp/>with<sp/>std::string,<sp/>see<sp/>misc/cpp/imgui_stdlib.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3963"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(FIXME:<sp/>Rather<sp/>confusing<sp/>and<sp/>messy<sp/>function,<sp/>among<sp/>the<sp/>worse<sp/>part<sp/>of<sp/>our<sp/>codebase,<sp/>expecting<sp/>to<sp/>rewrite<sp/>a<sp/>V2<sp/>at<sp/>some<sp/>point..<sp/>Partly<sp/>because<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3964"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>doing<sp/>UTF8<sp/>&gt;<sp/>U16<sp/>&gt;<sp/>UTF8<sp/>conversions<sp/>on<sp/>the<sp/>go<sp/>to<sp/>easily<sp/>interface<sp/>with<sp/>stb_textedit.<sp/>Ideally<sp/>should<sp/>stay<sp/>in<sp/>UTF-8<sp/>all<sp/>the<sp/>time.<sp/>See<sp/>https://github.com/nothings/stb/issues/188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::InputTextEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hint,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg,<sp/>ImGuiInputTextFlags<sp/>flags,<sp/>ImGuiInputTextCallback<sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>callback_user_data)</highlight></codeline>
<codeline lineno="3966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(buf<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>buf_size<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(!((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackHistory)<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_Multiline)));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>both<sp/>together<sp/>(they<sp/>both<sp/>use<sp/>up/down<sp/>keys)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(!((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackCompletion)<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_AllowTabInput)));<sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>both<sp/>together<sp/>(they<sp/>both<sp/>use<sp/>tab<sp/>key)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>g.IO;</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RENDER_SELECTION_WHEN_INACTIVE<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_multiline<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_Multiline)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_readonly<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_ReadOnly)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_password<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_Password)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_undoable<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_NoUndoRedo)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_resizable<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackResize)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_resizable)</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(callback<sp/>!=<sp/>NULL);<sp/></highlight><highlight class="comment">//<sp/>Must<sp/>provide<sp/>a<sp/>callback<sp/>if<sp/>you<sp/>set<sp/>the<sp/>ImGuiInputTextFlags_CallbackResize<sp/>flag!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_multiline)<sp/></highlight><highlight class="comment">//<sp/>Open<sp/>group<sp/>before<sp/>calling<sp/>GetID()<sp/>because<sp/>groups<sp/>tracks<sp/>id<sp/>created<sp/>within<sp/>their<sp/>scope<sp/>(including<sp/>the<sp/>scrollbar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginGroup();</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>frame_size<sp/>=<sp/>CalcItemSize(size_arg,<sp/>CalcItemWidth(),<sp/>(is_multiline<sp/>?<sp/>g.FontSize<sp/>*<sp/>8.0f<sp/>:<sp/>label_size.y)<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f);<sp/></highlight><highlight class="comment">//<sp/>Arbitrary<sp/>default<sp/>of<sp/>8<sp/>lines<sp/>high<sp/>for<sp/>multi-line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>total_size<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(frame_size.x<sp/>+<sp/>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>label_size.x<sp/>:<sp/>0.0f),<sp/>frame_size.y);</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>frame_bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/>frame_size);</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>total_bb(frame_bb.Min,<sp/>frame_bb.Min<sp/>+<sp/>total_size);</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>draw_window<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>inner_size<sp/>=<sp/>frame_size;</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiItemStatusFlags<sp/>item_status_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_last_item_data" kindref="compound">ImGuiLastItemData</ref><sp/>item_data_backup;</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_multiline)</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>backup_pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(total_bb,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;frame_bb,<sp/>ImGuiItemFlags_Inputable))</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_status_flags<sp/>=<sp/>g.LastItemData.StatusFlags;</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_data_backup<sp/>=<sp/>g.LastItemData;</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>backup_pos;</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"></highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>reproduce<sp/>the<sp/>contents<sp/>of<sp/>BeginChildFrame()<sp/>in<sp/>order<sp/>to<sp/>provide<sp/>&apos;label&apos;<sp/>so<sp/>our<sp/>window<sp/>internal<sp/>data<sp/>are<sp/>easier<sp/>to<sp/>read/debug.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-NAV:<sp/>Pressing<sp/>NavActivate<sp/>will<sp/>trigger<sp/>general<sp/>child<sp/>activation<sp/>right<sp/>before<sp/>triggering<sp/>our<sp/>own<sp/>below.<sp/>Harmless<sp/>but<sp/>bizarre.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushStyleColor(ImGuiCol_ChildBg,<sp/>style.Colors[ImGuiCol_FrameBg]);</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushStyleVar(ImGuiStyleVar_ChildRounding,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushStyleVar(ImGuiStyleVar_ChildBorderSize,<sp/>style.FrameBorderSize);</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushStyleVar(ImGuiStyleVar_WindowPadding,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0));<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>no<sp/>clip<sp/>rect<sp/>so<sp/>mouse<sp/>hover<sp/>can<sp/>reach<sp/>FramePadding<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>child_visible<sp/>=<sp/>BeginChildEx(label,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>frame_bb.GetSize(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>ImGuiWindowFlags_NoMove);</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopStyleVar(3);</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopStyleColor();</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!child_visible)</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndChild();</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_window<sp/>=<sp/>g.CurrentWindow;<sp/></highlight><highlight class="comment">//<sp/>Child<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_window-&gt;DC.NavLayersActiveMaskNext<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>draw_window-&gt;DC.NavLayerCurrent);<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>to<sp/>ensure<sp/>that<sp/>EndChild()<sp/>will<sp/>display<sp/>a<sp/>navigation<sp/>highlight<sp/>so<sp/>we<sp/>can<sp/>&quot;enter&quot;<sp/>into<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_window-&gt;DC.CursorPos<sp/>+=<sp/>style.FramePadding;</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_size.x<sp/>-=<sp/>draw_window-&gt;ScrollbarSizes.x;</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Support<sp/>for<sp/>internal<sp/>ImGuiInputTextFlags_MergedItem<sp/>flag,<sp/>which<sp/>could<sp/>be<sp/>redesigned<sp/>as<sp/>an<sp/>ItemFlags<sp/>if<sp/>needed<sp/>(with<sp/>test<sp/>performed<sp/>in<sp/>ItemAdd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(total_bb,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_MergedItem))</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(total_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;frame_bb,<sp/>ImGuiItemFlags_Inputable))</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_status_flags<sp/>=<sp/>g.LastItemData.StatusFlags;</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered<sp/>=<sp/>ItemHoverable(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered)</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.MouseCursor<sp/>=<sp/>ImGuiMouseCursor_TextInput;</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"></highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>only<sp/>allowed<sp/>to<sp/>access<sp/>the<sp/>state<sp/>if<sp/>we<sp/>are<sp/>already<sp/>the<sp/>active<sp/>widget.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_text_state" kindref="compound">ImGuiInputTextState</ref>*<sp/>state<sp/>=<sp/>GetInputTextState(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_requested_by_tabbing<sp/>=<sp/>(item_status_flags<sp/>&amp;<sp/>ImGuiItemStatusFlags_FocusedByTabbing)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_requested_by_nav<sp/>=<sp/>(g.ActiveId<sp/>!=<sp/>id)<sp/>&amp;&amp;<sp/>((g.NavActivateInputId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>||<sp/>(g.NavActivateId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.NavInputSource<sp/>==<sp/>ImGuiInputSource_Keyboard));</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>user_clicked<sp/>=<sp/>hovered<sp/>&amp;&amp;<sp/>io.MouseClicked[0];</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>user_scroll_finish<sp/>=<sp/>is_multiline<sp/>&amp;&amp;<sp/>state<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>g.ActiveId<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>g.ActiveIdPreviousFrame<sp/>==<sp/>GetWindowScrollbarID(draw_window,<sp/>ImGuiAxis_Y);</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>user_scroll_active<sp/>=<sp/>is_multiline<sp/>&amp;&amp;<sp/>state<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>g.ActiveId<sp/>==<sp/>GetWindowScrollbarID(draw_window,<sp/>ImGuiAxis_Y);</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clear_active_id<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>select_all<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"></highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scroll_y<sp/>=<sp/>is_multiline<sp/>?<sp/>draw_window-&gt;Scroll.y<sp/>:<sp/>FLT_MAX;</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"></highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init_changed_specs<sp/>=<sp/>(state<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>state-&gt;Stb.single_line<sp/>!=<sp/>!is_multiline);</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init_make_active<sp/>=<sp/>(user_clicked<sp/>||<sp/>user_scroll_finish<sp/>||<sp/>input_requested_by_nav<sp/>||<sp/>input_requested_by_tabbing);</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init_state<sp/>=<sp/>(init_make_active<sp/>||<sp/>user_scroll_active);</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((init_state<sp/>&amp;&amp;<sp/>g.ActiveId<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>||<sp/>init_changed_specs)</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>state<sp/>even<sp/>if<sp/>we<sp/>don&apos;t<sp/>own<sp/>it<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>&amp;g.InputTextState;</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorAnimReset();</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"></highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>initial<sp/>buffer<sp/>value<sp/>(both<sp/>in<sp/>original<sp/>UTF-8<sp/>format<sp/>and<sp/>converted<sp/>to<sp/>wchar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>the<sp/>moment<sp/>we<sp/>focused<sp/>we<sp/>are<sp/>ignoring<sp/>the<sp/>content<sp/>of<sp/>&apos;buf&apos;<sp/>(unless<sp/>we<sp/>are<sp/>in<sp/>read-only<sp/>mode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_len<sp/>=<sp/>(int)strlen(buf);</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;InitialTextA.resize(buf_len<sp/>+<sp/>1);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UTF-8.<sp/>we<sp/>use<sp/>+1<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>.Data<sp/>is<sp/>always<sp/>pointing<sp/>to<sp/>at<sp/>least<sp/>an<sp/>empty<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(state-&gt;InitialTextA.Data,<sp/>buf,<sp/>buf_len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>edition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf_end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;TextW.resize(buf_size<sp/>+<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wchar<sp/>count<sp/>&lt;=<sp/>UTF-8<sp/>count.<sp/>we<sp/>use<sp/>+1<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>.Data<sp/>is<sp/>always<sp/>pointing<sp/>to<sp/>at<sp/>least<sp/>an<sp/>empty<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;TextA.resize(0);</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;TextAIsValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TextA<sp/>is<sp/>not<sp/>valid<sp/>yet<sp/>(we<sp/>will<sp/>display<sp/>buf<sp/>until<sp/>then)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CurLenW<sp/>=<sp/>ImTextStrFromUtf8(state-&gt;TextW.Data,<sp/>buf_size,<sp/>buf,<sp/>NULL,<sp/>&amp;buf_end);</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CurLenA<sp/>=<sp/>(int)(buf_end<sp/>-<sp/>buf);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can&apos;t<sp/>get<sp/>the<sp/>result<sp/>from<sp/>ImStrncpy()<sp/>above<sp/>because<sp/>it<sp/>is<sp/>not<sp/>UTF-8<sp/>aware.<sp/>Here<sp/>we&apos;ll<sp/>cut<sp/>off<sp/>malformed<sp/>UTF-8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"></highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preserve<sp/>cursor<sp/>position<sp/>and<sp/>undo/redo<sp/>stack<sp/>if<sp/>we<sp/>come<sp/>back<sp/>to<sp/>same<sp/>widget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>For<sp/>non-readonly<sp/>widgets<sp/>we<sp/>might<sp/>be<sp/>able<sp/>to<sp/>require<sp/>that<sp/>TextAIsValid<sp/>&amp;&amp;<sp/>TextA<sp/>==<sp/>buf<sp/>?<sp/>(untested)<sp/>and<sp/>discard<sp/>undo<sp/>stack<sp/>if<sp/>user<sp/>buffer<sp/>has<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recycle_state<sp/>=<sp/>(state-&gt;ID<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!init_changed_specs);</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recycle_state)</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recycle<sp/>existing<sp/>cursor/selection/undo<sp/>stack<sp/>but<sp/>clamp<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>a<sp/>single<sp/>mouse<sp/>click<sp/>will<sp/>override<sp/>the<sp/>cursor/position<sp/>immediately<sp/>by<sp/>calling<sp/>stb_textedit_click<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorClamp();</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;ID<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;ScrollX<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_textedit_initialize_state(&amp;state-&gt;Stb,<sp/>!is_multiline);</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"></highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_multiline)</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_AutoSelectAll)</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>select_all<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_requested_by_nav<sp/>&amp;&amp;<sp/>(!recycle_state<sp/>||<sp/>!(g.NavActivateFlags<sp/>&amp;<sp/>ImGuiActivateFlags_TryToPreserveState)))</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>select_all<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_requested_by_tabbing<sp/>||<sp/>(user_clicked<sp/>&amp;&amp;<sp/>io.KeyCtrl))</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>select_all<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"></highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_AlwaysOverwrite)</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;Stb.insert_mode<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>stb<sp/>field<sp/>name<sp/>is<sp/>indeed<sp/>incorrect<sp/>(see<sp/>#2863)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"></highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>init_make_active)</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(state<sp/>&amp;&amp;<sp/>state-&gt;ID<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFocusID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window);</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusWindow(window);</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"></highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>our<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(ImGuiNavInput_COUNT<sp/>&lt;<sp/>32);</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdUsingNavDirMask<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiDir_Left)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiDir_Right);</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_multiline<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackHistory))</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdUsingNavDirMask<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiDir_Up)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiDir_Down);</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdUsingNavInputMask<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>ImGuiNavInput_Cancel);</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveIdUsingKey(ImGuiKey_Home);</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveIdUsingKey(ImGuiKey_End);</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_multiline)</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveIdUsingKey(ImGuiKey_PageUp);</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveIdUsingKey(ImGuiKey_PageDown);</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>(ImGuiInputTextFlags_CallbackCompletion<sp/>|<sp/>ImGuiInputTextFlags_AllowTabInput))<sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>keyboard<sp/>tabbing<sp/>out<sp/>as<sp/>we<sp/>will<sp/>use<sp/>the<sp/>\t<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveIdUsingKey(ImGuiKey_Tab);</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"></highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>an<sp/>edge<sp/>case<sp/>if<sp/>ActiveId<sp/>was<sp/>set<sp/>through<sp/>another<sp/>widget<sp/>(e.g.<sp/>widget<sp/>being<sp/>swapped),<sp/>clear<sp/>id<sp/>immediately<sp/>(don&apos;t<sp/>wait<sp/>until<sp/>the<sp/>end<sp/>of<sp/>the<sp/>function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>state<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"></highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>focus<sp/>when<sp/>we<sp/>click<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>io.MouseClicked[0]<sp/>&amp;&amp;<sp/>!init_state<sp/>&amp;&amp;<sp/>!init_make_active)<sp/></highlight><highlight class="comment">//-V560</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear_active_id<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>the<sp/>decision<sp/>of<sp/>whether<sp/>we<sp/>are<sp/>going<sp/>to<sp/>take<sp/>the<sp/>path<sp/>displaying<sp/>the<sp/>cursor<sp/>or<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>render_cursor<sp/>=<sp/>(g.ActiveId<sp/>==<sp/>id)<sp/>||<sp/>(state<sp/>&amp;&amp;<sp/>user_scroll_active);</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>render_selection<sp/>=<sp/>state<sp/>&amp;&amp;<sp/>(state-&gt;HasSelection()<sp/>||<sp/>select_all)<sp/>&amp;&amp;<sp/>(RENDER_SELECTION_WHEN_INACTIVE<sp/>||<sp/>render_cursor);</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enter_pressed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"></highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>read-only<sp/>we<sp/>always<sp/>use<sp/>the<sp/>live<sp/>data<sp/>passed<sp/>to<sp/>the<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>Because<sp/>our<sp/>selection/cursor<sp/>code<sp/>currently<sp/>needs<sp/>the<sp/>wide<sp/>text<sp/>we<sp/>need<sp/>to<sp/>convert<sp/>it<sp/>when<sp/>active,<sp/>which<sp/>is<sp/>not<sp/>ideal<sp/>:(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_readonly<sp/>&amp;&amp;<sp/>state<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>(render_cursor<sp/>||<sp/>render_selection))</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf_end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;TextW.resize(buf_size<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CurLenW<sp/>=<sp/>ImTextStrFromUtf8(state-&gt;TextW.Data,<sp/>state-&gt;TextW.Size,<sp/>buf,<sp/>NULL,<sp/>&amp;buf_end);</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CurLenA<sp/>=<sp/>(int)(buf_end<sp/>-<sp/>buf);</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorClamp();</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render_selection<sp/>&amp;=<sp/>state-&gt;HasSelection();</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"></highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>the<sp/>buffer<sp/>to<sp/>render.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>buf_display_from_state<sp/>=<sp/>(render_cursor<sp/>||<sp/>render_selection<sp/>||<sp/>g.ActiveId<sp/>==<sp/>id)<sp/>&amp;&amp;<sp/>!is_readonly<sp/>&amp;&amp;<sp/>state<sp/>&amp;&amp;<sp/>state-&gt;TextAIsValid;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_displaying_hint<sp/>=<sp/>(hint<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>(buf_display_from_state<sp/>?<sp/>state-&gt;TextA.Data<sp/>:<sp/>buf)[0]<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Password<sp/>pushes<sp/>a<sp/>temporary<sp/>font<sp/>with<sp/>only<sp/>a<sp/>fallback<sp/>glyph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_password<sp/>&amp;&amp;<sp/>!is_displaying_hint)</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_glyph" kindref="compound">ImFontGlyph</ref>*<sp/>glyph<sp/>=<sp/>g.Font-&gt;FindGlyph(</highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>password_font<sp/>=<sp/>&amp;g.InputTextPasswordFont;</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>password_font-&gt;FontSize<sp/>=<sp/>g.Font-&gt;FontSize;</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>password_font-&gt;Scale<sp/>=<sp/>g.Font-&gt;Scale;</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>password_font-&gt;Ascent<sp/>=<sp/>g.Font-&gt;Ascent;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>password_font-&gt;Descent<sp/>=<sp/>g.Font-&gt;Descent;</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>password_font-&gt;ContainerAtlas<sp/>=<sp/>g.Font-&gt;ContainerAtlas;</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>password_font-&gt;FallbackGlyph<sp/>=<sp/>glyph;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>password_font-&gt;FallbackAdvanceX<sp/>=<sp/>glyph-&gt;AdvanceX;</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(password_font-&gt;Glyphs.empty()<sp/>&amp;&amp;<sp/>password_font-&gt;IndexAdvanceX.empty()<sp/>&amp;&amp;<sp/>password_font-&gt;IndexLookup.empty());</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushFont(password_font);</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"></highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>mouse<sp/>inputs<sp/>and<sp/>character<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backup_current_text_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(state<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backup_current_text_length<sp/>=<sp/>state-&gt;CurLenA;</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;Edited<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;BufCapacityA<sp/>=<sp/>buf_size;</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;Flags<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"></highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Although<sp/>we<sp/>are<sp/>active<sp/>we<sp/>don&apos;t<sp/>prevent<sp/>mouse<sp/>from<sp/>hovering<sp/>other<sp/>elements<sp/>unless<sp/>we<sp/>are<sp/>interacting<sp/>right<sp/>now<sp/>with<sp/>the<sp/>widget.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Down<sp/>the<sp/>line<sp/>we<sp/>should<sp/>have<sp/>a<sp/>cleaner<sp/>library-wide<sp/>concept<sp/>of<sp/>Selected<sp/>vs<sp/>Active.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdAllowOverlap<sp/>=<sp/>!io.MouseDown[0];</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.WantTextInputNextFrame<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"></highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Edit<sp/>in<sp/>progress</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mouse_x<sp/>=<sp/>(io.MousePos.x<sp/>-<sp/>frame_bb.Min.x<sp/>-<sp/>style.FramePadding.x)<sp/>+<sp/>state-&gt;ScrollX;</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mouse_y<sp/>=<sp/>(is_multiline<sp/>?<sp/>(io.MousePos.y<sp/>-<sp/>draw_window-&gt;DC.CursorPos.y)<sp/>:<sp/>(g.FontSize<sp/>*<sp/>0.5f));</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"></highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_osx<sp/>=<sp/>io.ConfigMacOSXBehaviors;</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(select_all)</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;SelectAll();</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;SelectedAllMouseLock<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered<sp/>&amp;&amp;<sp/>io.MouseClickedCount[0]<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>!io.KeyShift)</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_textedit_click(state,<sp/>&amp;state-&gt;Stb,<sp/>mouse_x,<sp/>mouse_y);</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multiclick_count<sp/>=<sp/>(io.MouseClickedCount[0]<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((multiclick_count<sp/>%<sp/>2)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Double-click:<sp/>Select<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>always<sp/>use<sp/>the<sp/>&quot;Mac&quot;<sp/>word<sp/>advance<sp/>for<sp/>double-click<sp/>select<sp/>vs<sp/>CTRL+Right<sp/>which<sp/>use<sp/>the<sp/>platform<sp/>dependent<sp/>variant:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>There<sp/>are<sp/>likely<sp/>many<sp/>ways<sp/>to<sp/>improve<sp/>this<sp/>behavior,<sp/>but<sp/>there&apos;s<sp/>no<sp/>&quot;right&quot;<sp/>behavior<sp/>(depends<sp/>on<sp/>use-case,<sp/>software,<sp/>OS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_bol<sp/>=<sp/>(state-&gt;Stb.cursor<sp/>==<sp/>0)<sp/>||<sp/>ImStb::STB_TEXTEDIT_GETCHAR(state,<sp/>state-&gt;Stb.cursor<sp/>-<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(STB_TEXT_HAS_SELECTION(&amp;state-&gt;Stb)<sp/>||<sp/>!is_bol)</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed(STB_TEXTEDIT_K_WORDLEFT);</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//state-&gt;OnKeyPressed(STB_TEXTEDIT_K_WORDRIGHT<sp/>|<sp/>STB_TEXTEDIT_K_SHIFT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!STB_TEXT_HAS_SELECTION(&amp;state-&gt;Stb))</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStb::stb_textedit_prep_selection_at_cursor(&amp;state-&gt;Stb);</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;Stb.cursor<sp/>=<sp/>ImStb::STB_TEXTEDIT_MOVEWORDRIGHT_MAC(state,<sp/>state-&gt;Stb.cursor);</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;Stb.select_end<sp/>=<sp/>state-&gt;Stb.cursor;</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStb::stb_textedit_clamp(state,<sp/>&amp;state-&gt;Stb);</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Triple-click:<sp/>Select<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_eol<sp/>=<sp/>ImStb::STB_TEXTEDIT_GETCHAR(state,<sp/>state-&gt;Stb.cursor)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed(STB_TEXTEDIT_K_LINESTART);</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed(STB_TEXTEDIT_K_LINEEND<sp/>|<sp/>STB_TEXTEDIT_K_SHIFT);</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed(STB_TEXTEDIT_K_RIGHT<sp/>|<sp/>STB_TEXTEDIT_K_SHIFT);</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_eol<sp/>&amp;&amp;<sp/>is_multiline)</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImSwap(state-&gt;Stb.select_start,<sp/>state-&gt;Stb.select_end);</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;Stb.cursor<sp/>=<sp/>state-&gt;Stb.select_end;</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorFollow<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorAnimReset();</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.MouseClicked[0]<sp/>&amp;&amp;<sp/>!state-&gt;SelectedAllMouseLock)</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>unselect<sp/>on<sp/>late<sp/>click<sp/>could<sp/>be<sp/>done<sp/>release?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered)</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_textedit_click(state,<sp/>&amp;state-&gt;Stb,<sp/>mouse_x,<sp/>mouse_y);</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorAnimReset();</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.MouseDown[0]<sp/>&amp;&amp;<sp/>!state-&gt;SelectedAllMouseLock<sp/>&amp;&amp;<sp/>(io.MouseDelta.x<sp/>!=<sp/>0.0f<sp/>||<sp/>io.MouseDelta.y<sp/>!=<sp/>0.0f))</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_textedit_drag(state,<sp/>&amp;state-&gt;Stb,<sp/>mouse_x,<sp/>mouse_y);</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorAnimReset();</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorFollow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;SelectedAllMouseLock<sp/>&amp;&amp;<sp/>!io.MouseDown[0])</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;SelectedAllMouseLock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>ill-defined<sp/>whether<sp/>the<sp/>backend<sp/>needs<sp/>to<sp/>send<sp/>a<sp/>\t<sp/>character<sp/>when<sp/>pressing<sp/>the<sp/>TAB<sp/>keys.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Win32<sp/>and<sp/>GLFW<sp/>naturally<sp/>do<sp/>it<sp/>but<sp/>not<sp/>SDL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignore_char_inputs<sp/>=<sp/>(io.KeyCtrl<sp/>&amp;&amp;<sp/>!io.KeyAlt)<sp/>||<sp/>(is_osx<sp/>&amp;&amp;<sp/>io.KeySuper);</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_AllowTabInput)<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_Tab)<sp/>&amp;&amp;<sp/>!ignore_char_inputs<sp/>&amp;&amp;<sp/>!io.KeyShift<sp/>&amp;&amp;<sp/>!is_readonly)</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!io.InputQueueCharacters.contains(</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>TAB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InputTextFilterCharacter(&amp;c,<sp/>flags,<sp/>callback,<sp/>callback_user_data,<sp/>ImGuiInputSource_Keyboard))</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c);</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>regular<sp/>text<sp/>input<sp/>(before<sp/>we<sp/>check<sp/>for<sp/>Return<sp/>because<sp/>using<sp/>some<sp/>IME<sp/>will<sp/>effectively<sp/>send<sp/>a<sp/>Return?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>ignore<sp/>CTRL<sp/>inputs,<sp/>but<sp/>need<sp/>to<sp/>allow<sp/>ALT+CTRL<sp/>as<sp/>some<sp/>keyboards<sp/>(e.g.<sp/>German)<sp/>use<sp/>AltGR<sp/>(which<sp/>_is_<sp/>Alt+Ctrl)<sp/>to<sp/>input<sp/>certain<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.InputQueueCharacters.Size<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ignore_char_inputs<sp/>&amp;&amp;<sp/>!is_readonly<sp/>&amp;&amp;<sp/>!input_requested_by_nav)</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>io.InputQueueCharacters.Size;<sp/>n++)</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>character<sp/>if<sp/>they<sp/>pass<sp/>filtering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)io.InputQueueCharacters[n];</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>io.KeyShift)</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InputTextFilterCharacter(&amp;c,<sp/>flags,<sp/>callback,<sp/>callback_user_data,<sp/>ImGuiInputSource_Keyboard))</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c);</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"></highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consume<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.InputQueueCharacters.resize(0);</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"></highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>other<sp/>shortcuts/key-presses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cancel_edit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!g.ActiveIdIsJustActivated<sp/>&amp;&amp;<sp/>!clear_active_id)</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(state<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(io.KeyMods<sp/>==<sp/>GetMergedKeyModFlags()<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Mismatching<sp/>io.KeyCtrl/io.KeyShift/io.KeyAlt/io.KeySuper<sp/>vs<sp/>io.KeyMods&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>We<sp/>rarely<sp/>do<sp/>this<sp/>check,<sp/>but<sp/>if<sp/>anything<sp/>let&apos;s<sp/>do<sp/>it<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_count_per_page<sp/>=<sp/>ImMax((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((inner_size.y<sp/>-<sp/>style.FramePadding.y)<sp/>/<sp/>g.FontSize),<sp/>1);</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;Stb.row_count_per_page<sp/>=<sp/>row_count_per_page;</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k_mask<sp/>=<sp/>(io.KeyShift<sp/>?<sp/>STB_TEXTEDIT_K_SHIFT<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_osx<sp/>=<sp/>io.ConfigMacOSXBehaviors;</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_osx_shift_shortcut<sp/>=<sp/>is_osx<sp/>&amp;&amp;<sp/>(io.KeyMods<sp/>==<sp/>(ImGuiKeyModFlags_Super<sp/>|<sp/>ImGuiKeyModFlags_Shift));</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_wordmove_key_down<sp/>=<sp/>is_osx<sp/>?<sp/>io.KeyAlt<sp/>:<sp/>io.KeyCtrl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OS<sp/>X<sp/>style:<sp/>Text<sp/>editing<sp/>cursor<sp/>movement<sp/>using<sp/>Alt<sp/>instead<sp/>of<sp/>Ctrl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_startend_key_down<sp/>=<sp/>is_osx<sp/>&amp;&amp;<sp/>io.KeySuper<sp/>&amp;&amp;<sp/>!io.KeyCtrl<sp/>&amp;&amp;<sp/>!io.KeyAlt;<sp/><sp/></highlight><highlight class="comment">//<sp/>OS<sp/>X<sp/>style:<sp/>Line/Text<sp/>Start<sp/>and<sp/>End<sp/>using<sp/>Cmd+Arrows<sp/>instead<sp/>of<sp/>Home/End</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_ctrl_key_only<sp/>=<sp/>(io.KeyMods<sp/>==<sp/>ImGuiKeyModFlags_Ctrl);</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_shift_key_only<sp/>=<sp/>(io.KeyMods<sp/>==<sp/>ImGuiKeyModFlags_Shift);</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_shortcut_key<sp/>=<sp/>g.IO.ConfigMacOSXBehaviors<sp/>?<sp/>(io.KeyMods<sp/>==<sp/>ImGuiKeyModFlags_Super)<sp/>:<sp/>(io.KeyMods<sp/>==<sp/>ImGuiKeyModFlags_Ctrl);</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"></highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_cut<sp/><sp/><sp/>=<sp/>((is_shortcut_key<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_X))<sp/>||<sp/>(is_shift_key_only<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_Delete)))<sp/>&amp;&amp;<sp/>!is_readonly<sp/>&amp;&amp;<sp/>!is_password<sp/>&amp;&amp;<sp/>(!is_multiline<sp/>||<sp/>state-&gt;HasSelection());</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_copy<sp/><sp/>=<sp/>((is_shortcut_key<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_C))<sp/>||<sp/>(is_ctrl_key_only<sp/><sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_Insert)))<sp/>&amp;&amp;<sp/>!is_password<sp/>&amp;&amp;<sp/>(!is_multiline<sp/>||<sp/>state-&gt;HasSelection());</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_paste<sp/>=<sp/>((is_shortcut_key<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_V))<sp/>||<sp/>(is_shift_key_only<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_Insert)))<sp/>&amp;&amp;<sp/>!is_readonly;</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_undo<sp/><sp/>=<sp/>((is_shortcut_key<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_Z))<sp/>&amp;&amp;<sp/>!is_readonly<sp/>&amp;&amp;<sp/>is_undoable);</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_redo<sp/><sp/>=<sp/>((is_shortcut_key<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_Y))<sp/>||<sp/>(is_osx_shift_shortcut<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_Z)))<sp/>&amp;&amp;<sp/>!is_readonly<sp/>&amp;&amp;<sp/>is_undoable;</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"></highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>allow<sp/>validate/cancel<sp/>with<sp/>Nav<sp/>source<sp/>(gamepad)<sp/>to<sp/>makes<sp/>it<sp/>easier<sp/>to<sp/>undo<sp/>an<sp/>accidental<sp/>NavInput<sp/>press<sp/>with<sp/>no<sp/>keyboard<sp/>wired,<sp/>but<sp/>otherwise<sp/>it<sp/>isn&apos;t<sp/>very<sp/>useful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_validate_enter<sp/>=<sp/>IsKeyPressed(ImGuiKey_Enter)<sp/>||<sp/>IsKeyPressed(ImGuiKey_KeypadEnter);</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_validate_nav<sp/>=<sp/>(IsNavInputTest(ImGuiNavInput_Activate,<sp/>ImGuiInputReadMode_Pressed)<sp/>&amp;&amp;<sp/>!IsKeyPressed(ImGuiKey_Space))<sp/>||<sp/>IsNavInputTest(ImGuiNavInput_Input,<sp/>ImGuiInputReadMode_Pressed);</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_cancel<sp/><sp/><sp/>=<sp/>IsKeyPressed(ImGuiKey_Escape)<sp/>||<sp/>IsNavInputTest(ImGuiNavInput_Cancel,<sp/>ImGuiInputReadMode_Pressed);</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsKeyPressed(ImGuiKey_LeftArrow))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>state-&gt;OnKeyPressed((is_startend_key_down<sp/>?<sp/>STB_TEXTEDIT_K_LINESTART<sp/>:<sp/>is_wordmove_key_down<sp/>?<sp/>STB_TEXTEDIT_K_WORDLEFT<sp/>:<sp/>STB_TEXTEDIT_K_LEFT)<sp/>|<sp/>k_mask);<sp/>}</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsKeyPressed(ImGuiKey_RightArrow))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>state-&gt;OnKeyPressed((is_startend_key_down<sp/>?<sp/>STB_TEXTEDIT_K_LINEEND<sp/>:<sp/>is_wordmove_key_down<sp/>?<sp/>STB_TEXTEDIT_K_WORDRIGHT<sp/>:<sp/>STB_TEXTEDIT_K_RIGHT)<sp/>|<sp/>k_mask);<sp/>}</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsKeyPressed(ImGuiKey_UpArrow)<sp/>&amp;&amp;<sp/>is_multiline)<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.KeyCtrl)<sp/>SetScrollY(draw_window,<sp/>ImMax(draw_window-&gt;Scroll.y<sp/>-<sp/>g.FontSize,<sp/>0.0f));<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>state-&gt;OnKeyPressed((is_startend_key_down<sp/>?<sp/>STB_TEXTEDIT_K_TEXTSTART<sp/>:<sp/>STB_TEXTEDIT_K_UP)<sp/>|<sp/>k_mask);<sp/>}</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsKeyPressed(ImGuiKey_DownArrow)<sp/>&amp;&amp;<sp/>is_multiline)<sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.KeyCtrl)<sp/>SetScrollY(draw_window,<sp/>ImMin(draw_window-&gt;Scroll.y<sp/>+<sp/>g.FontSize,<sp/>GetScrollMaxY()));<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>state-&gt;OnKeyPressed((is_startend_key_down<sp/>?<sp/>STB_TEXTEDIT_K_TEXTEND<sp/>:<sp/>STB_TEXTEDIT_K_DOWN)<sp/>|<sp/>k_mask);<sp/>}</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsKeyPressed(ImGuiKey_PageUp)<sp/>&amp;&amp;<sp/>is_multiline)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>state-&gt;OnKeyPressed(STB_TEXTEDIT_K_PGUP<sp/>|<sp/>k_mask);<sp/>scroll_y<sp/>-=<sp/>row_count_per_page<sp/>*<sp/>g.FontSize;<sp/>}</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsKeyPressed(ImGuiKey_PageDown)<sp/>&amp;&amp;<sp/>is_multiline)<sp/><sp/><sp/><sp/>{<sp/>state-&gt;OnKeyPressed(STB_TEXTEDIT_K_PGDOWN<sp/>|<sp/>k_mask);<sp/>scroll_y<sp/>+=<sp/>row_count_per_page<sp/>*<sp/>g.FontSize;<sp/>}</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsKeyPressed(ImGuiKey_Home))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>state-&gt;OnKeyPressed(io.KeyCtrl<sp/>?<sp/>STB_TEXTEDIT_K_TEXTSTART<sp/>|<sp/>k_mask<sp/>:<sp/>STB_TEXTEDIT_K_LINESTART<sp/>|<sp/>k_mask);<sp/>}</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsKeyPressed(ImGuiKey_End))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>state-&gt;OnKeyPressed(io.KeyCtrl<sp/>?<sp/>STB_TEXTEDIT_K_TEXTEND<sp/>|<sp/>k_mask<sp/>:<sp/>STB_TEXTEDIT_K_LINEEND<sp/>|<sp/>k_mask);<sp/>}</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsKeyPressed(ImGuiKey_Delete)<sp/>&amp;&amp;<sp/>!is_readonly<sp/>&amp;&amp;<sp/>!is_cut)<sp/>{<sp/>state-&gt;OnKeyPressed(STB_TEXTEDIT_K_DELETE<sp/>|<sp/>k_mask);<sp/>}</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsKeyPressed(ImGuiKey_Backspace)<sp/>&amp;&amp;<sp/>!is_readonly)</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!state-&gt;HasSelection())</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_wordmove_key_down)</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed(STB_TEXTEDIT_K_WORDLEFT<sp/>|<sp/>STB_TEXTEDIT_K_SHIFT);</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_osx<sp/>&amp;&amp;<sp/>io.KeySuper<sp/>&amp;&amp;<sp/>!io.KeyAlt<sp/>&amp;&amp;<sp/>!io.KeyCtrl)</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed(STB_TEXTEDIT_K_LINESTART<sp/>|<sp/>STB_TEXTEDIT_K_SHIFT);</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed(STB_TEXTEDIT_K_BACKSPACE<sp/>|<sp/>k_mask);</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_validate_enter)</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ctrl_enter_for_new_line<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CtrlEnterForNewLine)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_multiline<sp/>||<sp/>(ctrl_enter_for_new_line<sp/>&amp;&amp;<sp/>!io.KeyCtrl)<sp/>||<sp/>(!ctrl_enter_for_new_line<sp/>&amp;&amp;<sp/>io.KeyCtrl))</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enter_pressed<sp/>=<sp/>clear_active_id<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_readonly)</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>new<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InputTextFilterCharacter(&amp;c,<sp/>flags,<sp/>callback,<sp/>callback_user_data,<sp/>ImGuiInputSource_Keyboard))</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c);</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_validate_nav)</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(!is_validate_enter);</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enter_pressed<sp/>=<sp/>clear_active_id<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_cancel)</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear_active_id<sp/>=<sp/>cancel_edit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_undo<sp/>||<sp/>is_redo)</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;OnKeyPressed(is_undo<sp/>?<sp/>STB_TEXTEDIT_K_UNDO<sp/>:<sp/>STB_TEXTEDIT_K_REDO);</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;ClearSelection();</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_shortcut_key<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_A))</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;SelectAll();</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorFollow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_cut<sp/>||<sp/>is_copy)</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cut,<sp/>Copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.SetClipboardTextFn)</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>state-&gt;HasSelection()<sp/>?<sp/>ImMin(state-&gt;Stb.select_start,<sp/>state-&gt;Stb.select_end)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ie<sp/>=<sp/>state-&gt;HasSelection()<sp/>?<sp/>ImMax(state-&gt;Stb.select_start,<sp/>state-&gt;Stb.select_end)<sp/>:<sp/>state-&gt;CurLenW;</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipboard_data_len<sp/>=<sp/>ImTextCountUtf8BytesFromStr(state-&gt;TextW.Data<sp/>+<sp/>ib,<sp/>state-&gt;TextW.Data<sp/>+<sp/>ie)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>clipboard_data<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)IM_ALLOC(clipboard_data_len<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTextStrToUtf8(clipboard_data,<sp/>clipboard_data_len,<sp/>state-&gt;TextW.Data<sp/>+<sp/>ib,<sp/>state-&gt;TextW.Data<sp/>+<sp/>ie);</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetClipboardText(clipboard_data);</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemFree(clipboard_data);</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_cut)</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!state-&gt;HasSelection())</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;SelectAll();</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorFollow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_textedit_cut(state,<sp/>&amp;state-&gt;Stb);</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_paste)</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>clipboard<sp/>=<sp/>GetClipboardText())</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter<sp/>pasted<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipboard_len<sp/>=<sp/>(int)strlen(clipboard);</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImWchar*<sp/>clipboard_filtered<sp/>=<sp/>(ImWchar*)IM_ALLOC((clipboard_len<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImWchar));</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipboard_filtered_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s<sp/>=<sp/>clipboard;<sp/>*s;<sp/>)</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>ImTextCharFromUtf8(&amp;c,<sp/>s,<sp/>NULL);</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!InputTextFilterCharacter(&amp;c,<sp/>flags,<sp/>callback,<sp/>callback_user_data,<sp/>ImGuiInputSource_Clipboard))</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipboard_filtered[clipboard_filtered_len++]<sp/>=<sp/>(ImWchar)c;</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipboard_filtered[clipboard_filtered_len]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipboard_filtered_len<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>If<sp/>everything<sp/>was<sp/>filtered,<sp/>ignore<sp/>the<sp/>pasting<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_textedit_paste(state,<sp/>&amp;state-&gt;Stb,<sp/>clipboard_filtered,<sp/>clipboard_filtered_len);</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorFollow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemFree(clipboard_filtered);</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"></highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>render<sp/>selection<sp/>flag<sp/>after<sp/>events<sp/>have<sp/>been<sp/>handled,<sp/>so<sp/>selection<sp/>highlight<sp/>can<sp/>be<sp/>displayed<sp/>during<sp/>the<sp/>same<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render_selection<sp/>|=<sp/>state-&gt;HasSelection()<sp/>&amp;&amp;<sp/>(RENDER_SELECTION_WHEN_INACTIVE<sp/>||<sp/>render_cursor);</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"></highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>callbacks<sp/>and<sp/>apply<sp/>result<sp/>back<sp/>to<sp/>user&apos;s<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>apply_new_text<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>apply_new_text_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(state<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cancel_edit)</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>initial<sp/>value.<sp/>Only<sp/>return<sp/>true<sp/>if<sp/>restoring<sp/>to<sp/>the<sp/>initial<sp/>value<sp/>changes<sp/>the<sp/>current<sp/>buffer<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_readonly<sp/>&amp;&amp;<sp/>strcmp(buf,<sp/>state-&gt;InitialTextA.Data)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>records<sp/>into<sp/>the<sp/>undo<sp/>stack<sp/>so<sp/>we<sp/>can<sp/>CTRL+Z<sp/>the<sp/>revert<sp/>operation<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apply_new_text<sp/>=<sp/>state-&gt;InitialTextA.Data;</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apply_new_text_length<sp/>=<sp/>state-&gt;InitialTextA.Size<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImWchar&gt;</ref><sp/>w_text;</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apply_new_text_length<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_text.resize(ImTextCountCharsFromUtf8(apply_new_text,<sp/>apply_new_text<sp/>+<sp/>apply_new_text_length)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTextStrFromUtf8(w_text.Data,<sp/>w_text.Size,<sp/>apply_new_text,<sp/>apply_new_text<sp/>+<sp/>apply_new_text_length);</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_textedit_replace(state,<sp/>&amp;state-&gt;Stb,<sp/>w_text.Data,<sp/>(apply_new_text_length<sp/>&gt;<sp/>0)<sp/>?<sp/>(w_text.Size<sp/>-<sp/>1)<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"></highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>using<sp/>&apos;ImGuiInputTextFlags_EnterReturnsTrue&apos;<sp/>as<sp/>a<sp/>special<sp/>case<sp/>we<sp/>reapply<sp/>the<sp/>live<sp/>buffer<sp/>back<sp/>to<sp/>the<sp/>input<sp/>buffer<sp/>before<sp/>clearing<sp/>ActiveId,<sp/>even<sp/>though<sp/>strictly<sp/>speaking<sp/>it<sp/>wasn&apos;t<sp/>modified<sp/>on<sp/>this<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>didn&apos;t<sp/>do<sp/>that,<sp/>code<sp/>like<sp/>InputInt()<sp/>with<sp/>ImGuiInputTextFlags_EnterReturnsTrue<sp/>would<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>also<sp/>allows<sp/>the<sp/>user<sp/>to<sp/>use<sp/>InputText()<sp/>with<sp/>ImGuiInputTextFlags_EnterReturnsTrue<sp/>without<sp/>maintaining<sp/>any<sp/>user-side<sp/>storage<sp/>(please<sp/>note<sp/>that<sp/>if<sp/>you<sp/>use<sp/>this<sp/>property<sp/>along<sp/>ImGuiInputTextFlags_CallbackResize<sp/>you<sp/>can<sp/>end<sp/>up<sp/>with<sp/>your<sp/>temporary<sp/>string<sp/>object<sp/>unnecessarily<sp/>allocating<sp/>once<sp/>a<sp/>frame,<sp/>either<sp/>store<sp/>your<sp/>string<sp/>data,<sp/>either<sp/>if<sp/>you<sp/>don&apos;t<sp/>then<sp/>don&apos;t<sp/>use<sp/>ImGuiInputTextFlags_CallbackResize).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>apply_edit_back_to_user_buffer<sp/>=<sp/>!cancel_edit<sp/>||<sp/>(enter_pressed<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_EnterReturnsTrue)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apply_edit_back_to_user_buffer)</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>new<sp/>value<sp/>immediately<sp/>-<sp/>copy<sp/>modified<sp/>buffer<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>as<sp/>soon<sp/>as<sp/>the<sp/>input<sp/>box<sp/>is<sp/>active,<sp/>the<sp/>in-widget<sp/>value<sp/>gets<sp/>priority<sp/>over<sp/>any<sp/>underlying<sp/>modification<sp/>of<sp/>the<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>actually<sp/>always<sp/>render<sp/>&apos;buf&apos;<sp/>when<sp/>calling<sp/>DrawList-&gt;AddText,<sp/>making<sp/>the<sp/>comment<sp/>above<sp/>incorrect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>CPU<sp/>waste<sp/>to<sp/>do<sp/>this<sp/>every<sp/>time<sp/>the<sp/>widget<sp/>is<sp/>active,<sp/>should<sp/>mark<sp/>dirty<sp/>state<sp/>from<sp/>the<sp/>stb_textedit<sp/>callbacks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_readonly)</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;TextAIsValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;TextA.resize(state-&gt;TextW.Size<sp/>*<sp/>4<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTextStrToUtf8(state-&gt;TextA.Data,<sp/>state-&gt;TextA.Size,<sp/>state-&gt;TextW.Data,<sp/>NULL);</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"></highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>(ImGuiInputTextFlags_CallbackCompletion<sp/>|<sp/>ImGuiInputTextFlags_CallbackHistory<sp/>|<sp/>ImGuiInputTextFlags_CallbackEdit<sp/>|<sp/>ImGuiInputTextFlags_CallbackAlways))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(callback<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>reason<sp/>we<sp/>specify<sp/>the<sp/>usage<sp/>semantic<sp/>(Completion/History)<sp/>is<sp/>that<sp/>Completion<sp/>needs<sp/>to<sp/>disable<sp/>keyboard<sp/>TABBING<sp/>at<sp/>the<sp/>moment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiInputTextFlags<sp/>event_flag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiKey<sp/>event_key<sp/>=<sp/>ImGuiKey_None;</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackCompletion)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_Tab))</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_flag<sp/>=<sp/>ImGuiInputTextFlags_CallbackCompletion;</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_key<sp/>=<sp/>ImGuiKey_Tab;</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackHistory)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_UpArrow))</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_flag<sp/>=<sp/>ImGuiInputTextFlags_CallbackHistory;</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_key<sp/>=<sp/>ImGuiKey_UpArrow;</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackHistory)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>IsKeyPressed(ImGuiKey_DownArrow))</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_flag<sp/>=<sp/>ImGuiInputTextFlags_CallbackHistory;</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_key<sp/>=<sp/>ImGuiKey_DownArrow;</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackEdit)<sp/>&amp;&amp;<sp/>state-&gt;Edited)</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_flag<sp/>=<sp/>ImGuiInputTextFlags_CallbackEdit;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_CallbackAlways)</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_flag<sp/>=<sp/>ImGuiInputTextFlags_CallbackAlways;</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"></highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_flag)</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_text_callback_data" kindref="compound">ImGuiInputTextCallbackData</ref><sp/>callback_data;</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;callback_data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_gui_input_text_callback_data" kindref="compound">ImGuiInputTextCallbackData</ref>));</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.EventFlag<sp/>=<sp/>event_flag;</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.Flags<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.UserData<sp/>=<sp/>callback_user_data;</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"></highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>callback_buf<sp/>=<sp/>is_readonly<sp/>?<sp/>buf<sp/>:<sp/>state-&gt;TextA.Data;</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.EventKey<sp/>=<sp/>event_key;</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.Buf<sp/>=<sp/>callback_buf;</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.BufTextLen<sp/>=<sp/>state-&gt;CurLenA;</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.BufSize<sp/>=<sp/>state-&gt;BufCapacityA;</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.BufDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"></highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>to<sp/>convert<sp/>from<sp/>wchar-positions<sp/>to<sp/>UTF-8-positions,<sp/>which<sp/>can<sp/>be<sp/>pretty<sp/>slow<sp/>(an<sp/>incentive<sp/>to<sp/>ditch<sp/>the<sp/>ImWchar<sp/>buffer,<sp/>see<sp/>https://github.com/nothings/stb/issues/188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImWchar*<sp/>text<sp/>=<sp/>state-&gt;TextW.Data;</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf8_cursor_pos<sp/>=<sp/>callback_data.CursorPos<sp/>=<sp/>ImTextCountUtf8BytesFromStr(text,<sp/>text<sp/>+<sp/>state-&gt;Stb.cursor);</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf8_selection_start<sp/>=<sp/>callback_data.SelectionStart<sp/>=<sp/>ImTextCountUtf8BytesFromStr(text,<sp/>text<sp/>+<sp/>state-&gt;Stb.select_start);</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf8_selection_end<sp/>=<sp/>callback_data.SelectionEnd<sp/>=<sp/>ImTextCountUtf8BytesFromStr(text,<sp/>text<sp/>+<sp/>state-&gt;Stb.select_end);</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"></highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>user<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback(&amp;callback_data);</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"></highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>back<sp/>what<sp/>user<sp/>may<sp/>have<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_buf<sp/>=<sp/>is_readonly<sp/>?<sp/>buf<sp/>:<sp/>state-&gt;TextA.Data;<sp/></highlight><highlight class="comment">//<sp/>Pointer<sp/>may<sp/>have<sp/>been<sp/>invalidated<sp/>by<sp/>a<sp/>resize<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(callback_data.Buf<sp/>==<sp/>callback_buf);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>to<sp/>modify<sp/>those<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(callback_data.BufSize<sp/>==<sp/>state-&gt;BufCapacityA);</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(callback_data.Flags<sp/>==<sp/>flags);</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>buf_dirty<sp/>=<sp/>callback_data.BufDirty;</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback_data.CursorPos<sp/>!=<sp/>utf8_cursor_pos<sp/>||<sp/>buf_dirty)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>state-&gt;Stb.cursor<sp/>=<sp/>ImTextCountCharsFromUtf8(callback_data.Buf,<sp/>callback_data.Buf<sp/>+<sp/>callback_data.CursorPos);<sp/>state-&gt;CursorFollow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback_data.SelectionStart<sp/>!=<sp/>utf8_selection_start<sp/>||<sp/>buf_dirty)<sp/><sp/>{<sp/>state-&gt;Stb.select_start<sp/>=<sp/>(callback_data.SelectionStart<sp/>==<sp/>callback_data.CursorPos)<sp/>?<sp/>state-&gt;Stb.cursor<sp/>:<sp/>ImTextCountCharsFromUtf8(callback_data.Buf,<sp/>callback_data.Buf<sp/>+<sp/>callback_data.SelectionStart);<sp/>}</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback_data.SelectionEnd<sp/>!=<sp/>utf8_selection_end<sp/>||<sp/>buf_dirty)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>state-&gt;Stb.select_end<sp/>=<sp/>(callback_data.SelectionEnd<sp/>==<sp/>callback_data.SelectionStart)<sp/>?<sp/>state-&gt;Stb.select_start<sp/>:<sp/>ImTextCountCharsFromUtf8(callback_data.Buf,<sp/>callback_data.Buf<sp/>+<sp/>callback_data.SelectionEnd);<sp/>}</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_dirty)</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(callback_data.BufTextLen<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(callback_data.Buf));<sp/></highlight><highlight class="comment">//<sp/>You<sp/>need<sp/>to<sp/>maintain<sp/>BufTextLen<sp/>if<sp/>you<sp/>change<sp/>the<sp/>text!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback_data.BufTextLen<sp/>&gt;<sp/>backup_current_text_length<sp/>&amp;&amp;<sp/>is_resizable)</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;TextW.resize(state-&gt;TextW.Size<sp/>+<sp/>(callback_data.BufTextLen<sp/>-<sp/>backup_current_text_length));</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CurLenW<sp/>=<sp/>ImTextStrFromUtf8(state-&gt;TextW.Data,<sp/>state-&gt;TextW.Size,<sp/>callback_data.Buf,<sp/>NULL);</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CurLenA<sp/>=<sp/>callback_data.BufTextLen;<sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>correct<sp/>length<sp/>and<sp/>valid<sp/>UTF-8<sp/>from<sp/>user,<sp/>saves<sp/>us<sp/>an<sp/>extra<sp/>strlen()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorAnimReset();</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"></highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>copy<sp/>result<sp/>string<sp/>if<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_readonly<sp/>&amp;&amp;<sp/>strcmp(state-&gt;TextA.Data,<sp/>buf)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apply_new_text<sp/>=<sp/>state-&gt;TextA.Data;</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apply_new_text_length<sp/>=<sp/>state-&gt;CurLenA;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"></highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>temporary<sp/>user<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;Flags<sp/>=<sp/>ImGuiInputTextFlags_None;</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"></highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>result<sp/>to<sp/>user<sp/>buffer.<sp/>This<sp/>can<sp/>currently<sp/>only<sp/>happen<sp/>when<sp/>(g.ActiveId<sp/>==<sp/>id)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apply_new_text<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>cannot<sp/>test<sp/>for<sp/>&apos;backup_current_text_length<sp/>!=<sp/>apply_new_text_length&apos;<sp/>here<sp/>because<sp/>we<sp/>have<sp/>no<sp/>guarantee<sp/>that<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>our<sp/>owned<sp/>buffer<sp/>matches<sp/>the<sp/>size<sp/>of<sp/>the<sp/>string<sp/>object<sp/>held<sp/>by<sp/>the<sp/>user,<sp/>and<sp/>by<sp/>design<sp/>we<sp/>allow<sp/>InputText()<sp/>to<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>without<sp/>any<sp/>storage<sp/>on<sp/>user&apos;s<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(apply_new_text_length<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_resizable)</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_input_text_callback_data" kindref="compound">ImGuiInputTextCallbackData</ref><sp/>callback_data;</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.EventFlag<sp/>=<sp/>ImGuiInputTextFlags_CallbackResize;</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.Flags<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.Buf<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.BufTextLen<sp/>=<sp/>apply_new_text_length;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.BufSize<sp/>=<sp/>ImMax(buf_size,<sp/>apply_new_text_length<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_data.UserData<sp/>=<sp/>callback_user_data;</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback(&amp;callback_data);</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>callback_data.Buf;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_size<sp/>=<sp/>callback_data.BufSize;</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apply_new_text_length<sp/>=<sp/>ImMin(callback_data.BufTextLen,<sp/>buf_size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(apply_new_text_length<sp/>&lt;=<sp/>buf_size);</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//IMGUI_DEBUG_LOG(&quot;InputText(\&quot;%s\&quot;):<sp/>apply_new_text<sp/>length<sp/>%d\n&quot;,<sp/>label,<sp/>apply_new_text_length);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4585"><highlight class="normal"></highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>underlying<sp/>buffer<sp/>resize<sp/>was<sp/>denied<sp/>or<sp/>not<sp/>carried<sp/>to<sp/>the<sp/>next<sp/>frame,<sp/>apply_new_text_length+1<sp/>may<sp/>be<sp/>&gt;=<sp/>buf_size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStrncpy(buf,<sp/>apply_new_text,<sp/>ImMin(apply_new_text_length<sp/>+<sp/>1,<sp/>buf_size));</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"></highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>active<sp/>ID<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>function<sp/>(so<sp/>e.g.<sp/>pressing<sp/>Return<sp/>still<sp/>does<sp/>a<sp/>final<sp/>application<sp/>of<sp/>the<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clear_active_id<sp/>&amp;&amp;<sp/>g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearActiveID();</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"></highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_multiline)</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderNavHighlight(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderFrame(frame_bb.Min,<sp/>frame_bb.Max,<sp/>GetColorU32(ImGuiCol_FrameBg),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"></highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>clip_rect(frame_bb.Min.x,<sp/>frame_bb.Min.y,<sp/>frame_bb.Min.x<sp/>+<sp/>inner_size.x,<sp/>frame_bb.Min.y<sp/>+<sp/>inner_size.y);<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>using<sp/>frame_bb.Max<sp/>because<sp/>we<sp/>have<sp/>adjusted<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>draw_pos<sp/>=<sp/>is_multiline<sp/>?<sp/>draw_window-&gt;DC.CursorPos<sp/>:<sp/>frame_bb.Min<sp/>+<sp/>style.FramePadding;</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_size(0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"></highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>upper<sp/>limit<sp/>of<sp/>single-line<sp/>InputTextEx()<sp/>at<sp/>2<sp/>million<sp/>characters<sp/>strings.<sp/>The<sp/>current<sp/>pathological<sp/>worst<sp/>case<sp/>is<sp/>a<sp/>long<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>without<sp/>any<sp/>carriage<sp/>return,<sp/>which<sp/>would<sp/>makes<sp/>ImFont::RenderText()<sp/>reserve<sp/>too<sp/>many<sp/>vertices<sp/>and<sp/>probably<sp/>crash.<sp/>Avoid<sp/>it<sp/>altogether.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>only<sp/>use<sp/>this<sp/>limit<sp/>on<sp/>single-line<sp/>InputText(),<sp/>so<sp/>a<sp/>pathologically<sp/>large<sp/>line<sp/>on<sp/>a<sp/>InputTextMultiline()<sp/>would<sp/>still<sp/>crash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_display_max_length<sp/>=<sp/>2<sp/>*<sp/>1024<sp/>*<sp/>1024;</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf_display<sp/>=<sp/>buf_display_from_state<sp/>?<sp/>state-&gt;TextA.Data<sp/>:<sp/>buf;<sp/></highlight><highlight class="comment">//-V595</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf_display_end<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>specialized<sp/>paths<sp/>below<sp/>for<sp/>setting<sp/>the<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_displaying_hint)</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_display<sp/>=<sp/>hint;</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_display_end<sp/>=<sp/>hint<sp/>+<sp/>strlen(hint);</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"></highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>text.<sp/>We<sp/>currently<sp/>only<sp/>render<sp/>selection<sp/>when<sp/>the<sp/>widget<sp/>is<sp/>active<sp/>or<sp/>while<sp/>scrolling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>could<sp/>remove<sp/>the<sp/>&apos;&amp;&amp;<sp/>render_cursor&apos;<sp/>to<sp/>keep<sp/>rendering<sp/>selection<sp/>when<sp/>inactive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(render_cursor<sp/>||<sp/>render_selection)</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(state<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_displaying_hint)</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_display_end<sp/>=<sp/>buf_display<sp/>+<sp/>state-&gt;CurLenA;</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"></highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>text<sp/>(with<sp/>cursor<sp/>and<sp/>selection)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>going<sp/>to<sp/>be<sp/>messy.<sp/>We<sp/>need<sp/>to:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Display<sp/>the<sp/>text<sp/>(this<sp/>alone<sp/>can<sp/>be<sp/>more<sp/>easily<sp/>clipped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Handle<sp/>scrolling,<sp/>highlight<sp/>selection,<sp/>display<sp/>cursor<sp/>(those<sp/>all<sp/>requires<sp/>some<sp/>form<sp/>of<sp/>1d-&gt;2d<sp/>cursor<sp/>position<sp/>calculation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Measure<sp/>text<sp/>height<sp/>(for<sp/>scrollbar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>attempting<sp/>to<sp/>do<sp/>most<sp/>of<sp/>that<sp/>in<sp/>**one<sp/>main<sp/>pass**<sp/>to<sp/>minimize<sp/>the<sp/>computation<sp/>cost<sp/>(non-negligible<sp/>for<sp/>large<sp/>amount<sp/>of<sp/>text)<sp/>+<sp/>2nd<sp/>pass<sp/>for<sp/>selection<sp/>rendering<sp/>(we<sp/>could<sp/>merge<sp/>them<sp/>by<sp/>an<sp/>extra<sp/>refactoring<sp/>effort)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>should<sp/>occur<sp/>on<sp/>buf_display<sp/>but<sp/>we&apos;d<sp/>need<sp/>to<sp/>maintain<sp/>cursor/select_start/select_end<sp/>for<sp/>UTF-8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>text_begin<sp/>=<sp/>state-&gt;TextW.Data;</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>cursor_offset,<sp/>select_start_offset;</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"></highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>lines<sp/>numbers<sp/>straddling<sp/>&apos;cursor&apos;<sp/>(slot<sp/>0)<sp/>and<sp/>&apos;select_start&apos;<sp/>(slot<sp/>1)<sp/>positions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>searches_input_ptr[2]<sp/>=<sp/>{<sp/>NULL,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>searches_result_line_no[2]<sp/>=<sp/>{<sp/>-1000,<sp/>-1000<sp/>};</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>searches_remaining<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(render_cursor)</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searches_input_ptr[0]<sp/>=<sp/>text_begin<sp/>+<sp/>state-&gt;Stb.cursor;</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searches_result_line_no[0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searches_remaining++;</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(render_selection)</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searches_input_ptr[1]<sp/>=<sp/>text_begin<sp/>+<sp/>ImMin(state-&gt;Stb.select_start,<sp/>state-&gt;Stb.select_end);</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searches_result_line_no[1]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searches_remaining++;</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"></highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>all<sp/>lines<sp/>to<sp/>find<sp/>our<sp/>line<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>multi-line<sp/>mode,<sp/>we<sp/>never<sp/>exit<sp/>the<sp/>loop<sp/>until<sp/>all<sp/>lines<sp/>are<sp/>counted,<sp/>so<sp/>add<sp/>one<sp/>extra<sp/>to<sp/>the<sp/>searches_remaining<sp/>counter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searches_remaining<sp/>+=<sp/>is_multiline<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(const<sp/>ImWchar*<sp/>s<sp/>=<sp/>text_begin;<sp/>(s<sp/>=<sp/>(const<sp/>ImWchar*)wcschr((const<sp/>wchar_t*)s,<sp/>(wchar_t)&apos;\n&apos;))<sp/>!=<sp/>NULL;<sp/>s++)<sp/><sp/>//<sp/>FIXME-OPT:<sp/>Could<sp/>use<sp/>this<sp/>when<sp/>wchar_t<sp/>are<sp/>16-bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>s<sp/>=<sp/>text_begin;<sp/>*s<sp/>!=<sp/>0;<sp/>s++)</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_count++;</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(searches_result_line_no[0]<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>s<sp/>&gt;=<sp/>searches_input_ptr[0])<sp/>{<sp/>searches_result_line_no[0]<sp/>=<sp/>line_count;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--searches_remaining<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(searches_result_line_no[1]<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>s<sp/>&gt;=<sp/>searches_input_ptr[1])<sp/>{<sp/>searches_result_line_no[1]<sp/>=<sp/>line_count;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--searches_remaining<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_count++;</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(searches_result_line_no[0]<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searches_result_line_no[0]<sp/>=<sp/>line_count;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(searches_result_line_no[1]<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searches_result_line_no[1]<sp/>=<sp/>line_count;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"></highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>2d<sp/>position<sp/>by<sp/>finding<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>line<sp/>and<sp/>measuring<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor_offset.x<sp/>=<sp/>InputTextCalcTextSizeW(ImStrbolW(searches_input_ptr[0],<sp/>text_begin),<sp/>searches_input_ptr[0]).x;</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor_offset.y<sp/>=<sp/>searches_result_line_no[0]<sp/>*<sp/>g.FontSize;</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(searches_result_line_no[1]<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>select_start_offset.x<sp/>=<sp/>InputTextCalcTextSizeW(ImStrbolW(searches_input_ptr[1],<sp/>text_begin),<sp/>searches_input_ptr[1]).x;</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>select_start_offset.y<sp/>=<sp/>searches_result_line_no[1]<sp/>*<sp/>g.FontSize;</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"></highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>text<sp/>height<sp/>(note<sp/>that<sp/>we<sp/>haven&apos;t<sp/>calculated<sp/>text<sp/>width<sp/>at<sp/>all,<sp/>see<sp/>GitHub<sp/>issues<sp/>#383,<sp/>#1224)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_multiline)</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner_size.x,<sp/>line_count<sp/>*<sp/>g.FontSize);</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scroll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(render_cursor<sp/>&amp;&amp;<sp/>state-&gt;CursorFollow)</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>scroll<sp/>in<sp/>chunks<sp/>of<sp/>quarter<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_NoHorizontalScroll))</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scroll_increment_x<sp/>=<sp/>inner_size.x<sp/>*<sp/>0.25f;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>visible_width<sp/>=<sp/>inner_size.x<sp/>-<sp/>style.FramePadding.x;</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor_offset.x<sp/>&lt;<sp/>state-&gt;ScrollX)</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;ScrollX<sp/>=<sp/>IM_FLOOR(ImMax(0.0f,<sp/>cursor_offset.x<sp/>-<sp/>scroll_increment_x));</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor_offset.x<sp/>-<sp/>visible_width<sp/>&gt;=<sp/>state-&gt;ScrollX)</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;ScrollX<sp/>=<sp/>IM_FLOOR(cursor_offset.x<sp/>-<sp/>visible_width<sp/>+<sp/>scroll_increment_x);</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;ScrollX<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"></highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>scroll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_multiline)</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>if<sp/>cursor<sp/>is<sp/>vertically<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor_offset.y<sp/>-<sp/>g.FontSize<sp/>&lt;<sp/>scroll_y)</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroll_y<sp/>=<sp/>ImMax(0.0f,<sp/>cursor_offset.y<sp/>-<sp/>g.FontSize);</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor_offset.y<sp/>-<sp/>(inner_size.y<sp/>-<sp/>style.FramePadding.y<sp/>*<sp/>2.0f)<sp/>&gt;=<sp/>scroll_y)</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroll_y<sp/>=<sp/>cursor_offset.y<sp/>-<sp/>inner_size.y<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f;</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scroll_max_y<sp/>=<sp/>ImMax((text_size.y<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f)<sp/>-<sp/>inner_size.y,<sp/>0.0f);</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroll_y<sp/>=<sp/>ImClamp(scroll_y,<sp/>0.0f,<sp/>scroll_max_y);</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_pos.y<sp/>+=<sp/>(draw_window-&gt;Scroll.y<sp/>-<sp/>scroll_y);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Manipulate<sp/>cursor<sp/>pos<sp/>immediately<sp/>avoid<sp/>a<sp/>frame<sp/>of<sp/>lag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_window-&gt;Scroll.y<sp/>=<sp/>scroll_y;</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"></highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorFollow<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"></highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>draw_scroll<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(state-&gt;ScrollX,<sp/>0.0f);</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(render_selection)</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>text_selected_begin<sp/>=<sp/>text_begin<sp/>+<sp/>ImMin(state-&gt;Stb.select_start,<sp/>state-&gt;Stb.select_end);</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>text_selected_end<sp/>=<sp/>text_begin<sp/>+<sp/>ImMax(state-&gt;Stb.select_start,<sp/>state-&gt;Stb.select_end);</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"></highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImU32<sp/>bg_color<sp/>=<sp/>GetColorU32(ImGuiCol_TextSelectedBg,<sp/>render_cursor<sp/>?<sp/>1.0f<sp/>:<sp/>0.6f);<sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>current<sp/>code<sp/>flow<sp/>mandate<sp/>that<sp/>render_cursor<sp/>is<sp/>always<sp/>true<sp/>here,<sp/>we<sp/>are<sp/>leaving<sp/>the<sp/>transparent<sp/>one<sp/>for<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bg_offy_up<sp/>=<sp/>is_multiline<sp/>?<sp/>0.0f<sp/>:<sp/>-1.0f;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>those<sp/>offsets<sp/>should<sp/>be<sp/>part<sp/>of<sp/>the<sp/>style?<sp/>they<sp/>don&apos;t<sp/>play<sp/>so<sp/>well<sp/>with<sp/>multi-line<sp/>selection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bg_offy_dn<sp/>=<sp/>is_multiline<sp/>?<sp/>0.0f<sp/>:<sp/>2.0f;</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>rect_pos<sp/>=<sp/>draw_pos<sp/>+<sp/>select_start_offset<sp/>-<sp/>draw_scroll;</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImWchar*<sp/>p<sp/>=<sp/>text_selected_begin;<sp/>p<sp/>&lt;<sp/>text_selected_end;<sp/>)</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect_pos.y<sp/>&gt;<sp/>clip_rect.w<sp/>+<sp/>g.FontSize)</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect_pos.y<sp/>&lt;<sp/>clip_rect.y)</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//p<sp/>=<sp/>(const<sp/>ImWchar*)wmemchr((const<sp/>wchar_t*)p,<sp/>&apos;\n&apos;,<sp/>text_selected_end<sp/>-<sp/>p);<sp/><sp/>//<sp/>FIXME-OPT:<sp/>Could<sp/>use<sp/>this<sp/>when<sp/>wchar_t<sp/>are<sp/>16-bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//p<sp/>=<sp/>p<sp/>?<sp/>p<sp/>+<sp/>1<sp/>:<sp/>text_selected_end;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p<sp/>&lt;<sp/>text_selected_end)</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p++<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>rect_size<sp/>=<sp/>InputTextCalcTextSizeW(p,<sp/>text_selected_end,<sp/>&amp;p,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect_size.x<sp/>&lt;=<sp/>0.0f)<sp/>rect_size.x<sp/>=<sp/>IM_FLOOR(g.Font-&gt;GetCharAdvance((ImWchar)</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>*<sp/>0.50f);<sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>can<sp/>see<sp/>selected<sp/>empty<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>rect(rect_pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>bg_offy_up<sp/>-<sp/>g.FontSize),<sp/>rect_pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(rect_size.x,<sp/>bg_offy_dn));</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.ClipWith(clip_rect);</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.Overlaps(clip_rect))</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_window-&gt;DrawList-&gt;AddRectFilled(rect.Min,<sp/>rect.Max,<sp/>bg_color);</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect_pos.x<sp/>=<sp/>draw_pos.x<sp/>-<sp/>draw_scroll.x;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect_pos.y<sp/>+=<sp/>g.FontSize;</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"></highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>test<sp/>for<sp/>&apos;buf_display_max_length&apos;<sp/>as<sp/>a<sp/>way<sp/>to<sp/>avoid<sp/>some<sp/>pathological<sp/>cases<sp/>(e.g.<sp/>single-line<sp/>1<sp/>MB<sp/>string)<sp/>which<sp/>would<sp/>make<sp/>ImDrawList<sp/>crash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_multiline<sp/>||<sp/>(buf_display_end<sp/>-<sp/>buf_display)<sp/>&lt;<sp/>buf_display_max_length)</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImU32<sp/>col<sp/>=<sp/>GetColorU32(is_displaying_hint<sp/>?<sp/>ImGuiCol_TextDisabled<sp/>:<sp/>ImGuiCol_Text);</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_window-&gt;DrawList-&gt;AddText(g.Font,<sp/>g.FontSize,<sp/>draw_pos<sp/>-<sp/>draw_scroll,<sp/>col,<sp/>buf_display,<sp/>buf_display_end,<sp/>0.0f,<sp/>is_multiline<sp/>?<sp/>NULL<sp/>:<sp/>&amp;clip_rect);</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"></highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>blinking<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(render_cursor)</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;CursorAnim<sp/>+=<sp/>io.DeltaTime;</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cursor_is_visible<sp/>=<sp/>(!g.IO.ConfigInputTextCursorBlink)<sp/>||<sp/>(state-&gt;CursorAnim<sp/>&lt;=<sp/>0.0f)<sp/>||<sp/>ImFmod(state-&gt;CursorAnim,<sp/>1.20f)<sp/>&lt;=<sp/>0.80f;</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>cursor_screen_pos<sp/>=<sp/>ImFloor(draw_pos<sp/>+<sp/>cursor_offset<sp/>-<sp/>draw_scroll);</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>cursor_screen_rect(cursor_screen_pos.x,<sp/>cursor_screen_pos.y<sp/>-<sp/>g.FontSize<sp/>+<sp/>0.5f,<sp/>cursor_screen_pos.x<sp/>+<sp/>1.0f,<sp/>cursor_screen_pos.y<sp/>-<sp/>1.5f);</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor_is_visible<sp/>&amp;&amp;<sp/>cursor_screen_rect.Overlaps(clip_rect))</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_window-&gt;DrawList-&gt;AddLine(cursor_screen_rect.Min,<sp/>cursor_screen_rect.GetBL(),<sp/>GetColorU32(ImGuiCol_Text));</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"></highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>OS<sp/>of<sp/>text<sp/>input<sp/>position<sp/>for<sp/>advanced<sp/>IME<sp/>(-1<sp/>x<sp/>offset<sp/>so<sp/>that<sp/>Windows<sp/>IME<sp/>can<sp/>cover<sp/>our<sp/>cursor.<sp/>Bit<sp/>of<sp/>an<sp/>extra<sp/>nicety.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_readonly)</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.PlatformImeData.WantVisible<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.PlatformImeData.InputPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(cursor_screen_pos.x<sp/>-<sp/>1.0f,<sp/>cursor_screen_pos.y<sp/>-<sp/>g.FontSize);</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.PlatformImeData.InputLineHeight<sp/>=<sp/>g.FontSize;</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.PlatformImeViewport<sp/>=<sp/>window-&gt;Viewport-&gt;ID;</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>text<sp/>only<sp/>(no<sp/>selection,<sp/>no<sp/>cursor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_multiline)</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner_size.x,<sp/>InputTextCalcTextLenAndLineCount(buf_display,<sp/>&amp;buf_display_end)<sp/>*<sp/>g.FontSize);<sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>need<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_displaying_hint<sp/>&amp;&amp;<sp/>g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_display_end<sp/>=<sp/>buf_display<sp/>+<sp/>state-&gt;CurLenA;</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_displaying_hint)</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_display_end<sp/>=<sp/>buf_display<sp/>+<sp/>strlen(buf_display);</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"></highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_multiline<sp/>||<sp/>(buf_display_end<sp/>-<sp/>buf_display)<sp/>&lt;<sp/>buf_display_max_length)</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImU32<sp/>col<sp/>=<sp/>GetColorU32(is_displaying_hint<sp/>?<sp/>ImGuiCol_TextDisabled<sp/>:<sp/>ImGuiCol_Text);</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_window-&gt;DrawList-&gt;AddText(g.Font,<sp/>g.FontSize,<sp/>draw_pos,<sp/>col,<sp/>buf_display,<sp/>buf_display_end,<sp/>0.0f,<sp/>is_multiline<sp/>?<sp/>NULL<sp/>:<sp/>&amp;clip_rect);</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"></highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_password<sp/>&amp;&amp;<sp/>!is_displaying_hint)</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopFont();</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"></highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_multiline)</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>focus<sp/>requests<sp/>to<sp/>work<sp/>on<sp/>our<sp/>multiline<sp/>we<sp/>need<sp/>to<sp/>ensure<sp/>our<sp/>child<sp/>ItemAdd()<sp/>call<sp/>specifies<sp/>the<sp/>ImGuiItemFlags_Inputable<sp/>(ref<sp/>issue<sp/>#4761)...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dummy(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(text_size.x,<sp/>text_size.y<sp/>+<sp/>style.FramePadding.y));</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiItemFlags<sp/>backup_item_flags<sp/>=<sp/>g.CurrentItemFlags;</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.CurrentItemFlags<sp/>|=<sp/>ImGuiItemFlags_Inputable<sp/>|<sp/>ImGuiItemFlags_NoTabStop;</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndChild();</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_data_backup.StatusFlags<sp/>|=<sp/>(g.LastItemData.StatusFlags<sp/>&amp;<sp/>ImGuiItemStatusFlags_HoveredWindow);</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.CurrentItemFlags<sp/>=<sp/>backup_item_flags;</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"></highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...and<sp/>then<sp/>we<sp/>need<sp/>to<sp/>undo<sp/>the<sp/>group<sp/>overriding<sp/>last<sp/>item<sp/>data,<sp/>which<sp/>gets<sp/>a<sp/>bit<sp/>messy<sp/>as<sp/>EndGroup()<sp/>tries<sp/>to<sp/>forward<sp/>scrollbar<sp/>being<sp/>active...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>quite<sp/>messy/tricky,<sp/>should<sp/>attempt<sp/>to<sp/>get<sp/>rid<sp/>of<sp/>the<sp/>child<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LastItemData.ID<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData.ID<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData.InFlags<sp/>=<sp/>item_data_backup.InFlags;</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData.StatusFlags<sp/>=<sp/>item_data_backup.StatusFlags;</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"></highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>as<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled<sp/>&amp;&amp;<sp/>(!is_password<sp/>||<sp/>is_displaying_hint))</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSetNextTextDecoration(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogRenderedText(&amp;draw_pos,<sp/>buf_display,<sp/>buf_display_end);</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"></highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size.x<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(frame_bb.Max.x<sp/>+<sp/>style.ItemInnerSpacing.x,<sp/>frame_bb.Min.y<sp/>+<sp/>style.FramePadding.y),<sp/>label);</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"></highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiInputTextFlags_NoMarkEdited))</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags);</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiInputTextFlags_EnterReturnsTrue)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enter_pressed;</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="4844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"></highlight></codeline>
<codeline lineno="4846"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4847"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>ColorEdit,<sp/>ColorPicker,<sp/>ColorButton,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4848"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ColorEdit3()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4850"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ColorEdit4()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4851"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ColorPicker3()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>RenderColorRectWithAlphaCheckerboard()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4853"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ColorPicker4()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4854"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ColorButton()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4855"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SetColorEditOptions()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4856"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ColorTooltip()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ColorEditOptionsPopup()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4858"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ColorPickerOptionsPopup()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4859"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4860"><highlight class="normal"></highlight></codeline>
<codeline lineno="4861"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ColorEdit3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>col[3],<sp/>ImGuiColorEditFlags<sp/>flags)</highlight></codeline>
<codeline lineno="4862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ColorEdit4(label,<sp/>col,<sp/>flags<sp/>|<sp/>ImGuiColorEditFlags_NoAlpha);</highlight></codeline>
<codeline lineno="4864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"></highlight></codeline>
<codeline lineno="4866"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ColorEdit<sp/>supports<sp/>RGB<sp/>and<sp/>HSV<sp/>inputs.<sp/>In<sp/>case<sp/>of<sp/>RGB<sp/>input<sp/>resulting<sp/>color<sp/>may<sp/>have<sp/>undefined<sp/>hue<sp/>and/or<sp/>saturation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4867"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>widget<sp/>displays<sp/>both<sp/>RGB<sp/>and<sp/>HSV<sp/>values<sp/>we<sp/>must<sp/>preserve<sp/>hue<sp/>and<sp/>saturation<sp/>to<sp/>prevent<sp/>these<sp/>values<sp/>resetting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4868"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColorEditRestoreHS(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>H,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>S,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>V)</highlight></codeline>
<codeline lineno="4869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>check<sp/>is<sp/>optional.<sp/>Suppose<sp/>we<sp/>have<sp/>two<sp/>color<sp/>widgets<sp/>side<sp/>by<sp/>side,<sp/>both<sp/>widgets<sp/>display<sp/>different<sp/>colors,<sp/>but<sp/>both<sp/>colors<sp/>have<sp/>hue<sp/>and/or<sp/>saturation<sp/>undefined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>color<sp/>check:<sp/>hue/saturation<sp/>is<sp/>preserved<sp/>in<sp/>one<sp/>widget.<sp/>Editing<sp/>color<sp/>in<sp/>one<sp/>widget<sp/>would<sp/>reset<sp/>hue/saturation<sp/>in<sp/>another<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Without<sp/>color<sp/>check:<sp/>common<sp/>hue/saturation<sp/>would<sp/>be<sp/>displayed<sp/>in<sp/>all<sp/>widgets<sp/>that<sp/>have<sp/>hue/saturation<sp/>undefined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>g.ColorEditLastColor<sp/>is<sp/>stored<sp/>as<sp/>ImU32<sp/>RGB<sp/>value:<sp/>this<sp/>essentially<sp/>gives<sp/>us<sp/>color<sp/>equality<sp/>check<sp/>with<sp/>reduced<sp/>precision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tiny<sp/>external<sp/>color<sp/>changes<sp/>would<sp/>not<sp/>be<sp/>detected<sp/>and<sp/>this<sp/>check<sp/>would<sp/>still<sp/>pass.<sp/>This<sp/>is<sp/>OK,<sp/>since<sp/>we<sp/>only<sp/>restore<sp/>hue/saturation<sp/>_only_<sp/>if<sp/>they<sp/>are<sp/>undefined,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>therefore<sp/>this<sp/>change<sp/>flipping<sp/>hue/saturation<sp/>from<sp/>undefined<sp/>to<sp/>a<sp/>very<sp/>tiny<sp/>value<sp/>would<sp/>still<sp/>be<sp/>represented<sp/>in<sp/>color<sp/>picker.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ColorEditLastColor<sp/>!=<sp/>ImGui::ColorConvertFloat4ToU32(<ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(col[0],<sp/>col[1],<sp/>col[2],<sp/>0)))</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"></highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>S<sp/>==<sp/>0,<sp/>H<sp/>is<sp/>undefined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>H<sp/>==<sp/>1<sp/>it<sp/>wraps<sp/>around<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*S<sp/>==<sp/>0.0f<sp/>||<sp/>(*H<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/>g.ColorEditLastHue<sp/>==<sp/>1))</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*H<sp/>=<sp/>g.ColorEditLastHue;</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>V<sp/>==<sp/>0,<sp/>S<sp/>is<sp/>undefined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*V<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*S<sp/>=<sp/>g.ColorEditLastSat;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"></highlight></codeline>
<codeline lineno="4890"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Edit<sp/>colors<sp/>components<sp/>(each<sp/>component<sp/>in<sp/>0.0f..1.0f<sp/>range).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4891"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>enum<sp/>ImGuiColorEditFlags_<sp/>for<sp/>available<sp/>options.<sp/>e.g.<sp/>Only<sp/>access<sp/>3<sp/>floats<sp/>if<sp/>ImGuiColorEditFlags_NoAlpha<sp/>flag<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4892"><highlight class="normal"></highlight><highlight class="comment">//<sp/>With<sp/>typical<sp/>options:<sp/>Left-click<sp/>on<sp/>color<sp/>square<sp/>to<sp/>open<sp/>color<sp/>picker.<sp/>Right-click<sp/>to<sp/>open<sp/>option<sp/>menu.<sp/>CTRL-Click<sp/>over<sp/>input<sp/>fields<sp/>to<sp/>edit<sp/>them<sp/>and<sp/>TAB<sp/>to<sp/>go<sp/>to<sp/>next<sp/>item.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4893"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ColorEdit4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>col[4],<sp/>ImGuiColorEditFlags<sp/>flags)</highlight></codeline>
<codeline lineno="4894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"></highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>square_sz<sp/>=<sp/>GetFrameHeight();</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_full<sp/>=<sp/>CalcItemWidth();</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_button<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoSmallPreview)<sp/>?<sp/>0.0f<sp/>:<sp/>(square_sz<sp/>+<sp/>style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_inputs<sp/>=<sp/>w_full<sp/>-<sp/>w_button;</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_display_end<sp/>=<sp/>FindRenderedTextEnd(label);</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/>g.NextItemData.ClearFlags();</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"></highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginGroup();</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(label);</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"></highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>not<sp/>showing<sp/>any<sp/>slider<sp/>there&apos;s<sp/>no<sp/>point<sp/>in<sp/>doing<sp/>any<sp/>HSV<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiColorEditFlags<sp/>flags_untouched<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoInputs)</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>(flags<sp/>&amp;<sp/>(~ImGuiColorEditFlags_DisplayMask_))<sp/>|<sp/>ImGuiColorEditFlags_DisplayRGB<sp/>|<sp/>ImGuiColorEditFlags_NoOptions;</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"></highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Context<sp/>menu:<sp/>display<sp/>and<sp/>modify<sp/>options<sp/>(before<sp/>defaults<sp/>are<sp/>applied)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoOptions))</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditOptionsPopup(col,<sp/>flags);</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"></highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>stored<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayMask_))</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>(g.ColorEditOptions<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayMask_);</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DataTypeMask_))</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>(g.ColorEditOptions<sp/>&amp;<sp/>ImGuiColorEditFlags_DataTypeMask_);</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_))</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>(g.ColorEditOptions<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_);</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_))</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>(g.ColorEditOptions<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_);</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>(g.ColorEditOptions<sp/>&amp;<sp/>~(ImGuiColorEditFlags_DisplayMask_<sp/>|<sp/>ImGuiColorEditFlags_DataTypeMask_<sp/>|<sp/>ImGuiColorEditFlags_PickerMask_<sp/>|<sp/>ImGuiColorEditFlags_InputMask_));</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(ImIsPowerOfTwo(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayMask_));<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>only<sp/>1<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(ImIsPowerOfTwo(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>only<sp/>1<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4932"><highlight class="normal"></highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hdr<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_HDR)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>components<sp/>=<sp/>alpha<sp/>?<sp/>4<sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"></highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>the<sp/>formats<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f[4]<sp/>=<sp/>{<sp/>col[0],<sp/>col[1],<sp/>col[2],<sp/>alpha<sp/>?<sp/>col[3]<sp/>:<sp/>1.0f<sp/>};</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputHSV)<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayRGB))</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertHSVtoRGB(f[0],<sp/>f[1],<sp/>f[2],<sp/>f[0],<sp/>f[1],<sp/>f[2]);</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputRGB)<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayHSV))</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hue<sp/>is<sp/>lost<sp/>when<sp/>converting<sp/>from<sp/>greyscale<sp/>rgb<sp/>(saturation=0).<sp/>Restore<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertRGBtoHSV(f[0],<sp/>f[1],<sp/>f[2],<sp/>f[0],<sp/>f[1],<sp/>f[2]);</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditRestoreHS(col,<sp/>&amp;f[0],<sp/>&amp;f[1],<sp/>&amp;f[2]);</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i[4]<sp/>=<sp/>{<sp/>IM_F32_TO_INT8_UNBOUND(f[0]),<sp/>IM_F32_TO_INT8_UNBOUND(f[1]),<sp/>IM_F32_TO_INT8_UNBOUND(f[2]),<sp/>IM_F32_TO_INT8_UNBOUND(f[3])<sp/>};</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"></highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed_as_float<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"></highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputs_offset_x<sp/>=<sp/>(style.ColorButtonPosition<sp/>==<sp/>ImGuiDir_Left)<sp/>?<sp/>w_button<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos.x<sp/>=<sp/>pos.x<sp/>+<sp/>inputs_offset_x;</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"></highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>(ImGuiColorEditFlags_DisplayRGB<sp/>|<sp/>ImGuiColorEditFlags_DisplayHSV))<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoInputs)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RGB/HSV<sp/>0..255<sp/>Sliders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_item_one<sp/><sp/>=<sp/>ImMax(1.0f,<sp/>IM_FLOOR((w_inputs<sp/>-<sp/>(style.ItemInnerSpacing.x)<sp/>*<sp/>(components<sp/>-<sp/>1))<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)components));</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_item_last<sp/>=<sp/>ImMax(1.0f,<sp/>IM_FLOOR(w_inputs<sp/>-<sp/>(w_item_one<sp/>+<sp/>style.ItemInnerSpacing.x)<sp/>*<sp/>(components<sp/>-<sp/>1)));</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hide_prefix<sp/>=<sp/>(w_item_one<sp/>&lt;=<sp/>CalcTextSize((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_Float)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;M:0.000&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;M:000&quot;</highlight><highlight class="normal">).x);</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ids[4]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;##X&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;##Y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;##Z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;##W&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt_table_int[3][4]<sp/>=</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%3d&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%3d&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%3d&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%3d&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>Short<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;R:%3d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G:%3d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B:%3d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A:%3d&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>Long<sp/>display<sp/>for<sp/>RGBA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;H:%3d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;S:%3d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;V:%3d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A:%3d&quot;</highlight><highlight class="normal"><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>Long<sp/>display<sp/>for<sp/>HSVA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt_table_float[3][4]<sp/>=</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%0.3f&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%0.3f&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%0.3f&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%0.3f&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>Short<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;R:%0.3f&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G:%0.3f&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B:%0.3f&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A:%0.3f&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>Long<sp/>display<sp/>for<sp/>RGBA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;H:%0.3f&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;S:%0.3f&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;V:%0.3f&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A:%0.3f&quot;</highlight><highlight class="normal"><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>Long<sp/>display<sp/>for<sp/>HSVA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmt_idx<sp/>=<sp/>hide_prefix<sp/>?<sp/>0<sp/>:<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayHSV)<sp/>?<sp/>2<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"></highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>components;<sp/>n++)</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextItemWidth((n<sp/>+<sp/>1<sp/>&lt;<sp/>components)<sp/>?<sp/>w_item_one<sp/>:<sp/>w_item_last);</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"></highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>When<sp/>ImGuiColorEditFlags_HDR<sp/>flag<sp/>is<sp/>passed<sp/>HS<sp/>values<sp/>snap<sp/>in<sp/>weird<sp/>ways<sp/>when<sp/>SV<sp/>values<sp/>go<sp/>below<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_Float)</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>|=<sp/>DragFloat(ids[n],<sp/>&amp;f[n],<sp/>1.0f<sp/>/<sp/>255.0f,<sp/>0.0f,<sp/>hdr<sp/>?<sp/>0.0f<sp/>:<sp/>1.0f,<sp/>fmt_table_float[fmt_idx][n]);</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed_as_float<sp/>|=<sp/>value_changed;</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>|=<sp/>DragInt(ids[n],<sp/>&amp;i[n],<sp/>1.0f,<sp/>0,<sp/>hdr<sp/>?<sp/>0<sp/>:<sp/>255,<sp/>fmt_table_int[fmt_idx][n]);</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoOptions))</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopupOnItemClick(</highlight><highlight class="stringliteral">&quot;context&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayHex)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoInputs)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RGB<sp/>Hexadecimal<sp/>Input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64];</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha)</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatString(buf,<sp/>IM_ARRAYSIZE(buf),<sp/></highlight><highlight class="stringliteral">&quot;#%02X%02X%02X%02X&quot;</highlight><highlight class="normal">,<sp/>ImClamp(i[0],<sp/>0,<sp/>255),<sp/>ImClamp(i[1],<sp/>0,<sp/>255),<sp/>ImClamp(i[2],<sp/>0,<sp/>255),<sp/>ImClamp(i[3],<sp/>0,<sp/>255));</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatString(buf,<sp/>IM_ARRAYSIZE(buf),<sp/></highlight><highlight class="stringliteral">&quot;#%02X%02X%02X&quot;</highlight><highlight class="normal">,<sp/>ImClamp(i[0],<sp/>0,<sp/>255),<sp/>ImClamp(i[1],<sp/>0,<sp/>255),<sp/>ImClamp(i[2],<sp/>0,<sp/>255));</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextItemWidth(w_inputs);</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InputText(</highlight><highlight class="stringliteral">&quot;##Text&quot;</highlight><highlight class="normal">,<sp/>buf,<sp/>IM_ARRAYSIZE(buf),<sp/>ImGuiInputTextFlags_CharsHexadecimal<sp/>|<sp/>ImGuiInputTextFlags_CharsUppercase))</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal"><sp/>||<sp/>ImCharIsBlankA(*p))</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p++;</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i[0]<sp/>=<sp/>i[1]<sp/>=<sp/>i[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i[3]<sp/>=<sp/>0xFF;<sp/></highlight><highlight class="comment">//<sp/>alpha<sp/>default<sp/>to<sp/>255<sp/>is<sp/>not<sp/>parsed<sp/>by<sp/>scanf<sp/>(e.g.<sp/>inputting<sp/>#FFFFFF<sp/>omitting<sp/>alpha)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha)</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>sscanf(p,<sp/></highlight><highlight class="stringliteral">&quot;%02X%02X%02X%02X&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;i[0],<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;i[1],<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;i[2],<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;i[3]);<sp/></highlight><highlight class="comment">//<sp/>Treat<sp/>at<sp/>unsigned<sp/>(%X<sp/>is<sp/>unsigned)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>sscanf(p,<sp/></highlight><highlight class="stringliteral">&quot;%02X%02X%02X&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;i[0],<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;i[1],<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;i[2]);</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_UNUSED(r);<sp/></highlight><highlight class="comment">//<sp/>Fixes<sp/>C6031:<sp/>Return<sp/>value<sp/>ignored:<sp/>&apos;sscanf&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoOptions))</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopupOnItemClick(</highlight><highlight class="stringliteral">&quot;context&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"></highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>picker_active_window<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoSmallPreview))</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>button_offset_x<sp/>=<sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoInputs)<sp/>||<sp/>(style.ColorButtonPosition<sp/>==<sp/>ImGuiDir_Left))<sp/>?<sp/>0.0f<sp/>:<sp/>w_inputs<sp/>+<sp/>style.ItemInnerSpacing.x;</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.x<sp/>+<sp/>button_offset_x,<sp/>pos.y);</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"></highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>col_v4(col[0],<sp/>col[1],<sp/>col[2],<sp/>alpha<sp/>?<sp/>col[3]<sp/>:<sp/>1.0f);</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ColorButton(</highlight><highlight class="stringliteral">&quot;##ColorButton&quot;</highlight><highlight class="normal">,<sp/>col_v4,<sp/>flags))</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoPicker))</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>current<sp/>color<sp/>and<sp/>open<sp/>a<sp/>picker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ColorPickerRef<sp/>=<sp/>col_v4;</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopup(</highlight><highlight class="stringliteral">&quot;picker&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextWindowPos(g.LastItemData.Rect.GetBL()<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-1,<sp/>style.ItemSpacing.y));</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoOptions))</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopupOnItemClick(</highlight><highlight class="stringliteral">&quot;context&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"></highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BeginPopup(</highlight><highlight class="stringliteral">&quot;picker&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>picker_active_window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>!=<sp/>label_display_end)</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(label,<sp/>label_display_end);</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spacing();</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiColorEditFlags<sp/>picker_flags_to_forward<sp/>=<sp/>ImGuiColorEditFlags_DataTypeMask_<sp/>|<sp/>ImGuiColorEditFlags_PickerMask_<sp/>|<sp/>ImGuiColorEditFlags_InputMask_<sp/>|<sp/>ImGuiColorEditFlags_HDR<sp/>|<sp/>ImGuiColorEditFlags_NoAlpha<sp/>|<sp/>ImGuiColorEditFlags_AlphaBar;</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiColorEditFlags<sp/>picker_flags<sp/>=<sp/>(flags_untouched<sp/>&amp;<sp/>picker_flags_to_forward)<sp/>|<sp/>ImGuiColorEditFlags_DisplayMask_<sp/>|<sp/>ImGuiColorEditFlags_NoLabel<sp/>|<sp/>ImGuiColorEditFlags_AlphaPreviewHalf;</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextItemWidth(square_sz<sp/>*<sp/>12.0f);<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>256<sp/>+<sp/>bar<sp/>sizes?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>|=<sp/>ColorPicker4(</highlight><highlight class="stringliteral">&quot;##picker&quot;</highlight><highlight class="normal">,<sp/>col,<sp/>picker_flags,<sp/>&amp;g.ColorPickerRef.x);</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndPopup();</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"></highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>!=<sp/>label_display_end<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoLabel))</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>text_offset_x<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoInputs)<sp/>?<sp/>w_button<sp/>:<sp/>w_full<sp/>+<sp/>style.ItemInnerSpacing.x;</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.x<sp/>+<sp/>text_offset_x,<sp/>pos.y<sp/>+<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(label,<sp/>label_display_end);</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"></highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed<sp/>&amp;&amp;<sp/>picker_active_window<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value_changed_as_float)</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>4;<sp/>n++)</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f[n]<sp/>=<sp/>i[n]<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayHSV)<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputRGB))</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ColorEditLastHue<sp/>=<sp/>f[0];</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ColorEditLastSat<sp/>=<sp/>f[1];</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertHSVtoRGB(f[0],<sp/>f[1],<sp/>f[2],<sp/>f[0],<sp/>f[1],<sp/>f[2]);</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ColorEditLastColor<sp/>=<sp/>ColorConvertFloat4ToU32(<ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(f[0],<sp/>f[1],<sp/>f[2],<sp/>0));</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayRGB)<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputHSV))</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertRGBtoHSV(f[0],<sp/>f[1],<sp/>f[2],<sp/>f[0],<sp/>f[1],<sp/>f[2]);</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"></highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col[0]<sp/>=<sp/>f[0];</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col[1]<sp/>=<sp/>f[1];</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col[2]<sp/>=<sp/>f[2];</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha)</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col[3]<sp/>=<sp/>f[3];</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"></highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"></highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drag<sp/>and<sp/>Drop<sp/>Target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>The<sp/>flag<sp/>test<sp/>is<sp/>merely<sp/>an<sp/>optional<sp/>micro-optimization,<sp/>BeginDragDropTarget()<sp/>does<sp/>the<sp/>same<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((g.LastItemData.StatusFlags<sp/>&amp;<sp/>ImGuiItemStatusFlags_HoveredRect)<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoDragDrop)<sp/>&amp;&amp;<sp/>BeginDragDropTarget())</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>accepted_drag_drop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_payload" kindref="compound">ImGuiPayload</ref>*<sp/>payload<sp/>=<sp/>AcceptDragDropPayload(IMGUI_PAYLOAD_TYPE_COLOR_3F))</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)col,<sp/>payload-&gt;Data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>Preserve<sp/>alpha<sp/>if<sp/>any<sp/>//-V512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/>accepted_drag_drop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_payload" kindref="compound">ImGuiPayload</ref>*<sp/>payload<sp/>=<sp/>AcceptDragDropPayload(IMGUI_PAYLOAD_TYPE_COLOR_4F))</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)col,<sp/>payload-&gt;Data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>components);</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/>accepted_drag_drop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drag-drop<sp/>payloads<sp/>are<sp/>always<sp/>RGB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accepted_drag_drop<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputHSV))</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertRGBtoHSV(col[0],<sp/>col[1],<sp/>col[2],<sp/>col[0],<sp/>col[1],<sp/>col[2]);</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndDragDropTarget();</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"></highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>picker<sp/>is<sp/>being<sp/>actively<sp/>used,<sp/>use<sp/>its<sp/>active<sp/>id<sp/>so<sp/>IsItemActive()<sp/>will<sp/>function<sp/>on<sp/>ColorEdit4().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(picker_active_window<sp/>&amp;&amp;<sp/>g.ActiveId<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>g.ActiveIdWindow<sp/>==<sp/>picker_active_window)</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData.ID<sp/>=<sp/>g.ActiveId;</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"></highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed)</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(g.LastItemData.ID);</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"></highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="5125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"></highlight></codeline>
<codeline lineno="5127"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ColorPicker3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>col[3],<sp/>ImGuiColorEditFlags<sp/>flags)</highlight></codeline>
<codeline lineno="5128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>col4[4]<sp/>=<sp/>{<sp/>col[0],<sp/>col[1],<sp/>col[2],<sp/>1.0f<sp/>};</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ColorPicker4(label,<sp/>col4,<sp/>flags<sp/>|<sp/>ImGuiColorEditFlags_NoAlpha))</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/><sp/><sp/>col[0]<sp/>=<sp/>col4[0];<sp/>col[1]<sp/>=<sp/>col4[1];<sp/>col[2]<sp/>=<sp/>col4[2];</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"></highlight></codeline>
<codeline lineno="5136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>for<sp/>ColorPicker4()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RenderArrowsForVerticalBar(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>half_sz,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bar_w,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha)</highlight></codeline>
<codeline lineno="5138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>alpha8<sp/>=<sp/>IM_F32_TO_INT8_SAT(alpha);</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::RenderArrowPointingAt(draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.x<sp/>+<sp/>half_sz.x<sp/>+<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.y),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(half_sz.x<sp/>+<sp/>2,<sp/>half_sz.y<sp/>+<sp/>1),<sp/>ImGuiDir_Right,<sp/>IM_COL32(0,0,0,alpha8));</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::RenderArrowPointingAt(draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.x<sp/>+<sp/>half_sz.x,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.y),<sp/>half_sz,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiDir_Right,<sp/>IM_COL32(255,255,255,alpha8));</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::RenderArrowPointingAt(draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.x<sp/>+<sp/>bar_w<sp/>-<sp/>half_sz.x<sp/>-<sp/>1,<sp/>pos.y),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(half_sz.x<sp/>+<sp/>2,<sp/>half_sz.y<sp/>+<sp/>1),<sp/>ImGuiDir_Left,<sp/><sp/>IM_COL32(0,0,0,alpha8));</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::RenderArrowPointingAt(draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.x<sp/>+<sp/>bar_w<sp/>-<sp/>half_sz.x,<sp/><sp/><sp/><sp/><sp/>pos.y),<sp/>half_sz,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiDir_Left,<sp/><sp/>IM_COL32(255,255,255,alpha8));</highlight></codeline>
<codeline lineno="5144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"></highlight></codeline>
<codeline lineno="5146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>ColorPicker4()<sp/>only<sp/>accesses<sp/>3<sp/>floats<sp/>if<sp/>ImGuiColorEditFlags_NoAlpha<sp/>flag<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(In<sp/>C++<sp/>the<sp/>&apos;float<sp/>col[4]&apos;<sp/>notation<sp/>for<sp/>a<sp/>function<sp/>argument<sp/>is<sp/>equivalent<sp/>to<sp/>&apos;float*<sp/>col&apos;,<sp/>we<sp/>only<sp/>specify<sp/>a<sp/>size<sp/>to<sp/>facilitate<sp/>understanding<sp/>of<sp/>the<sp/>code.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>we<sp/>adjust<sp/>the<sp/>big<sp/>color<sp/>square<sp/>height<sp/>based<sp/>on<sp/>item<sp/>width,<sp/>which<sp/>may<sp/>cause<sp/>a<sp/>flickering<sp/>feedback<sp/>loop<sp/>(if<sp/>automatic<sp/>height<sp/>makes<sp/>a<sp/>vertical<sp/>scrollbar<sp/>appears,<sp/>affecting<sp/>automatic<sp/>width..)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>this<sp/>is<sp/>trying<sp/>to<sp/>be<sp/>aware<sp/>of<sp/>style.Alpha<sp/>but<sp/>not<sp/>fully<sp/>correct.<sp/>Also,<sp/>the<sp/>color<sp/>wheel<sp/>will<sp/>have<sp/>overlapping<sp/>glitches<sp/>with<sp/>(style.Alpha<sp/>&lt;<sp/>1.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5150"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ColorPicker4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>col[4],<sp/>ImGuiColorEditFlags<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>ref_col)</highlight></codeline>
<codeline lineno="5151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"></highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list<sp/>=<sp/>window-&gt;DrawList;</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>g.IO;</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"></highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>CalcItemWidth();</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/><sp/>g.NextItemData.ClearFlags();</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"></highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(label);</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginGroup();</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"></highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoSidePreview))</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiColorEditFlags_NoSmallPreview;</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"></highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Context<sp/>menu:<sp/>display<sp/>and<sp/>store<sp/>options.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoOptions))</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorPickerOptionsPopup(col,<sp/>flags);</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"></highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>stored<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_))</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>((g.ColorEditOptions<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_)<sp/>?<sp/>g.ColorEditOptions<sp/>:<sp/>ImGuiColorEditFlags_DefaultOptions_)<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_;</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_))</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>((g.ColorEditOptions<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_)<sp/>?<sp/>g.ColorEditOptions<sp/>:<sp/>ImGuiColorEditFlags_DefaultOptions_)<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_;</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(ImIsPowerOfTwo(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_));<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>only<sp/>1<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(ImIsPowerOfTwo(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_));<sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>only<sp/>1<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoOptions))</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>(g.ColorEditOptions<sp/>&amp;<sp/>ImGuiColorEditFlags_AlphaBar);</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"></highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>components<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)<sp/>?<sp/>3<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alpha_bar<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_AlphaBar)<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha);</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>picker_pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>square_sz<sp/>=<sp/>GetFrameHeight();</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bars_width<sp/>=<sp/>square_sz;<sp/></highlight><highlight class="comment">//<sp/>Arbitrary<sp/>smallish<sp/>width<sp/>of<sp/>Hue/Alpha<sp/>picking<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sv_picker_size<sp/>=<sp/>ImMax(bars_width<sp/>*<sp/>1,<sp/>width<sp/>-<sp/>(alpha_bar<sp/>?<sp/>2<sp/>:<sp/>1)<sp/>*<sp/>(bars_width<sp/>+<sp/>style.ItemInnerSpacing.x));<sp/></highlight><highlight class="comment">//<sp/>Saturation/Value<sp/>picking<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bar0_pos_x<sp/>=<sp/>picker_pos.x<sp/>+<sp/>sv_picker_size<sp/>+<sp/>style.ItemInnerSpacing.x;</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bar1_pos_x<sp/>=<sp/>bar0_pos_x<sp/>+<sp/>bars_width<sp/>+<sp/>style.ItemInnerSpacing.x;</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bars_triangles_half_sz<sp/>=<sp/>IM_FLOOR(bars_width<sp/>*<sp/>0.20f);</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>backup_initial_col[4];</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(backup_initial_col,<sp/>col,<sp/>components<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"></highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wheel_thickness<sp/>=<sp/>sv_picker_size<sp/>*<sp/>0.08f;</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wheel_r_outer<sp/>=<sp/>sv_picker_size<sp/>*<sp/>0.50f;</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wheel_r_inner<sp/>=<sp/>wheel_r_outer<sp/>-<sp/>wheel_thickness;</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>wheel_center(picker_pos.x<sp/>+<sp/>(sv_picker_size<sp/>+<sp/>bars_width)*0.5f,<sp/>picker_pos.y<sp/>+<sp/>sv_picker_size<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"></highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>the<sp/>triangle<sp/>is<sp/>displayed<sp/>rotated<sp/>with<sp/>triangle_pa<sp/>pointing<sp/>to<sp/>Hue,<sp/>but<sp/>most<sp/>coordinates<sp/>stays<sp/>unrotated<sp/>for<sp/>logic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>triangle_r<sp/>=<sp/>wheel_r_inner<sp/>-<sp/>(int)(sv_picker_size<sp/>*<sp/>0.027f);</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>triangle_pa<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(triangle_r,<sp/>0.0f);<sp/></highlight><highlight class="comment">//<sp/>Hue<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>triangle_pb<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(triangle_r<sp/>*<sp/>-0.5f,<sp/>triangle_r<sp/>*<sp/>-0.866025f);<sp/></highlight><highlight class="comment">//<sp/>Black<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>triangle_pc<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(triangle_r<sp/>*<sp/>-0.5f,<sp/>triangle_r<sp/>*<sp/>+0.866025f);<sp/></highlight><highlight class="comment">//<sp/>White<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5208"><highlight class="normal"></highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>H<sp/>=<sp/>col[0],<sp/>S<sp/>=<sp/>col[1],<sp/>V<sp/>=<sp/>col[2];</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>R<sp/>=<sp/>col[0],<sp/>G<sp/>=<sp/>col[1],<sp/>B<sp/>=<sp/>col[2];</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputRGB)</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hue<sp/>is<sp/>lost<sp/>when<sp/>converting<sp/>from<sp/>greyscale<sp/>rgb<sp/>(saturation=0).<sp/>Restore<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertRGBtoHSV(R,<sp/>G,<sp/>B,<sp/>H,<sp/>S,<sp/>V);</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditRestoreHS(col,<sp/>&amp;H,<sp/>&amp;S,<sp/>&amp;V);</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputHSV)</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertHSVtoRGB(H,<sp/>S,<sp/>V,<sp/>R,<sp/>G,<sp/>B);</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"></highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>value_changed_h<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>value_changed_sv<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"></highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/>PushItemFlag(ImGuiItemFlags_NoNav,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerHueWheel)</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hue<sp/>wheel<sp/>+<sp/>SV<sp/>triangle<sp/>logic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InvisibleButton(</highlight><highlight class="stringliteral">&quot;hsv&quot;</highlight><highlight class="normal">,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(sv_picker_size<sp/>+<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>bars_width,<sp/>sv_picker_size));</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsItemActive())</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>initial_off<sp/>=<sp/>g.IO.MouseClickedPos[0]<sp/>-<sp/>wheel_center;</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>current_off<sp/>=<sp/>g.IO.MousePos<sp/>-<sp/>wheel_center;</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>initial_dist2<sp/>=<sp/>ImLengthSqr(initial_off);</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initial_dist2<sp/>&gt;=<sp/>(wheel_r_inner<sp/>-<sp/>1)<sp/>*<sp/>(wheel_r_inner<sp/>-<sp/>1)<sp/>&amp;&amp;<sp/>initial_dist2<sp/>&lt;=<sp/>(wheel_r_outer<sp/>+<sp/>1)<sp/>*<sp/>(wheel_r_outer<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interactive<sp/>with<sp/>Hue<sp/>wheel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H<sp/>=<sp/>ImAtan2(current_off.y,<sp/>current_off.x)<sp/>/<sp/>IM_PI<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(H<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H<sp/>+=<sp/>1.0f;</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/>value_changed_h<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos_hue_angle<sp/>=<sp/>ImCos(-H<sp/>*<sp/>2.0f<sp/>*<sp/>IM_PI);</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin_hue_angle<sp/>=<sp/>ImSin(-H<sp/>*<sp/>2.0f<sp/>*<sp/>IM_PI);</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImTriangleContainsPoint(triangle_pa,<sp/>triangle_pb,<sp/>triangle_pc,<sp/>ImRotate(initial_off,<sp/>cos_hue_angle,<sp/>sin_hue_angle)))</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interacting<sp/>with<sp/>SV<sp/>triangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>current_off_unrotated<sp/>=<sp/>ImRotate(current_off,<sp/>cos_hue_angle,<sp/>sin_hue_angle);</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ImTriangleContainsPoint(triangle_pa,<sp/>triangle_pb,<sp/>triangle_pc,<sp/>current_off_unrotated))</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_off_unrotated<sp/>=<sp/>ImTriangleClosestPoint(triangle_pa,<sp/>triangle_pb,<sp/>triangle_pc,<sp/>current_off_unrotated);</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>uu,<sp/>vv,<sp/>ww;</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImTriangleBarycentricCoords(triangle_pa,<sp/>triangle_pb,<sp/>triangle_pc,<sp/>current_off_unrotated,<sp/>uu,<sp/>vv,<sp/>ww);</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>=<sp/>ImClamp(1.0f<sp/>-<sp/>vv,<sp/>0.0001f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S<sp/>=<sp/>ImClamp(uu<sp/>/<sp/>V,<sp/>0.0001f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/>value_changed_sv<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoOptions))</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopupOnItemClick(</highlight><highlight class="stringliteral">&quot;context&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerHueBar)</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SV<sp/>rectangle<sp/>logic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InvisibleButton(</highlight><highlight class="stringliteral">&quot;sv&quot;</highlight><highlight class="normal">,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(sv_picker_size,<sp/>sv_picker_size));</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsItemActive())</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S<sp/>=<sp/>ImSaturate((io.MousePos.x<sp/>-<sp/>picker_pos.x)<sp/>/<sp/>(sv_picker_size<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>=<sp/>1.0f<sp/>-<sp/>ImSaturate((io.MousePos.y<sp/>-<sp/>picker_pos.y)<sp/>/<sp/>(sv_picker_size<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"></highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Greatly<sp/>reduces<sp/>hue<sp/>jitter<sp/>and<sp/>reset<sp/>to<sp/>0<sp/>when<sp/>hue<sp/>==<sp/>255<sp/>and<sp/>color<sp/>is<sp/>rapidly<sp/>modified<sp/>using<sp/>SV<sp/>square.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ColorEditLastColor<sp/>==<sp/>ColorConvertFloat4ToU32(<ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(col[0],<sp/>col[1],<sp/>col[2],<sp/>0)))</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H<sp/>=<sp/>g.ColorEditLastHue;</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/>value_changed_sv<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoOptions))</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopupOnItemClick(</highlight><highlight class="stringliteral">&quot;context&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"></highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hue<sp/>bar<sp/>logic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCursorScreenPos(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bar0_pos_x,<sp/>picker_pos.y));</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InvisibleButton(</highlight><highlight class="stringliteral">&quot;hue&quot;</highlight><highlight class="normal">,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bars_width,<sp/>sv_picker_size));</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsItemActive())</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H<sp/>=<sp/>ImSaturate((io.MousePos.y<sp/>-<sp/>picker_pos.y)<sp/>/<sp/>(sv_picker_size<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/>value_changed_h<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"></highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alpha<sp/>bar<sp/>logic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha_bar)</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCursorScreenPos(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bar1_pos_x,<sp/>picker_pos.y));</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InvisibleButton(</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bars_width,<sp/>sv_picker_size));</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsItemActive())</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col[3]<sp/>=<sp/>1.0f<sp/>-<sp/>ImSaturate((io.MousePos.y<sp/>-<sp/>picker_pos.y)<sp/>/<sp/>(sv_picker_size<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/>PopItemFlag();<sp/></highlight><highlight class="comment">//<sp/>ImGuiItemFlags_NoNav</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5299"><highlight class="normal"></highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoSidePreview))</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginGroup();</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"></highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoLabel))</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_display_end<sp/>=<sp/>FindRenderedTextEnd(label);</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>!=<sp/>label_display_end)</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoSidePreview))</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine(0,<sp/>style.ItemInnerSpacing.x);</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(label,<sp/>label_display_end);</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"></highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoSidePreview))</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushItemFlag(ImGuiItemFlags_NoNavDefaultFocus,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>col_v4(col[0],<sp/>col[1],<sp/>col[2],<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)<sp/>?<sp/>1.0f<sp/>:<sp/>col[3]);</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoLabel))</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text(</highlight><highlight class="stringliteral">&quot;Current&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"></highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiColorEditFlags<sp/>sub_flags_to_forward<sp/>=<sp/>ImGuiColorEditFlags_InputMask_<sp/>|<sp/>ImGuiColorEditFlags_HDR<sp/>|<sp/>ImGuiColorEditFlags_AlphaPreview<sp/>|<sp/>ImGuiColorEditFlags_AlphaPreviewHalf<sp/>|<sp/>ImGuiColorEditFlags_NoTooltip;</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorButton(</highlight><highlight class="stringliteral">&quot;##current&quot;</highlight><highlight class="normal">,<sp/>col_v4,<sp/>(flags<sp/>&amp;<sp/>sub_flags_to_forward),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(square_sz<sp/>*<sp/>3,<sp/>square_sz<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref_col<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text(</highlight><highlight class="stringliteral">&quot;Original&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>ref_col_v4(ref_col[0],<sp/>ref_col[1],<sp/>ref_col[2],<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)<sp/>?<sp/>1.0f<sp/>:<sp/>ref_col[3]);</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ColorButton(</highlight><highlight class="stringliteral">&quot;##original&quot;</highlight><highlight class="normal">,<sp/>ref_col_v4,<sp/>(flags<sp/>&amp;<sp/>sub_flags_to_forward),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(square_sz<sp/>*<sp/>3,<sp/>square_sz<sp/>*<sp/>2)))</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(col,<sp/>ref_col,<sp/>components<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopItemFlag();</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"></highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>back<sp/>color<sp/>to<sp/>RGB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed_h<sp/>||<sp/>value_changed_sv)</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputRGB)</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertHSVtoRGB(H,<sp/>S,<sp/>V,<sp/>col[0],<sp/>col[1],<sp/>col[2]);</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ColorEditLastHue<sp/>=<sp/>H;</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ColorEditLastSat<sp/>=<sp/>S;</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ColorEditLastColor<sp/>=<sp/>ColorConvertFloat4ToU32(<ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(col[0],<sp/>col[1],<sp/>col[2],<sp/>0));</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputHSV)</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col[0]<sp/>=<sp/>H;</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col[1]<sp/>=<sp/>S;</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col[2]<sp/>=<sp/>V;</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"></highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R,G,B<sp/>and<sp/>H,S,V<sp/>slider<sp/>color<sp/>editor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed_fix_hue_wrap<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoInputs)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushItemWidth((alpha_bar<sp/>?<sp/>bar1_pos_x<sp/>:<sp/>bar0_pos_x)<sp/>+<sp/>bars_width<sp/>-<sp/>picker_pos.x);</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiColorEditFlags<sp/>sub_flags_to_forward<sp/>=<sp/>ImGuiColorEditFlags_DataTypeMask_<sp/>|<sp/>ImGuiColorEditFlags_InputMask_<sp/>|<sp/>ImGuiColorEditFlags_HDR<sp/>|<sp/>ImGuiColorEditFlags_NoAlpha<sp/>|<sp/>ImGuiColorEditFlags_NoOptions<sp/>|<sp/>ImGuiColorEditFlags_NoSmallPreview<sp/>|<sp/>ImGuiColorEditFlags_AlphaPreview<sp/>|<sp/>ImGuiColorEditFlags_AlphaPreviewHalf;</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiColorEditFlags<sp/>sub_flags<sp/>=<sp/>(flags<sp/>&amp;<sp/>sub_flags_to_forward)<sp/>|<sp/>ImGuiColorEditFlags_NoPicker;</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayRGB<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ColorEdit4(</highlight><highlight class="stringliteral">&quot;##rgb&quot;</highlight><highlight class="normal">,<sp/>col,<sp/>sub_flags<sp/>|<sp/>ImGuiColorEditFlags_DisplayRGB))</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Hackily<sp/>differentiating<sp/>using<sp/>the<sp/>DragInt<sp/>(ActiveId<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>!ActiveIdAllowOverlap)<sp/>vs.<sp/>using<sp/>the<sp/>InputText<sp/>or<sp/>DropTarget.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>later<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>run<sp/>the<sp/>hue-wrap<sp/>canceling<sp/>code.<sp/>If<sp/>you<sp/>are<sp/>well<sp/>versed<sp/>in<sp/>HSV<sp/>picker<sp/>please<sp/>provide<sp/>your<sp/>input!<sp/>(See<sp/>#2050)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed_fix_hue_wrap<sp/>=<sp/>(g.ActiveId<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>!g.ActiveIdAllowOverlap);</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayHSV<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>|=<sp/>ColorEdit4(</highlight><highlight class="stringliteral">&quot;##hsv&quot;</highlight><highlight class="normal">,<sp/>col,<sp/>sub_flags<sp/>|<sp/>ImGuiColorEditFlags_DisplayHSV);</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayHex<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>|=<sp/>ColorEdit4(</highlight><highlight class="stringliteral">&quot;##hex&quot;</highlight><highlight class="normal">,<sp/>col,<sp/>sub_flags<sp/>|<sp/>ImGuiColorEditFlags_DisplayHex);</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopItemWidth();</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"></highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>cancel<sp/>hue<sp/>wrap<sp/>(after<sp/>ColorEdit4<sp/>call),<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed_fix_hue_wrap<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputRGB))</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_H,<sp/>new_S,<sp/>new_V;</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertRGBtoHSV(col[0],<sp/>col[1],<sp/>col[2],<sp/>new_H,<sp/>new_S,<sp/>new_V);</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_H<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>H<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_V<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>V<sp/>!=<sp/>new_V)</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertHSVtoRGB(H,<sp/>S,<sp/>new_V<sp/>&lt;=<sp/>0<sp/>?<sp/>V<sp/>*<sp/>0.5f<sp/>:<sp/>new_V,<sp/>col[0],<sp/>col[1],<sp/>col[2]);</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_S<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertHSVtoRGB(H,<sp/>new_S<sp/>&lt;=<sp/>0<sp/>?<sp/>S<sp/>*<sp/>0.5f<sp/>:<sp/>new_S,<sp/>new_V,<sp/>col[0],<sp/>col[1],<sp/>col[2]);</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"></highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed)</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputRGB)</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>col[0];</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G<sp/>=<sp/>col[1];</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>=<sp/>col[2];</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertRGBtoHSV(R,<sp/>G,<sp/>B,<sp/>H,<sp/>S,<sp/>V);</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorEditRestoreHS(col,<sp/>&amp;H,<sp/>&amp;S,<sp/>&amp;V);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>local<sp/>Hue<sp/>as<sp/>display<sp/>below<sp/>will<sp/>use<sp/>it<sp/>immediately.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputHSV)</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H<sp/>=<sp/>col[0];</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S<sp/>=<sp/>col[1];</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>=<sp/>col[2];</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertHSVtoRGB(H,<sp/>S,<sp/>V,<sp/>R,<sp/>G,<sp/>B);</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"></highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>style_alpha8<sp/>=<sp/>IM_F32_TO_INT8_SAT(style.Alpha);</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col_black<sp/>=<sp/>IM_COL32(0,0,0,style_alpha8);</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col_white<sp/>=<sp/>IM_COL32(255,255,255,style_alpha8);</highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col_midgrey<sp/>=<sp/>IM_COL32(128,128,128,style_alpha8);</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col_hues[6<sp/>+<sp/>1]<sp/>=<sp/>{<sp/>IM_COL32(255,0,0,style_alpha8),<sp/>IM_COL32(255,255,0,style_alpha8),<sp/>IM_COL32(0,255,0,style_alpha8),<sp/>IM_COL32(0,255,255,style_alpha8),<sp/>IM_COL32(0,0,255,style_alpha8),<sp/>IM_COL32(255,0,255,style_alpha8),<sp/>IM_COL32(255,0,0,style_alpha8)<sp/>};</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"></highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>hue_color_f(1,<sp/>1,<sp/>1,<sp/>style.Alpha);<sp/>ColorConvertHSVtoRGB(H,<sp/>1,<sp/>1,<sp/>hue_color_f.x,<sp/>hue_color_f.y,<sp/>hue_color_f.z);</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>hue_color32<sp/>=<sp/>ColorConvertFloat4ToU32(hue_color_f);</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>user_col32_striped_of_alpha<sp/>=<sp/>ColorConvertFloat4ToU32(<ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(R,<sp/>G,<sp/>B,<sp/>style.Alpha));<sp/></highlight><highlight class="comment">//<sp/>Important:<sp/>this<sp/>is<sp/>still<sp/>including<sp/>the<sp/>main<sp/>rendering/style<sp/>alpha!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5422"><highlight class="normal"></highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>sv_cursor_pos;</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"></highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerHueWheel)</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>Hue<sp/>Wheel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>aeps<sp/>=<sp/>0.5f<sp/>/<sp/>wheel_r_outer;<sp/></highlight><highlight class="comment">//<sp/>Half<sp/>a<sp/>pixel<sp/>arc<sp/>length<sp/>in<sp/>radians<sp/>(2pi<sp/>cancels<sp/>out).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segment_per_arc<sp/>=<sp/>ImMax(4,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)wheel_r_outer<sp/>/<sp/>12);</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>6;<sp/>n++)</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a0<sp/>=<sp/>(n)<sp/><sp/><sp/><sp/><sp/>/6.0f<sp/>*<sp/>2.0f<sp/>*<sp/>IM_PI<sp/>-<sp/>aeps;</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>(n+1.0f)/6.0f<sp/>*<sp/>2.0f<sp/>*<sp/>IM_PI<sp/>+<sp/>aeps;</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_start_idx<sp/>=<sp/>draw_list-&gt;VtxBuffer.Size;</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PathArcTo(wheel_center,<sp/>(wheel_r_inner<sp/>+<sp/>wheel_r_outer)*0.5f,<sp/>a0,<sp/>a1,<sp/>segment_per_arc);</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PathStroke(col_white,<sp/>0,<sp/>wheel_thickness);</highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_end_idx<sp/>=<sp/>draw_list-&gt;VtxBuffer.Size;</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"></highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Paint<sp/>colors<sp/>over<sp/>existing<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>gradient_p0(wheel_center.x<sp/>+<sp/>ImCos(a0)<sp/>*<sp/>wheel_r_inner,<sp/>wheel_center.y<sp/>+<sp/>ImSin(a0)<sp/>*<sp/>wheel_r_inner);</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>gradient_p1(wheel_center.x<sp/>+<sp/>ImCos(a1)<sp/>*<sp/>wheel_r_inner,<sp/>wheel_center.y<sp/>+<sp/>ImSin(a1)<sp/>*<sp/>wheel_r_inner);</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShadeVertsLinearColorGradientKeepAlpha(draw_list,<sp/>vert_start_idx,<sp/>vert_end_idx,<sp/>gradient_p0,<sp/>gradient_p1,<sp/>col_hues[n],<sp/>col_hues[n<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"></highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>Cursor<sp/>+<sp/>preview<sp/>on<sp/>Hue<sp/>Wheel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos_hue_angle<sp/>=<sp/>ImCos(H<sp/>*<sp/>2.0f<sp/>*<sp/>IM_PI);</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin_hue_angle<sp/>=<sp/>ImSin(H<sp/>*<sp/>2.0f<sp/>*<sp/>IM_PI);</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>hue_cursor_pos(wheel_center.x<sp/>+<sp/>cos_hue_angle<sp/>*<sp/>(wheel_r_inner<sp/>+<sp/>wheel_r_outer)<sp/>*<sp/>0.5f,<sp/>wheel_center.y<sp/>+<sp/>sin_hue_angle<sp/>*<sp/>(wheel_r_inner<sp/>+<sp/>wheel_r_outer)<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hue_cursor_rad<sp/>=<sp/>value_changed_h<sp/>?<sp/>wheel_thickness<sp/>*<sp/>0.65f<sp/>:<sp/>wheel_thickness<sp/>*<sp/>0.55f;</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hue_cursor_segments<sp/>=<sp/>ImClamp((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(hue_cursor_rad<sp/>/<sp/>1.4f),<sp/>9,<sp/>32);</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;AddCircleFilled(hue_cursor_pos,<sp/>hue_cursor_rad,<sp/>hue_color32,<sp/>hue_cursor_segments);</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;AddCircle(hue_cursor_pos,<sp/>hue_cursor_rad<sp/>+<sp/>1,<sp/>col_midgrey,<sp/>hue_cursor_segments);</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;AddCircle(hue_cursor_pos,<sp/>hue_cursor_rad,<sp/>col_white,<sp/>hue_cursor_segments);</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"></highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>SV<sp/>triangle<sp/>(rotated<sp/>according<sp/>to<sp/>hue)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>tra<sp/>=<sp/>wheel_center<sp/>+<sp/>ImRotate(triangle_pa,<sp/>cos_hue_angle,<sp/>sin_hue_angle);</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>trb<sp/>=<sp/>wheel_center<sp/>+<sp/>ImRotate(triangle_pb,<sp/>cos_hue_angle,<sp/>sin_hue_angle);</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>trc<sp/>=<sp/>wheel_center<sp/>+<sp/>ImRotate(triangle_pc,<sp/>cos_hue_angle,<sp/>sin_hue_angle);</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>uv_white<sp/>=<sp/>GetFontTexUvWhitePixel();</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PrimReserve(6,<sp/>6);</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PrimVtx(tra,<sp/>uv_white,<sp/>hue_color32);</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PrimVtx(trb,<sp/>uv_white,<sp/>hue_color32);</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PrimVtx(trc,<sp/>uv_white,<sp/>col_white);</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PrimVtx(tra,<sp/>uv_white,<sp/>0);</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PrimVtx(trb,<sp/>uv_white,<sp/>col_black);</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PrimVtx(trc,<sp/>uv_white,<sp/>0);</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;AddTriangle(tra,<sp/>trb,<sp/>trc,<sp/>col_midgrey,<sp/>1.5f);</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv_cursor_pos<sp/>=<sp/>ImLerp(ImLerp(trc,<sp/>tra,<sp/>ImSaturate(S)),<sp/>trb,<sp/>ImSaturate(1<sp/>-<sp/>V));</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerHueBar)</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>SV<sp/>Square</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;AddRectFilledMultiColor(picker_pos,<sp/>picker_pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(sv_picker_size,<sp/>sv_picker_size),<sp/>col_white,<sp/>hue_color32,<sp/>hue_color32,<sp/>col_white);</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;AddRectFilledMultiColor(picker_pos,<sp/>picker_pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(sv_picker_size,<sp/>sv_picker_size),<sp/>0,<sp/>0,<sp/>col_black,<sp/>col_black);</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderFrameBorder(picker_pos,<sp/>picker_pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(sv_picker_size,<sp/>sv_picker_size),<sp/>0.0f);</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv_cursor_pos.x<sp/>=<sp/>ImClamp(IM_ROUND(picker_pos.x<sp/>+<sp/>ImSaturate(S)<sp/><sp/><sp/><sp/><sp/>*<sp/>sv_picker_size),<sp/>picker_pos.x<sp/>+<sp/>2,<sp/>picker_pos.x<sp/>+<sp/>sv_picker_size<sp/>-<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Sneakily<sp/>prevent<sp/>the<sp/>circle<sp/>to<sp/>stick<sp/>out<sp/>too<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv_cursor_pos.y<sp/>=<sp/>ImClamp(IM_ROUND(picker_pos.y<sp/>+<sp/>ImSaturate(1<sp/>-<sp/>V)<sp/>*<sp/>sv_picker_size),<sp/>picker_pos.y<sp/>+<sp/>2,<sp/>picker_pos.y<sp/>+<sp/>sv_picker_size<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"></highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>Hue<sp/>Bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;AddRectFilledMultiColor(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bar0_pos_x,<sp/>picker_pos.y<sp/>+<sp/>i<sp/>*<sp/>(sv_picker_size<sp/>/<sp/>6)),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bar0_pos_x<sp/>+<sp/>bars_width,<sp/>picker_pos.y<sp/>+<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/>(sv_picker_size<sp/>/<sp/>6)),<sp/>col_hues[i],<sp/>col_hues[i],<sp/>col_hues[i<sp/>+<sp/>1],<sp/>col_hues[i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bar0_line_y<sp/>=<sp/>IM_ROUND(picker_pos.y<sp/>+<sp/>H<sp/>*<sp/>sv_picker_size);</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderFrameBorder(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bar0_pos_x,<sp/>picker_pos.y),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bar0_pos_x<sp/>+<sp/>bars_width,<sp/>picker_pos.y<sp/>+<sp/>sv_picker_size),<sp/>0.0f);</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrowsForVerticalBar(draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bar0_pos_x<sp/>-<sp/>1,<sp/>bar0_line_y),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bars_triangles_half_sz<sp/>+<sp/>1,<sp/>bars_triangles_half_sz),<sp/>bars_width<sp/>+<sp/>2.0f,<sp/>style.Alpha);</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"></highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>cursor/preview<sp/>circle<sp/>(clamp<sp/>S/V<sp/>within<sp/>0..1<sp/>range<sp/>because<sp/>floating<sp/>points<sp/>colors<sp/>may<sp/>lead<sp/>HSV<sp/>values<sp/>to<sp/>be<sp/>out<sp/>of<sp/>range)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sv_cursor_rad<sp/>=<sp/>value_changed_sv<sp/>?<sp/>10.0f<sp/>:<sp/>6.0f;</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;AddCircleFilled(sv_cursor_pos,<sp/>sv_cursor_rad,<sp/>user_col32_striped_of_alpha,<sp/>12);</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;AddCircle(sv_cursor_pos,<sp/>sv_cursor_rad<sp/>+<sp/>1,<sp/>col_midgrey,<sp/>12);</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;AddCircle(sv_cursor_pos,<sp/>sv_cursor_rad,<sp/>col_white,<sp/>12);</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"></highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>alpha<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha_bar)</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>ImSaturate(col[3]);</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bar1_bb(bar1_pos_x,<sp/>picker_pos.y,<sp/>bar1_pos_x<sp/>+<sp/>bars_width,<sp/>picker_pos.y<sp/>+<sp/>sv_picker_size);</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderColorRectWithAlphaCheckerboard(draw_list,<sp/>bar1_bb.Min,<sp/>bar1_bb.Max,<sp/>0,<sp/>bar1_bb.GetWidth()<sp/>/<sp/>2.0f,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>0.0f));</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;AddRectFilledMultiColor(bar1_bb.Min,<sp/>bar1_bb.Max,<sp/>user_col32_striped_of_alpha,<sp/>user_col32_striped_of_alpha,<sp/>user_col32_striped_of_alpha<sp/>&amp;<sp/>~IM_COL32_A_MASK,<sp/>user_col32_striped_of_alpha<sp/>&amp;<sp/>~IM_COL32_A_MASK);</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bar1_line_y<sp/>=<sp/>IM_ROUND(picker_pos.y<sp/>+<sp/>(1.0f<sp/>-<sp/>alpha)<sp/>*<sp/>sv_picker_size);</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderFrameBorder(bar1_bb.Min,<sp/>bar1_bb.Max,<sp/>0.0f);</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrowsForVerticalBar(draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bar1_pos_x<sp/>-<sp/>1,<sp/>bar1_line_y),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bars_triangles_half_sz<sp/>+<sp/>1,<sp/>bars_triangles_half_sz),<sp/>bars_width<sp/>+<sp/>2.0f,<sp/>style.Alpha);</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"></highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/>EndGroup();</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"></highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed<sp/>&amp;&amp;<sp/>memcmp(backup_initial_col,<sp/>col,<sp/>components<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed)</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(g.LastItemData.ID);</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"></highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="5515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"></highlight></codeline>
<codeline lineno="5517"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>little<sp/>color<sp/>square.<sp/>Return<sp/>true<sp/>when<sp/>clicked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5518"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>May<sp/>want<sp/>to<sp/>display/ignore<sp/>the<sp/>alpha<sp/>component<sp/>in<sp/>the<sp/>color<sp/>display?<sp/>Yet<sp/>show<sp/>it<sp/>in<sp/>the<sp/>tooltip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;desc_id&apos;<sp/>is<sp/>not<sp/>called<sp/>&apos;label&apos;<sp/>because<sp/>we<sp/>don&apos;t<sp/>display<sp/>it<sp/>next<sp/>to<sp/>the<sp/>button,<sp/>but<sp/>only<sp/>in<sp/>the<sp/>tooltip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>&apos;col&apos;<sp/>may<sp/>be<sp/>encoded<sp/>in<sp/>HSV<sp/>if<sp/>ImGuiColorEditFlags_InputHSV<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5521"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ColorButton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>col,<sp/>ImGuiColorEditFlags<sp/>flags,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size)</highlight></codeline>
<codeline lineno="5522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"></highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(desc_id);</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>default_size<sp/>=<sp/>GetFrameHeight();</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size.x<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.x<sp/>=<sp/>default_size;</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size.y<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.y<sp/>=<sp/>default_size;</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(bb,<sp/>(size.y<sp/>&gt;=<sp/>default_size)<sp/>?<sp/>g.Style.FramePadding.y<sp/>:<sp/>0.0f);</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"></highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held);</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"></highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>&amp;=<sp/>~(ImGuiColorEditFlags_AlphaPreview<sp/>|<sp/>ImGuiColorEditFlags_AlphaPreviewHalf);</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"></highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>col_rgb<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputHSV)</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorConvertHSVtoRGB(col_rgb.x,<sp/>col_rgb.y,<sp/>col_rgb.z,<sp/>col_rgb.x,<sp/>col_rgb.y,<sp/>col_rgb.z);</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"></highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>col_rgb_without_alpha(col_rgb.x,<sp/>col_rgb.y,<sp/>col_rgb.z,<sp/>1.0f);</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grid_step<sp/>=<sp/>ImMin(size.x,<sp/>size.y)<sp/>/<sp/>2.99f;</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding<sp/>=<sp/>ImMin(g.Style.FrameRounding,<sp/>grid_step<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb_inner<sp/>=<sp/>bb;</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>off<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoBorder)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off<sp/>=<sp/>-0.75f;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>border<sp/>(using<sp/>Col_FrameBg)<sp/>tends<sp/>to<sp/>look<sp/>off<sp/>when<sp/>color<sp/>is<sp/>near-opaque<sp/>and<sp/>rounding<sp/>is<sp/>enabled.<sp/>This<sp/>offset<sp/>seemed<sp/>like<sp/>a<sp/>good<sp/>middle<sp/>ground<sp/>to<sp/>reduce<sp/>those<sp/>artifacts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb_inner.Expand(off);</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_AlphaPreviewHalf)<sp/>&amp;&amp;<sp/>col_rgb.w<sp/>&lt;<sp/>1.0f)</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mid_x<sp/>=<sp/>IM_ROUND((bb_inner.Min.x<sp/>+<sp/>bb_inner.Max.x)<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderColorRectWithAlphaCheckerboard(window-&gt;DrawList,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb_inner.Min.x<sp/>+<sp/>grid_step,<sp/>bb_inner.Min.y),<sp/>bb_inner.Max,<sp/>GetColorU32(col_rgb),<sp/>grid_step,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-grid_step<sp/>+<sp/>off,<sp/>off),<sp/>rounding,<sp/>ImDrawFlags_RoundCornersRight);</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(bb_inner.Min,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(mid_x,<sp/>bb_inner.Max.y),<sp/>GetColorU32(col_rgb_without_alpha),<sp/>rounding,<sp/>ImDrawFlags_RoundCornersLeft);</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>GetColorU32()<sp/>multiplies<sp/>by<sp/>the<sp/>global<sp/>style<sp/>Alpha<sp/>and<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>display<sp/>a<sp/>checkerboard<sp/>if<sp/>the<sp/>source<sp/>code<sp/>had<sp/>no<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>col_source<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_AlphaPreview)<sp/>?<sp/>col_rgb<sp/>:<sp/>col_rgb_without_alpha;</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_source.w<sp/>&lt;<sp/>1.0f)</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderColorRectWithAlphaCheckerboard(window-&gt;DrawList,<sp/>bb_inner.Min,<sp/>bb_inner.Max,<sp/>GetColorU32(col_source),<sp/>grid_step,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(off,<sp/>off),<sp/>rounding);</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(bb_inner.Min,<sp/>bb_inner.Max,<sp/>GetColorU32(col_source),<sp/>rounding);</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoBorder)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.Style.FrameBorderSize<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderFrameBorder(bb.Min,<sp/>bb.Max,<sp/>rounding);</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRect(bb.Min,<sp/>bb.Max,<sp/>GetColorU32(ImGuiCol_FrameBg),<sp/>rounding);<sp/></highlight><highlight class="comment">//<sp/>Color<sp/>button<sp/>are<sp/>often<sp/>in<sp/>need<sp/>of<sp/>some<sp/>sort<sp/>of<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"></highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drag<sp/>and<sp/>Drop<sp/>Source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>The<sp/>ActiveId<sp/>test<sp/>is<sp/>merely<sp/>an<sp/>optional<sp/>micro-optimization,<sp/>BeginDragDropSource()<sp/>does<sp/>the<sp/>same<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoDragDrop)<sp/>&amp;&amp;<sp/>BeginDragDropSource())</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDragDropPayload(IMGUI_PAYLOAD_TYPE_COLOR_3F,<sp/>&amp;col_rgb,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>3,<sp/>ImGuiCond_Once);</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDragDropPayload(IMGUI_PAYLOAD_TYPE_COLOR_4F,<sp/>&amp;col_rgb,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>4,<sp/>ImGuiCond_Once);</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorButton(desc_id,<sp/>col,<sp/>flags);</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SameLine();</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(</highlight><highlight class="stringliteral">&quot;Color&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndDragDropSource();</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"></highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tooltip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoTooltip)<sp/>&amp;&amp;<sp/>hovered)</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorTooltip(desc_id,<sp/>&amp;col.x,<sp/>flags<sp/>&amp;<sp/>(ImGuiColorEditFlags_InputMask_<sp/>|<sp/>ImGuiColorEditFlags_NoAlpha<sp/>|<sp/>ImGuiColorEditFlags_AlphaPreview<sp/>|<sp/>ImGuiColorEditFlags_AlphaPreviewHalf));</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"></highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="5602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"></highlight></codeline>
<codeline lineno="5604"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize/override<sp/>default<sp/>color<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5605"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::SetColorEditOptions(ImGuiColorEditFlags<sp/>flags)</highlight></codeline>
<codeline lineno="5606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiColorEditFlags_DefaultOptions_<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayMask_;</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DataTypeMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiColorEditFlags_DefaultOptions_<sp/>&amp;<sp/>ImGuiColorEditFlags_DataTypeMask_;</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiColorEditFlags_DefaultOptions_<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_;</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiColorEditFlags_DefaultOptions_<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_;</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(ImIsPowerOfTwo(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayMask_));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>only<sp/>1<sp/>option<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(ImIsPowerOfTwo(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DataTypeMask_));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>only<sp/>1<sp/>option<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(ImIsPowerOfTwo(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>only<sp/>1<sp/>option<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(ImIsPowerOfTwo(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>only<sp/>1<sp/>option<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/>g.ColorEditOptions<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="5621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"></highlight></codeline>
<codeline lineno="5623"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>only<sp/>access<sp/>3<sp/>floats<sp/>if<sp/>ImGuiColorEditFlags_NoAlpha<sp/>flag<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5624"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::ColorTooltip(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>col,<sp/>ImGuiColorEditFlags<sp/>flags)</highlight></codeline>
<codeline lineno="5625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"></highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginTooltipEx(ImGuiTooltipFlags_OverridePreviousTooltip,<sp/>ImGuiWindowFlags_None);</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end<sp/>=<sp/>text<sp/>?<sp/>FindRenderedTextEnd(text,<sp/>NULL)<sp/>:<sp/>text;</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_end<sp/>&gt;<sp/>text)</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextEx(text,<sp/>text_end);</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Separator();</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"></highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>sz(g.FontSize<sp/>*<sp/>3<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2,<sp/>g.FontSize<sp/>*<sp/>3<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>cf(col[0],<sp/>col[1],<sp/>col[2],<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)<sp/>?<sp/>1.0f<sp/>:<sp/>col[3]);</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cr<sp/>=<sp/>IM_F32_TO_INT8_SAT(col[0]),<sp/>cg<sp/>=<sp/>IM_F32_TO_INT8_SAT(col[1]),<sp/>cb<sp/>=<sp/>IM_F32_TO_INT8_SAT(col[2]),<sp/>ca<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)<sp/>?<sp/>255<sp/>:<sp/>IM_F32_TO_INT8_SAT(col[3]);</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/>ColorButton(</highlight><highlight class="stringliteral">&quot;##preview&quot;</highlight><highlight class="normal">,<sp/>cf,<sp/>(flags<sp/>&amp;<sp/>(ImGuiColorEditFlags_InputMask_<sp/>|<sp/>ImGuiColorEditFlags_NoAlpha<sp/>|<sp/>ImGuiColorEditFlags_AlphaPreview<sp/>|<sp/>ImGuiColorEditFlags_AlphaPreviewHalf))<sp/>|<sp/>ImGuiColorEditFlags_NoTooltip,<sp/>sz);</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/><sp/><sp/>SameLine();</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputRGB)<sp/>||<sp/>!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputMask_))</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text(</highlight><highlight class="stringliteral">&quot;#%02X%02X%02X\nR:<sp/>%d,<sp/>G:<sp/>%d,<sp/>B:<sp/>%d\n(%.3f,<sp/>%.3f,<sp/>%.3f)&quot;</highlight><highlight class="normal">,<sp/>cr,<sp/>cg,<sp/>cb,<sp/>cr,<sp/>cg,<sp/>cb,<sp/>col[0],<sp/>col[1],<sp/>col[2]);</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text(</highlight><highlight class="stringliteral">&quot;#%02X%02X%02X%02X\nR:%d,<sp/>G:%d,<sp/>B:%d,<sp/>A:%d\n(%.3f,<sp/>%.3f,<sp/>%.3f,<sp/>%.3f)&quot;</highlight><highlight class="normal">,<sp/>cr,<sp/>cg,<sp/>cb,<sp/>ca,<sp/>cr,<sp/>cg,<sp/>cb,<sp/>ca,<sp/>col[0],<sp/>col[1],<sp/>col[2],<sp/>col[3]);</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_InputHSV)</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text(</highlight><highlight class="stringliteral">&quot;H:<sp/>%.3f,<sp/>S:<sp/>%.3f,<sp/>V:<sp/>%.3f&quot;</highlight><highlight class="normal">,<sp/>col[0],<sp/>col[1],<sp/>col[2]);</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text(</highlight><highlight class="stringliteral">&quot;H:<sp/>%.3f,<sp/>S:<sp/>%.3f,<sp/>V:<sp/>%.3f,<sp/>A:<sp/>%.3f&quot;</highlight><highlight class="normal">,<sp/>col[0],<sp/>col[1],<sp/>col[2],<sp/>col[3]);</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/>EndTooltip();</highlight></codeline>
<codeline lineno="5656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"></highlight></codeline>
<codeline lineno="5658"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::ColorEditOptionsPopup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>col,<sp/>ImGuiColorEditFlags<sp/>flags)</highlight></codeline>
<codeline lineno="5659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_opt_inputs<sp/>=<sp/>!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayMask_);</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_opt_datatype<sp/>=<sp/>!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_DataTypeMask_);</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!allow_opt_inputs<sp/>&amp;&amp;<sp/>!allow_opt_datatype)<sp/>||<sp/>!BeginPopup(</highlight><highlight class="stringliteral">&quot;context&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiColorEditFlags<sp/>opts<sp/>=<sp/>g.ColorEditOptions;</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_opt_inputs)</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RadioButton(</highlight><highlight class="stringliteral">&quot;RGB&quot;</highlight><highlight class="normal">,<sp/>(opts<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayRGB)<sp/>!=<sp/>0))<sp/>opts<sp/>=<sp/>(opts<sp/>&amp;<sp/>~ImGuiColorEditFlags_DisplayMask_)<sp/>|<sp/>ImGuiColorEditFlags_DisplayRGB;</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RadioButton(</highlight><highlight class="stringliteral">&quot;HSV&quot;</highlight><highlight class="normal">,<sp/>(opts<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayHSV)<sp/>!=<sp/>0))<sp/>opts<sp/>=<sp/>(opts<sp/>&amp;<sp/>~ImGuiColorEditFlags_DisplayMask_)<sp/>|<sp/>ImGuiColorEditFlags_DisplayHSV;</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RadioButton(</highlight><highlight class="stringliteral">&quot;Hex&quot;</highlight><highlight class="normal">,<sp/>(opts<sp/>&amp;<sp/>ImGuiColorEditFlags_DisplayHex)<sp/>!=<sp/>0))<sp/>opts<sp/>=<sp/>(opts<sp/>&amp;<sp/>~ImGuiColorEditFlags_DisplayMask_)<sp/>|<sp/>ImGuiColorEditFlags_DisplayHex;</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_opt_datatype)</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_opt_inputs)<sp/>Separator();</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RadioButton(</highlight><highlight class="stringliteral">&quot;0..255&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>(opts<sp/>&amp;<sp/>ImGuiColorEditFlags_Uint8)<sp/>!=<sp/>0))<sp/>opts<sp/>=<sp/>(opts<sp/>&amp;<sp/>~ImGuiColorEditFlags_DataTypeMask_)<sp/>|<sp/>ImGuiColorEditFlags_Uint8;</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RadioButton(</highlight><highlight class="stringliteral">&quot;0.00..1.00&quot;</highlight><highlight class="normal">,<sp/>(opts<sp/>&amp;<sp/>ImGuiColorEditFlags_Float)<sp/>!=<sp/>0))<sp/>opts<sp/>=<sp/>(opts<sp/>&amp;<sp/>~ImGuiColorEditFlags_DataTypeMask_)<sp/>|<sp/>ImGuiColorEditFlags_Float;</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"></highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_opt_inputs<sp/>||<sp/>allow_opt_datatype)</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Separator();</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Button(</highlight><highlight class="stringliteral">&quot;Copy<sp/>as..&quot;</highlight><highlight class="normal">,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-1,<sp/>0)))</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopup(</highlight><highlight class="stringliteral">&quot;Copy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BeginPopup(</highlight><highlight class="stringliteral">&quot;Copy&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cr<sp/>=<sp/>IM_F32_TO_INT8_SAT(col[0]),<sp/>cg<sp/>=<sp/>IM_F32_TO_INT8_SAT(col[1]),<sp/>cb<sp/>=<sp/>IM_F32_TO_INT8_SAT(col[2]),<sp/>ca<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)<sp/>?<sp/>255<sp/>:<sp/>IM_F32_TO_INT8_SAT(col[3]);</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64];</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatString(buf,<sp/>IM_ARRAYSIZE(buf),<sp/></highlight><highlight class="stringliteral">&quot;(%.3ff,<sp/>%.3ff,<sp/>%.3ff,<sp/>%.3ff)&quot;</highlight><highlight class="normal">,<sp/>col[0],<sp/>col[1],<sp/>col[2],<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)<sp/>?<sp/>1.0f<sp/>:<sp/>col[3]);</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Selectable(buf))</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetClipboardText(buf);</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatString(buf,<sp/>IM_ARRAYSIZE(buf),<sp/></highlight><highlight class="stringliteral">&quot;(%d,%d,%d,%d)&quot;</highlight><highlight class="normal">,<sp/>cr,<sp/>cg,<sp/>cb,<sp/>ca);</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Selectable(buf))</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetClipboardText(buf);</highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatString(buf,<sp/>IM_ARRAYSIZE(buf),<sp/></highlight><highlight class="stringliteral">&quot;#%02X%02X%02X&quot;</highlight><highlight class="normal">,<sp/>cr,<sp/>cg,<sp/>cb);</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Selectable(buf))</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetClipboardText(buf);</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha))</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatString(buf,<sp/>IM_ARRAYSIZE(buf),<sp/></highlight><highlight class="stringliteral">&quot;#%02X%02X%02X%02X&quot;</highlight><highlight class="normal">,<sp/>cr,<sp/>cg,<sp/>cb,<sp/>ca);</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Selectable(buf))</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetClipboardText(buf);</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndPopup();</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"></highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/><sp/><sp/>g.ColorEditOptions<sp/>=<sp/>opts;</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/><sp/>EndPopup();</highlight></codeline>
<codeline lineno="5707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"></highlight></codeline>
<codeline lineno="5709"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::ColorPickerOptionsPopup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>ref_col,<sp/>ImGuiColorEditFlags<sp/>flags)</highlight></codeline>
<codeline lineno="5710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_opt_picker<sp/>=<sp/>!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_);</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_opt_alpha_bar<sp/>=<sp/>!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_AlphaBar);</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!allow_opt_picker<sp/>&amp;&amp;<sp/>!allow_opt_alpha_bar)<sp/>||<sp/>!BeginPopup(</highlight><highlight class="stringliteral">&quot;context&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_opt_picker)</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>picker_size(g.FontSize<sp/>*<sp/>8,<sp/>ImMax(g.FontSize<sp/>*<sp/>8<sp/>-<sp/>(GetFrameHeight()<sp/>+<sp/>g.Style.ItemInnerSpacing.x),<sp/>1.0f));<sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Picker<sp/>size<sp/>copied<sp/>from<sp/>main<sp/>picker<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushItemWidth(picker_size.x);</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>picker_type<sp/>=<sp/>0;<sp/>picker_type<sp/>&lt;<sp/>2;<sp/>picker_type++)</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>small/thumbnail<sp/>version<sp/>of<sp/>each<sp/>picker<sp/>type<sp/>(over<sp/>an<sp/>invisible<sp/>button<sp/>for<sp/>selection)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(picker_type<sp/>&gt;<sp/>0)<sp/>Separator();</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushID(picker_type);</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiColorEditFlags<sp/>picker_flags<sp/>=<sp/>ImGuiColorEditFlags_NoInputs<sp/>|<sp/>ImGuiColorEditFlags_NoOptions<sp/>|<sp/>ImGuiColorEditFlags_NoLabel<sp/>|<sp/>ImGuiColorEditFlags_NoSidePreview<sp/>|<sp/>(flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha);</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(picker_type<sp/>==<sp/>0)<sp/>picker_flags<sp/>|=<sp/>ImGuiColorEditFlags_PickerHueBar;</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(picker_type<sp/>==<sp/>1)<sp/>picker_flags<sp/>|=<sp/>ImGuiColorEditFlags_PickerHueWheel;</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>backup_pos<sp/>=<sp/>GetCursorScreenPos();</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Selectable(</highlight><highlight class="stringliteral">&quot;##selectable&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0,<sp/>picker_size))<sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Selectable()<sp/>is<sp/>closing<sp/>popup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ColorEditOptions<sp/>=<sp/>(g.ColorEditOptions<sp/>&amp;<sp/>~ImGuiColorEditFlags_PickerMask_)<sp/>|<sp/>(picker_flags<sp/>&amp;<sp/>ImGuiColorEditFlags_PickerMask_);</highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCursorScreenPos(backup_pos);</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>previewing_ref_col;</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;previewing_ref_col,<sp/>ref_col,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>((picker_flags<sp/>&amp;<sp/>ImGuiColorEditFlags_NoAlpha)<sp/>?<sp/>3<sp/>:<sp/>4));</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorPicker4(</highlight><highlight class="stringliteral">&quot;##previewing_picker&quot;</highlight><highlight class="normal">,<sp/>&amp;previewing_ref_col.x,<sp/>picker_flags);</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopItemWidth();</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_opt_alpha_bar)</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_opt_picker)<sp/>Separator();</highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckboxFlags(</highlight><highlight class="stringliteral">&quot;Alpha<sp/>Bar&quot;</highlight><highlight class="normal">,<sp/>&amp;g.ColorEditOptions,<sp/>ImGuiColorEditFlags_AlphaBar);</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><sp/>EndPopup();</highlight></codeline>
<codeline lineno="5745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"></highlight></codeline>
<codeline lineno="5747"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5748"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>TreeNode,<sp/>CollapsingHeader,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5749"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5750"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TreeNode()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5751"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TreeNodeV()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5752"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TreeNodeEx()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5753"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TreeNodeExV()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5754"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TreeNodeBehavior()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5755"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TreePush()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TreePop()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5757"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>GetTreeNodeToLabelSpacing()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5758"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SetNextItemOpen()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5759"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>CollapsingHeader()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5760"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5761"><highlight class="normal"></highlight></codeline>
<codeline lineno="5762"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="5763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open<sp/>=<sp/>TreeNodeExV(str_id,<sp/>0,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="5769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"></highlight></codeline>
<codeline lineno="5771"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="5772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open<sp/>=<sp/>TreeNodeExV(ptr_id,<sp/>0,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="5778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"></highlight></codeline>
<codeline lineno="5780"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label)</highlight></codeline>
<codeline lineno="5781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TreeNodeBehavior(window-&gt;GetID(label),<sp/>0,<sp/>label,<sp/>NULL);</highlight></codeline>
<codeline lineno="5786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"></highlight></codeline>
<codeline lineno="5788"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNodeV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="5789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TreeNodeExV(str_id,<sp/>0,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="5791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"></highlight></codeline>
<codeline lineno="5793"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNodeV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="5794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TreeNodeExV(ptr_id,<sp/>0,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="5796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"></highlight></codeline>
<codeline lineno="5798"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNodeEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiTreeNodeFlags<sp/>flags)</highlight></codeline>
<codeline lineno="5799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"></highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TreeNodeBehavior(window-&gt;GetID(label),<sp/>flags,<sp/>label,<sp/>NULL);</highlight></codeline>
<codeline lineno="5805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"></highlight></codeline>
<codeline lineno="5807"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNodeEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/>ImGuiTreeNodeFlags<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="5808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open<sp/>=<sp/>TreeNodeExV(str_id,<sp/>flags,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="5814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"></highlight></codeline>
<codeline lineno="5816"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNodeEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr_id,<sp/>ImGuiTreeNodeFlags<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="5817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open<sp/>=<sp/>TreeNodeExV(ptr_id,<sp/>flags,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="5823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"></highlight></codeline>
<codeline lineno="5825"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNodeExV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/>ImGuiTreeNodeFlags<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="5826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"></highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_end<sp/>=<sp/>g.TempBuffer<sp/>+<sp/>ImFormatStringV(g.TempBuffer,<sp/>IM_ARRAYSIZE(g.TempBuffer),<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TreeNodeBehavior(window-&gt;GetID(str_id),<sp/>flags,<sp/>g.TempBuffer,<sp/>label_end);</highlight></codeline>
<codeline lineno="5834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"></highlight></codeline>
<codeline lineno="5836"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNodeExV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr_id,<sp/>ImGuiTreeNodeFlags<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="5837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"></highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_end<sp/>=<sp/>g.TempBuffer<sp/>+<sp/>ImFormatStringV(g.TempBuffer,<sp/>IM_ARRAYSIZE(g.TempBuffer),<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TreeNodeBehavior(window-&gt;GetID(ptr_id),<sp/>flags,<sp/>g.TempBuffer,<sp/>label_end);</highlight></codeline>
<codeline lineno="5845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"></highlight></codeline>
<codeline lineno="5847"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNodeBehaviorIsOpen(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiTreeNodeFlags<sp/>flags)</highlight></codeline>
<codeline lineno="5848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Leaf)</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"></highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>write<sp/>to<sp/>the<sp/>tree<sp/>storage<sp/>if<sp/>the<sp/>user<sp/>clicks<sp/>(or<sp/>explicitly<sp/>use<sp/>the<sp/>SetNextItemOpen<sp/>function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_storage" kindref="compound">ImGuiStorage</ref>*<sp/>storage<sp/>=<sp/>window-&gt;DC.StateStorage;</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"></highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NextItemData.Flags<sp/>&amp;<sp/>ImGuiNextItemDataFlags_HasOpen)</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NextItemData.OpenCond<sp/>&amp;<sp/>ImGuiCond_Always)</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_open<sp/>=<sp/>g.NextItemData.OpenVal;</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage-&gt;SetInt(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>is_open);</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>treat<sp/>ImGuiCond_Once<sp/>and<sp/>ImGuiCond_FirstUseEver<sp/>the<sp/>same<sp/>because<sp/>tree<sp/>node<sp/>state<sp/>are<sp/>not<sp/>saved<sp/>persistently.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stored_value<sp/>=<sp/>storage-&gt;GetInt(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>-1);</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stored_value<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_open<sp/>=<sp/>g.NextItemData.OpenVal;</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage-&gt;SetInt(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>is_open);</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_open<sp/>=<sp/>stored_value<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_open<sp/>=<sp/>storage-&gt;GetInt(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_DefaultOpen)<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"></highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>logging<sp/>is<sp/>enabled,<sp/>we<sp/>automatically<sp/>expand<sp/>tree<sp/>nodes<sp/>(but<sp/>*NOT*<sp/>collapsing<sp/>headers..<sp/>seems<sp/>like<sp/>sensible<sp/>behavior).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB-<sp/>If<sp/>we<sp/>are<sp/>above<sp/>max<sp/>depth<sp/>we<sp/>still<sp/>allow<sp/>manually<sp/>opened<sp/>nodes<sp/>to<sp/>be<sp/>logged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_NoAutoOpenOnLog)<sp/>&amp;&amp;<sp/>(window-&gt;DC.TreeDepth<sp/>-<sp/>g.LogDepthRef)<sp/>&lt;<sp/>g.LogDepthToExpand)</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_open<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"></highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="5891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"></highlight></codeline>
<codeline lineno="5893"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TreeNodeBehavior(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiTreeNodeFlags<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_end)</highlight></codeline>
<codeline lineno="5894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"></highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>display_frame<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Framed)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>padding<sp/>=<sp/>(display_frame<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_FramePadding))<sp/>?<sp/>style.FramePadding<sp/>:<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(style.FramePadding.x,<sp/>ImMin(window-&gt;DC.CurrLineTextBaseOffset,<sp/>style.FramePadding.y));</highlight></codeline>
<codeline lineno="5903"><highlight class="normal"></highlight></codeline>
<codeline lineno="5904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!label_end)</highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label_end<sp/>=<sp/>FindRenderedTextEnd(label);</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>label_end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"></highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>vertically<sp/>grow<sp/>up<sp/>to<sp/>current<sp/>line<sp/>height<sp/>up<sp/>the<sp/>typical<sp/>widget<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>frame_height<sp/>=<sp/>ImMax(ImMin(window-&gt;DC.CurrLineSize.y,<sp/>g.FontSize<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2),<sp/>label_size.y<sp/>+<sp/>padding.y<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>frame_bb;</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_bb.Min.x<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_SpanFullWidth)<sp/>?<sp/>window-&gt;WorkRect.Min.x<sp/>:<sp/>window-&gt;DC.CursorPos.x;</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_bb.Min.y<sp/>=<sp/>window-&gt;DC.CursorPos.y;</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_bb.Max.x<sp/>=<sp/>window-&gt;WorkRect.Max.x;</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/>frame_bb.Max.y<sp/>=<sp/>window-&gt;DC.CursorPos.y<sp/>+<sp/>frame_height;</highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(display_frame)</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Framed<sp/>header<sp/>expand<sp/>a<sp/>little<sp/>outside<sp/>the<sp/>default<sp/>padding,<sp/>to<sp/>the<sp/>edge<sp/>of<sp/>InnerClipRect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(FIXME:<sp/>May<sp/>remove<sp/>this<sp/>at<sp/>some<sp/>point<sp/>and<sp/>make<sp/>InnerClipRect<sp/>align<sp/>with<sp/>WindowPadding.x<sp/>instead<sp/>of<sp/>WindowPadding.x*0.5f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_bb.Min.x<sp/>-=<sp/>IM_FLOOR(window-&gt;WindowPadding.x<sp/>*<sp/>0.5f<sp/>-<sp/>1.0f);</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_bb.Max.x<sp/>+=<sp/>IM_FLOOR(window-&gt;WindowPadding.x<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"></highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>text_offset_x<sp/>=<sp/>g.FontSize<sp/>+<sp/>(display_frame<sp/>?<sp/>padding.x<sp/>*<sp/>3<sp/>:<sp/>padding.x<sp/>*<sp/>2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Collapser<sp/>arrow<sp/>width<sp/>+<sp/>Spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>text_offset_y<sp/>=<sp/>ImMax(padding.y,<sp/>window-&gt;DC.CurrLineTextBaseOffset);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Latch<sp/>before<sp/>ItemSize<sp/>changes<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>text_width<sp/>=<sp/>g.FontSize<sp/>+<sp/>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>label_size.x<sp/>+<sp/>padding.x<sp/>*<sp/>2<sp/>:<sp/>0.0f);<sp/><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>collapser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_pos(window-&gt;DC.CursorPos.x<sp/>+<sp/>text_offset_x,<sp/>window-&gt;DC.CursorPos.y<sp/>+<sp/>text_offset_y);</highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(text_width,<sp/>frame_height),<sp/>padding.y);</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"></highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>regular<sp/>tree<sp/>nodes,<sp/>we<sp/>arbitrary<sp/>allow<sp/>to<sp/>click<sp/>past<sp/>2<sp/>worth<sp/>of<sp/>ItemSpacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5930"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>interact_bb<sp/>=<sp/>frame_bb;</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!display_frame<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>(ImGuiTreeNodeFlags_SpanAvailWidth<sp/>|<sp/>ImGuiTreeNodeFlags_SpanFullWidth))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interact_bb.Max.x<sp/>=<sp/>frame_bb.Min.x<sp/>+<sp/>text_width<sp/>+<sp/>style.ItemSpacing.x<sp/>*<sp/>2.0f;</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"></highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>a<sp/>flag<sp/>for<sp/>the<sp/>current<sp/>depth<sp/>to<sp/>tell<sp/>if<sp/>we<sp/>will<sp/>allow<sp/>closing<sp/>this<sp/>node<sp/>when<sp/>navigating<sp/>one<sp/>of<sp/>its<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>this<sp/>purpose<sp/>we<sp/>essentially<sp/>compare<sp/>if<sp/>g.NavIdIsAlive<sp/>went<sp/>from<sp/>0<sp/>to<sp/>1<sp/>between<sp/>TreeNode()<sp/>and<sp/>TreePop().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>currently<sp/>only<sp/>support<sp/>32<sp/>level<sp/>deep<sp/>and<sp/>we<sp/>are<sp/>fine<sp/>with<sp/>(1<sp/>&lt;&lt;<sp/>Depth)<sp/>overflowing<sp/>into<sp/>a<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_leaf<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Leaf)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open<sp/>=<sp/>TreeNodeBehaviorIsOpen(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>flags);</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_open<sp/>&amp;&amp;<sp/>!g.NavIdIsAlive<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_NavLeftJumpsBackHere)<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_NoTreePushOnOpen))</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.TreeJumpToParentOnPopMask<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>window-&gt;DC.TreeDepth);</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"></highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>item_add<sp/>=<sp/>ItemAdd(interact_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/>g.LastItemData.StatusFlags<sp/>|=<sp/>ImGuiItemStatusFlags_HasDisplayRect;</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/><sp/><sp/>g.LastItemData.DisplayRect<sp/>=<sp/>frame_bb;</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"></highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item_add)</highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_open<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_NoTreePushOnOpen))</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreePushOverrideID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(g.LastItemData.ID,<sp/>label,<sp/>g.LastItemData.StatusFlags<sp/>|<sp/>(is_leaf<sp/>?<sp/>0<sp/>:<sp/>ImGuiItemStatusFlags_Openable)<sp/>|<sp/>(is_open<sp/>?<sp/>ImGuiItemStatusFlags_Opened<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"></highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags<sp/>button_flags<sp/>=<sp/>ImGuiTreeNodeFlags_None;</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_AllowItemOverlap)</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_AllowItemOverlap;</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_leaf)</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnDragDropHold;</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"></highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>allow<sp/>clicking<sp/>on<sp/>the<sp/>arrow<sp/>section<sp/>with<sp/>keyboard<sp/>modifiers<sp/>held,<sp/>in<sp/>order<sp/>to<sp/>easily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>browsing<sp/>a<sp/>tree<sp/>while<sp/>preserving<sp/>selection<sp/>with<sp/>code<sp/>implementing<sp/>multi-selection<sp/>patterns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>clicking<sp/>on<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>tree<sp/>node<sp/>we<sp/>always<sp/>disallow<sp/>keyboard<sp/>modifiers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arrow_hit_x1<sp/>=<sp/>(text_pos.x<sp/>-<sp/>text_offset_x)<sp/>-<sp/>style.TouchExtraPadding.x;</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arrow_hit_x2<sp/>=<sp/>(text_pos.x<sp/>-<sp/>text_offset_x)<sp/>+<sp/>(g.FontSize<sp/>+<sp/>padding.x<sp/>*<sp/>2.0f)<sp/>+<sp/>style.TouchExtraPadding.x;</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_mouse_x_over_arrow<sp/>=<sp/>(g.IO.MousePos.x<sp/>&gt;=<sp/>arrow_hit_x1<sp/>&amp;&amp;<sp/>g.IO.MousePos.x<sp/>&lt;<sp/>arrow_hit_x2);</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>!=<sp/>g.HoveredWindow<sp/>||<sp/>!is_mouse_x_over_arrow)</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_NoKeyModifiers;</highlight></codeline>
<codeline lineno="5968"><highlight class="normal"></highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>behaviors<sp/>can<sp/>be<sp/>altered<sp/>with<sp/>the<sp/>_OpenOnArrow<sp/>and<sp/>_OnOnDoubleClick<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>alteration<sp/>have<sp/>subtle<sp/>effects<sp/>(e.g.<sp/>toggle<sp/>on<sp/>MouseUp<sp/>vs<sp/>MouseDown<sp/>events)<sp/>due<sp/>to<sp/>requirements<sp/>for<sp/>multi-selection<sp/>and<sp/>drag<sp/>and<sp/>drop<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Single-click<sp/>on<sp/>label<sp/>=<sp/>Toggle<sp/>on<sp/>MouseUp<sp/>(default,<sp/>when<sp/>_OpenOnArrow=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Single-click<sp/>on<sp/>arrow<sp/>=<sp/>Toggle<sp/>on<sp/>MouseDown<sp/>(when<sp/>_OpenOnArrow=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Single-click<sp/>on<sp/>arrow<sp/>=<sp/>Toggle<sp/>on<sp/>MouseDown<sp/>(when<sp/>_OpenOnArrow=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Double-click<sp/>on<sp/>label<sp/>=<sp/>Toggle<sp/>on<sp/>MouseDoubleClick<sp/>(when<sp/>_OpenOnDoubleClick=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Double-click<sp/>on<sp/>arrow<sp/>=<sp/>Toggle<sp/>on<sp/>MouseDoubleClick<sp/>(when<sp/>_OpenOnDoubleClick=1<sp/>and<sp/>_OpenOnArrow=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>rather<sp/>standard<sp/>that<sp/>arrow<sp/>click<sp/>react<sp/>on<sp/>Down<sp/>rather<sp/>than<sp/>Up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>set<sp/>ImGuiButtonFlags_PressedOnClickRelease<sp/>on<sp/>OpenOnDoubleClick<sp/>because<sp/>we<sp/>want<sp/>the<sp/>item<sp/>to<sp/>be<sp/>active<sp/>on<sp/>the<sp/>initial<sp/>MouseDown<sp/>in<sp/>order<sp/>for<sp/>drag<sp/>and<sp/>drop<sp/>to<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_mouse_x_over_arrow)</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnClick;</highlight></codeline>
<codeline lineno="5980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_OpenOnDoubleClick)</highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnClickRelease<sp/>|<sp/>ImGuiButtonFlags_PressedOnDoubleClick;</highlight></codeline>
<codeline lineno="5982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnClickRelease;</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"></highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Selected)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>was_selected<sp/>=<sp/>selected;</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"></highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(interact_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held,<sp/>button_flags);</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>toggled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_leaf)</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed<sp/>&amp;&amp;<sp/>g.DragDropHoldJustPressedId<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>(ImGuiTreeNodeFlags_OpenOnArrow<sp/>|<sp/>ImGuiTreeNodeFlags_OpenOnDoubleClick))<sp/>==<sp/>0<sp/>||<sp/>(g.NavActivateId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_OpenOnArrow)</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>|=<sp/>is_mouse_x_over_arrow<sp/>&amp;&amp;<sp/>!g.NavDisableMouseHover;<sp/></highlight><highlight class="comment">//<sp/>Lightweight<sp/>equivalent<sp/>of<sp/>IsMouseHoveringRect()<sp/>since<sp/>ButtonBehavior()<sp/>already<sp/>did<sp/>the<sp/>job</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_OpenOnDoubleClick)<sp/>&amp;&amp;<sp/>g.IO.MouseClickedCount[0]<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed<sp/>&amp;&amp;<sp/>g.DragDropHoldJustPressedId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(button_flags<sp/>&amp;<sp/>ImGuiButtonFlags_PressedOnDragDropHold);</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_open)<sp/></highlight><highlight class="comment">//<sp/>When<sp/>using<sp/>Drag<sp/>and<sp/>Drop<sp/>&quot;hold<sp/>to<sp/>open&quot;<sp/>we<sp/>keep<sp/>the<sp/>node<sp/>highlighted<sp/>after<sp/>opening,<sp/>but<sp/>never<sp/>close<sp/>it<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"></highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.NavMoveDir<sp/>==<sp/>ImGuiDir_Left<sp/>&amp;&amp;<sp/>is_open)</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestCancel();</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.NavMoveDir<sp/>==<sp/>ImGuiDir_Right<sp/>&amp;&amp;<sp/>!is_open)<sp/></highlight><highlight class="comment">//<sp/>If<sp/>there&apos;s<sp/>something<sp/>upcoming<sp/>on<sp/>the<sp/>line<sp/>we<sp/>may<sp/>want<sp/>to<sp/>give<sp/>it<sp/>the<sp/>priority?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestCancel();</highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"></highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toggled)</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_open<sp/>=<sp/>!is_open;</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.StateStorage-&gt;SetInt(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>is_open);</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData.StatusFlags<sp/>|=<sp/>ImGuiItemStatusFlags_ToggledOpen;</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_AllowItemOverlap)</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetItemAllowOverlap();</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"></highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>branch,<sp/>TreeNodeBehavior()<sp/>cannot<sp/>toggle<sp/>the<sp/>selection<sp/>so<sp/>this<sp/>will<sp/>never<sp/>trigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected<sp/>!=<sp/>was_selected)<sp/></highlight><highlight class="comment">//-V547</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData.StatusFlags<sp/>|=<sp/>ImGuiItemStatusFlags_ToggledSelection;</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"></highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>text_col<sp/>=<sp/>GetColorU32(ImGuiCol_Text);</highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiNavHighlightFlags<sp/>nav_highlight_flags<sp/>=<sp/>ImGuiNavHighlightFlags_TypeThin;</highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display_frame)</highlight></codeline>
<codeline lineno="6038"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Framed<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>bg_col<sp/>=<sp/>GetColorU32((held<sp/>&amp;&amp;<sp/>hovered)<sp/>?<sp/>ImGuiCol_HeaderActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_HeaderHovered<sp/>:<sp/>ImGuiCol_Header);</highlight></codeline>
<codeline lineno="6041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderFrame(frame_bb.Min,<sp/>frame_bb.Max,<sp/>bg_col,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="6042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderNavHighlight(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>nav_highlight_flags);</highlight></codeline>
<codeline lineno="6043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Bullet)</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderBullet(window-&gt;DrawList,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(text_pos.x<sp/>-<sp/>text_offset_x<sp/>*<sp/>0.60f,<sp/>text_pos.y<sp/>+<sp/>g.FontSize<sp/>*<sp/>0.5f),<sp/>text_col);</highlight></codeline>
<codeline lineno="6045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_leaf)</highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrow(window-&gt;DrawList,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(text_pos.x<sp/>-<sp/>text_offset_x<sp/>+<sp/>padding.x,<sp/>text_pos.y),<sp/>text_col,<sp/>is_open<sp/>?<sp/>ImGuiDir_Down<sp/>:<sp/>ImGuiDir_Right,<sp/>1.0f);</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Leaf<sp/>without<sp/>bullet,<sp/>left-adjusted<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_pos.x<sp/>-=<sp/>text_offset_x;</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_ClipLabelForTrailingButton)</highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_bb.Max.x<sp/>-=<sp/>g.FontSize<sp/>+<sp/>style.FramePadding.x;</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"></highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled)</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSetNextTextDecoration(</highlight><highlight class="stringliteral">&quot;###&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;###&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTextClipped(text_pos,<sp/>frame_bb.Max,<sp/>label,<sp/>label_end,<sp/>&amp;label_size);</highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unframed<sp/>typed<sp/>for<sp/>tree<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered<sp/>||<sp/>selected)</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>bg_col<sp/>=<sp/>GetColorU32((held<sp/>&amp;&amp;<sp/>hovered)<sp/>?<sp/>ImGuiCol_HeaderActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_HeaderHovered<sp/>:<sp/>ImGuiCol_Header);</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderFrame(frame_bb.Min,<sp/>frame_bb.Max,<sp/>bg_col,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderNavHighlight(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>nav_highlight_flags);</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Bullet)</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderBullet(window-&gt;DrawList,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(text_pos.x<sp/>-<sp/>text_offset_x<sp/>*<sp/>0.5f,<sp/>text_pos.y<sp/>+<sp/>g.FontSize<sp/>*<sp/>0.5f),<sp/>text_col);</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_leaf)</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrow(window-&gt;DrawList,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(text_pos.x<sp/>-<sp/>text_offset_x<sp/>+<sp/>padding.x,<sp/>text_pos.y<sp/>+<sp/>g.FontSize<sp/>*<sp/>0.15f),<sp/>text_col,<sp/>is_open<sp/>?<sp/>ImGuiDir_Down<sp/>:<sp/>ImGuiDir_Right,<sp/>0.70f);</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.LogEnabled)</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSetNextTextDecoration(</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(text_pos,<sp/>label,<sp/>label_end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"></highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_open<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_NoTreePushOnOpen))</highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreePushOverrideID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags<sp/>|<sp/>(is_leaf<sp/>?<sp/>0<sp/>:<sp/>ImGuiItemStatusFlags_Openable)<sp/>|<sp/>(is_open<sp/>?<sp/>ImGuiItemStatusFlags_Opened<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="6078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"></highlight></codeline>
<codeline lineno="6080"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TreePush(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id)</highlight></codeline>
<codeline lineno="6081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/>Indent();</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.TreeDepth++;</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(str_id);</highlight></codeline>
<codeline lineno="6086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"></highlight></codeline>
<codeline lineno="6088"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TreePush(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr_id)</highlight></codeline>
<codeline lineno="6089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><sp/><sp/>Indent();</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.TreeDepth++;</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(ptr_id);</highlight></codeline>
<codeline lineno="6094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"></highlight></codeline>
<codeline lineno="6096"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TreePushOverrideID(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/><sp/><sp/>Indent();</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.TreeDepth++;</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/><sp/><sp/>PushOverrideID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6104"><highlight class="normal"></highlight></codeline>
<codeline lineno="6105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TreePop()</highlight></codeline>
<codeline lineno="6106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/><sp/><sp/>Unindent();</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"></highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.TreeDepth--;</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU32<sp/>tree_depth_mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>window-&gt;DC.TreeDepth);</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"></highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>Left<sp/>arrow<sp/>to<sp/>move<sp/>to<sp/>parent<sp/>tree<sp/>node<sp/>(when<sp/>ImGuiTreeNodeFlags_NavLeftJumpsBackHere<sp/>is<sp/>enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavMoveDir<sp/>==<sp/>ImGuiDir_Left<sp/>&amp;&amp;<sp/>g.NavWindow<sp/>==<sp/>window<sp/>&amp;&amp;<sp/>NavMoveRequestButNoResultYet())</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavIdIsAlive<sp/>&amp;&amp;<sp/>(window-&gt;DC.TreeJumpToParentOnPopMask<sp/>&amp;<sp/>tree_depth_mask))</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNavID(window-&gt;IDStack.back(),<sp/>g.NavLayer,<sp/>0,<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>());</highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestCancel();</highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.TreeJumpToParentOnPopMask<sp/>&amp;=<sp/>tree_depth_mask<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"></highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(window-&gt;IDStack.Size<sp/>&gt;<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>There<sp/>should<sp/>always<sp/>be<sp/>1<sp/>element<sp/>in<sp/>the<sp/>IDStack<sp/>(pushed<sp/>during<sp/>window<sp/>creation).<sp/>If<sp/>this<sp/>triggers<sp/>you<sp/>called<sp/>TreePop/PopID<sp/>too<sp/>much.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="6125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"></highlight></codeline>
<codeline lineno="6127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Horizontal<sp/>distance<sp/>preceding<sp/>label<sp/>when<sp/>using<sp/>TreeNode()<sp/>or<sp/>Bullet()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6128"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ImGui::GetTreeNodeToLabelSpacing()</highlight></codeline>
<codeline lineno="6129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.FontSize<sp/>+<sp/>(g.Style.FramePadding.x<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="6132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"></highlight></codeline>
<codeline lineno="6134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>next<sp/>TreeNode/CollapsingHeader<sp/>open<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::SetNextItemOpen(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open,<sp/>ImGuiCond<sp/>cond)</highlight></codeline>
<codeline lineno="6136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.CurrentWindow-&gt;SkipItems)</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/><sp/><sp/>g.NextItemData.Flags<sp/>|=<sp/>ImGuiNextItemDataFlags_HasOpen;</highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/><sp/><sp/>g.NextItemData.OpenVal<sp/>=<sp/>is_open;</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/><sp/><sp/>g.NextItemData.OpenCond<sp/>=<sp/>cond<sp/>?<sp/>cond<sp/>:<sp/>ImGuiCond_Always;</highlight></codeline>
<codeline lineno="6143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"></highlight></codeline>
<codeline lineno="6145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CollapsingHeader<sp/>returns<sp/>true<sp/>when<sp/>opened<sp/>but<sp/>do<sp/>not<sp/>indent<sp/>nor<sp/>push<sp/>into<sp/>the<sp/>ID<sp/>stack<sp/>(because<sp/>of<sp/>the<sp/>ImGuiTreeNodeFlags_NoTreePushOnOpen<sp/>flag).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>basically<sp/>the<sp/>same<sp/>as<sp/>calling<sp/>TreeNodeEx(label,<sp/>ImGuiTreeNodeFlags_CollapsingHeader).<sp/>You<sp/>can<sp/>remove<sp/>the<sp/>_NoTreePushOnOpen<sp/>flag<sp/>if<sp/>you<sp/>want<sp/>behavior<sp/>closer<sp/>to<sp/>normal<sp/>TreeNode().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6147"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::CollapsingHeader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiTreeNodeFlags<sp/>flags)</highlight></codeline>
<codeline lineno="6148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="6150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6152"><highlight class="normal"></highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TreeNodeBehavior(window-&gt;GetID(label),<sp/>flags<sp/>|<sp/>ImGuiTreeNodeFlags_CollapsingHeader,<sp/>label);</highlight></codeline>
<codeline lineno="6154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"></highlight></codeline>
<codeline lineno="6156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>p_visible<sp/>==<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>regular<sp/>collapsing<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>p_visible<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>*p_visible<sp/>==<sp/>true<sp/><sp/>:<sp/>show<sp/>a<sp/>small<sp/>close<sp/>button<sp/>on<sp/>the<sp/>corner<sp/>of<sp/>the<sp/>header,<sp/>clicking<sp/>the<sp/>button<sp/>will<sp/>set<sp/>*p_visible<sp/>=<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>p_visible<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>*p_visible<sp/>==<sp/>false<sp/>:<sp/>do<sp/>not<sp/>show<sp/>the<sp/>header<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>mistake<sp/>this<sp/>with<sp/>the<sp/>Open<sp/>state<sp/>of<sp/>the<sp/>header<sp/>itself,<sp/>which<sp/>you<sp/>can<sp/>adjust<sp/>with<sp/>SetNextItemOpen()<sp/>or<sp/>ImGuiTreeNodeFlags_DefaultOpen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6160"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::CollapsingHeader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>p_visible,<sp/>ImGuiTreeNodeFlags<sp/>flags)</highlight></codeline>
<codeline lineno="6161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="6164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"></highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_visible<sp/>&amp;&amp;<sp/>!*p_visible)</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6168"><highlight class="normal"></highlight></codeline>
<codeline lineno="6169"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiTreeNodeFlags_CollapsingHeader;</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_visible)</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiTreeNodeFlags_AllowItemOverlap<sp/>|<sp/>ImGuiTreeNodeFlags_ClipLabelForTrailingButton;</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open<sp/>=<sp/>TreeNodeBehavior(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>flags,<sp/>label);</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_visible<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>small<sp/>overlapping<sp/>close<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>can<sp/>evolve<sp/>this<sp/>into<sp/>user<sp/>accessible<sp/>helpers<sp/>to<sp/>add<sp/>extra<sp/>buttons<sp/>on<sp/>title<sp/>bars,<sp/>headers,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>CloseButton<sp/>can<sp/>overlap<sp/>into<sp/>text,<sp/>need<sp/>find<sp/>a<sp/>way<sp/>to<sp/>clip<sp/>the<sp/>text<sp/>somehow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_last_item_data" kindref="compound">ImGuiLastItemData</ref><sp/>last_item_backup<sp/>=<sp/>g.LastItemData;</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>button_size<sp/>=<sp/>g.FontSize;</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>button_x<sp/>=<sp/>ImMax(g.LastItemData.Rect.Min.x,<sp/>g.LastItemData.Rect.Max.x<sp/>-<sp/>g.Style.FramePadding.x<sp/>*<sp/>2.0f<sp/>-<sp/>button_size);</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>button_y<sp/>=<sp/>g.LastItemData.Rect.Min.y;</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiID<sp/>close_button_id<sp/>=<sp/>GetIDWithSeed(</highlight><highlight class="stringliteral">&quot;#CLOSE&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CloseButton(close_button_id,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(button_x,<sp/>button_y)))</highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_visible<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData<sp/>=<sp/>last_item_backup;</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"></highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="6191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"></highlight></codeline>
<codeline lineno="6193"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Selectable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6195"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Selectable()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6197"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6198"><highlight class="normal"></highlight></codeline>
<codeline lineno="6199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tip:<sp/>pass<sp/>a<sp/>non-visible<sp/>label<sp/>(e.g.<sp/>&quot;##hello&quot;)<sp/>then<sp/>you<sp/>can<sp/>use<sp/>the<sp/>space<sp/>to<sp/>draw<sp/>other<sp/>text<sp/>or<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>But<sp/>you<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>ID<sp/>is<sp/>unique,<sp/>e.g.<sp/>enclose<sp/>calls<sp/>in<sp/>PushID/PopID<sp/>or<sp/>use<sp/>##unique_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>With<sp/>this<sp/>scheme,<sp/>ImGuiSelectableFlags_SpanAllColumns<sp/>and<sp/>ImGuiSelectableFlags_AllowItemOverlap<sp/>are<sp/>also<sp/>frequently<sp/>used<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Selectable()<sp/>with<sp/>(size.x<sp/>==<sp/>0.0f)<sp/>and<sp/>(SelectableTextAlign.x<sp/>&gt;<sp/>0.0f)<sp/>followed<sp/>by<sp/>SameLine()<sp/>is<sp/>currently<sp/>not<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6203"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::Selectable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected,<sp/>ImGuiSelectableFlags<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg)</highlight></codeline>
<codeline lineno="6204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"></highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"></highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Submit<sp/>label<sp/>or<sp/>explicit<sp/>size<sp/>to<sp/>ItemSize(),<sp/>whereas<sp/>ItemAdd()<sp/>will<sp/>submit<sp/>a<sp/>larger/spanning<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size(size_arg.x<sp/>!=<sp/>0.0f<sp/>?<sp/>size_arg.x<sp/>:<sp/>label_size.x,<sp/>size_arg.y<sp/>!=<sp/>0.0f<sp/>?<sp/>size_arg.y<sp/>:<sp/>label_size.y);</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/>pos.y<sp/>+=<sp/>window-&gt;DC.CurrLineTextBaseOffset;</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(size,<sp/>0.0f);</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"></highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>horizontal<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>support<sp/>(size<sp/>&lt;<sp/>0.0f)<sp/>in<sp/>Selectable()<sp/>because<sp/>the<sp/>ItemSpacing<sp/>extension<sp/>would<sp/>make<sp/>explicitly<sp/>right-aligned<sp/>sizes<sp/>not<sp/>visibly<sp/>match<sp/>other<sp/>widgets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>span_all_columns<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_SpanAllColumns)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_x<sp/>=<sp/>span_all_columns<sp/>?<sp/>window-&gt;ParentWorkRect.Min.x<sp/>:<sp/>pos.x;</highlight></codeline>
<codeline lineno="6224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_x<sp/>=<sp/>span_all_columns<sp/>?<sp/>window-&gt;ParentWorkRect.Max.x<sp/>:<sp/>window-&gt;WorkRect.Max.x;</highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_arg.x<sp/>==<sp/>0.0f<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_SpanAvailWidth))</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.x<sp/>=<sp/>ImMax(label_size.x,<sp/>max_x<sp/>-<sp/>min_x);</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"></highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>stays<sp/>at<sp/>the<sp/>submission<sp/>position,<sp/>but<sp/>bounding<sp/>box<sp/>may<sp/>be<sp/>extended<sp/>on<sp/>both<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_min<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_max(min_x<sp/>+<sp/>size.x,<sp/>pos.y<sp/>+<sp/>size.y);</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"></highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Selectables<sp/>are<sp/>meant<sp/>to<sp/>be<sp/>tightly<sp/>packed<sp/>together<sp/>with<sp/>no<sp/>click-gap,<sp/>so<sp/>we<sp/>extend<sp/>their<sp/>box<sp/>to<sp/>cover<sp/>spacing<sp/>between<sp/>selectable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(min_x,<sp/>pos.y,<sp/>text_max.x,<sp/>text_max.y);</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiSelectableFlags_NoPadWithHalfSpacing)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spacing_x<sp/>=<sp/>span_all_columns<sp/>?<sp/>0.0f<sp/>:<sp/>style.ItemSpacing.x;</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spacing_y<sp/>=<sp/>style.ItemSpacing.y;</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spacing_L<sp/>=<sp/>IM_FLOOR(spacing_x<sp/>*<sp/>0.50f);</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spacing_U<sp/>=<sp/>IM_FLOOR(spacing_y<sp/>*<sp/>0.50f);</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.Min.x<sp/>-=<sp/>spacing_L;</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.Min.y<sp/>-=<sp/>spacing_U;</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.Max.x<sp/>+=<sp/>(spacing_x<sp/>-<sp/>spacing_L);</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.Max.y<sp/>+=<sp/>(spacing_y<sp/>-<sp/>spacing_U);</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(g.IO.KeyCtrl)<sp/>{<sp/>GetForegroundDrawList()-&gt;AddRect(bb.Min,<sp/>bb.Max,<sp/>IM_COL32(0,<sp/>255,<sp/>0,<sp/>255));<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6246"><highlight class="normal"></highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Modify<sp/>ClipRect<sp/>for<sp/>the<sp/>ItemAdd(),<sp/>faster<sp/>than<sp/>doing<sp/>a<sp/>PushColumnsBackground/PushTableBackground<sp/>for<sp/>every<sp/>Selectable..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>backup_clip_rect_min_x<sp/>=<sp/>window-&gt;ClipRect.Min.x;</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>backup_clip_rect_max_x<sp/>=<sp/>window-&gt;ClipRect.Max.x;</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(span_all_columns)</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;ClipRect.Min.x<sp/>=<sp/>window-&gt;ParentWorkRect.Min.x;</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;ClipRect.Max.x<sp/>=<sp/>window-&gt;ParentWorkRect.Max.x;</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"></highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disabled_item<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_Disabled)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>item_add<sp/>=<sp/>ItemAdd(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>NULL,<sp/>disabled_item<sp/>?<sp/>ImGuiItemFlags_Disabled<sp/>:<sp/>ImGuiItemFlags_None);</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(span_all_columns)</highlight></codeline>
<codeline lineno="6259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;ClipRect.Min.x<sp/>=<sp/>backup_clip_rect_min_x;</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;ClipRect.Max.x<sp/>=<sp/>backup_clip_rect_max_x;</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6263"><highlight class="normal"></highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item_add)</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"></highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disabled_global<sp/>=<sp/>(g.CurrentItemFlags<sp/>&amp;<sp/>ImGuiItemFlags_Disabled)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disabled_item<sp/>&amp;&amp;<sp/>!disabled_global)<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>testing<sp/>this<sp/>as<sp/>an<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginDisabled();</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"></highlight></codeline>
<codeline lineno="6271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>can<sp/>standardize<sp/>the<sp/>behavior<sp/>of<sp/>those<sp/>two,<sp/>we<sp/>could<sp/>also<sp/>keep<sp/>the<sp/>fast<sp/>path<sp/>of<sp/>override<sp/>ClipRect<sp/>+<sp/>full<sp/>push<sp/>on<sp/>render<sp/>only,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>would<sp/>be<sp/>advantageous<sp/>since<sp/>most<sp/>selectable<sp/>are<sp/>not<sp/>selected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(span_all_columns<sp/>&amp;&amp;<sp/>window-&gt;DC.CurrentColumns)</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushColumnsBackground();</highlight></codeline>
<codeline lineno="6275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(span_all_columns<sp/>&amp;&amp;<sp/>g.CurrentTable)</highlight></codeline>
<codeline lineno="6276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TablePushBackgroundChannel();</highlight></codeline>
<codeline lineno="6277"><highlight class="normal"></highlight></codeline>
<codeline lineno="6278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>NoHoldingActiveID<sp/>on<sp/>menus<sp/>so<sp/>user<sp/>can<sp/>click<sp/>and<sp/>_hold_<sp/>on<sp/>a<sp/>menu<sp/>then<sp/>drag<sp/>to<sp/>browse<sp/>child<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags<sp/>button_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_NoHoldingActiveID)<sp/>{<sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_NoHoldingActiveId;<sp/>}</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_SelectOnClick)<sp/><sp/><sp/><sp/><sp/>{<sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnClick;<sp/>}</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_SelectOnRelease)<sp/><sp/><sp/>{<sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnRelease;<sp/>}</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_AllowDoubleClick)<sp/><sp/>{<sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnClickRelease<sp/>|<sp/>ImGuiButtonFlags_PressedOnDoubleClick;<sp/>}</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_AllowItemOverlap)<sp/><sp/>{<sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_AllowItemOverlap;<sp/>}</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"></highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>was_selected<sp/>=<sp/>selected;</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held,<sp/>button_flags);</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"></highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Auto-select<sp/>when<sp/>moved<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>will<sp/>be<sp/>more<sp/>fully<sp/>fleshed<sp/>in<sp/>the<sp/>range-select<sp/>branch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>is<sp/>not<sp/>exposed<sp/>as<sp/>it<sp/>won&apos;t<sp/>nicely<sp/>work<sp/>with<sp/>some<sp/>user<sp/>side<sp/>handling<sp/>of<sp/>shift/control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>cannot<sp/>do<sp/>&apos;if<sp/>(g.NavJustMovedToId<sp/>!=<sp/>id)<sp/>{<sp/>selected<sp/>=<sp/>false;<sp/>pressed<sp/>=<sp/>was_selected;<sp/>}&apos;<sp/>for<sp/>two<sp/>reasons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>(1)<sp/>it<sp/>would<sp/>require<sp/>focus<sp/>scope<sp/>to<sp/>be<sp/>set,<sp/>need<sp/>exposing<sp/>PushFocusScope()<sp/>or<sp/>equivalent<sp/>(e.g.<sp/>BeginSelection()<sp/>calling<sp/>PushFocusScope())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>(2)<sp/>usage<sp/>will<sp/>fail<sp/>with<sp/>clipped<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>The<sp/>multi-select<sp/>API<sp/>aim<sp/>to<sp/>fix<sp/>those<sp/>issues,<sp/>e.g.<sp/>may<sp/>be<sp/>replaced<sp/>with<sp/>a<sp/>BeginSelection()<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiSelectableFlags_SelectOnNav)<sp/>&amp;&amp;<sp/>g.NavJustMovedToId<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>g.NavJustMovedToFocusScopeId<sp/>==<sp/>window-&gt;DC.NavFocusScopeIdCurrent)</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavJustMovedToId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected<sp/>=<sp/>pressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"></highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>NavId<sp/>when<sp/>clicking<sp/>or<sp/>when<sp/>Hovering<sp/>(this<sp/>doesn&apos;t<sp/>happen<sp/>on<sp/>most<sp/>widgets),<sp/>so<sp/>navigation<sp/>can<sp/>be<sp/>resumed<sp/>with<sp/>gamepad/keyboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed<sp/>||<sp/>(hovered<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_SetNavIdOnHover)))</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g.NavDisableMouseHover<sp/>&amp;&amp;<sp/>g.NavWindow<sp/>==<sp/>window<sp/>&amp;&amp;<sp/>g.NavLayer<sp/>==<sp/>window-&gt;DC.NavLayerCurrent)</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNavID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>window-&gt;DC.NavLayerCurrent,<sp/>window-&gt;DC.NavFocusScopeIdCurrent,<sp/>WindowRectAbsToRel(window,<sp/>bb));<sp/></highlight><highlight class="comment">//<sp/>(bb<sp/>==<sp/>NavRect)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavDisableHighlight<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed)</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"></highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_AllowItemOverlap)</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetItemAllowOverlap();</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"></highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>branch,<sp/>Selectable()<sp/>cannot<sp/>toggle<sp/>the<sp/>selection<sp/>so<sp/>this<sp/>will<sp/>never<sp/>trigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected<sp/>!=<sp/>was_selected)<sp/></highlight><highlight class="comment">//-V547</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData.StatusFlags<sp/>|=<sp/>ImGuiItemStatusFlags_ToggledSelection;</highlight></codeline>
<codeline lineno="6319"><highlight class="normal"></highlight></codeline>
<codeline lineno="6320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(held<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_DrawHoveredWhenHeld))</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hovered<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered<sp/>||<sp/>selected)</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col<sp/>=<sp/>GetColorU32((held<sp/>&amp;&amp;<sp/>hovered)<sp/>?<sp/>ImGuiCol_HeaderActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_HeaderHovered<sp/>:<sp/>ImGuiCol_Header);</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderFrame(bb.Min,<sp/>bb.Max,<sp/>col,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0f);</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiNavHighlightFlags_TypeThin<sp/>|<sp/>ImGuiNavHighlightFlags_NoRounding);</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"></highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(span_all_columns<sp/>&amp;&amp;<sp/>window-&gt;DC.CurrentColumns)</highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopColumnsBackground();</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(span_all_columns<sp/>&amp;&amp;<sp/>g.CurrentTable)</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TablePopBackgroundChannel();</highlight></codeline>
<codeline lineno="6334"><highlight class="normal"></highlight></codeline>
<codeline lineno="6335"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderTextClipped(text_min,<sp/>text_max,<sp/>label,<sp/>NULL,<sp/>&amp;label_size,<sp/>style.SelectableTextAlign,<sp/>&amp;bb);</highlight></codeline>
<codeline lineno="6336"><highlight class="normal"></highlight></codeline>
<codeline lineno="6337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Automatically<sp/>close<sp/>popups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed<sp/>&amp;&amp;<sp/>(window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_Popup)<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiSelectableFlags_DontClosePopups)<sp/>&amp;&amp;<sp/>!(g.LastItemData.InFlags<sp/>&amp;<sp/>ImGuiItemFlags_SelectableDontClosePopup))</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseCurrentPopup();</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"></highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disabled_item<sp/>&amp;&amp;<sp/>!disabled_global)</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndDisabled();</highlight></codeline>
<codeline lineno="6343"><highlight class="normal"></highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags);</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;<sp/></highlight><highlight class="comment">//-V1020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"></highlight></codeline>
<codeline lineno="6348"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::Selectable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>p_selected,<sp/>ImGuiSelectableFlags<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg)</highlight></codeline>
<codeline lineno="6349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Selectable(label,<sp/>*p_selected,<sp/>flags,<sp/>size_arg))</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_selected<sp/>=<sp/>!*p_selected;</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"></highlight></codeline>
<codeline lineno="6358"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>ListBox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6360"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BeginListBox()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6362"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>EndListBox()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ListBox()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6364"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6365"><highlight class="normal"></highlight></codeline>
<codeline lineno="6366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tip:<sp/>To<sp/>have<sp/>a<sp/>list<sp/>filling<sp/>the<sp/>entire<sp/>window<sp/>width,<sp/>use<sp/>size.x<sp/>=<sp/>-FLT_MIN<sp/>and<sp/>pass<sp/>an<sp/>non-visible<sp/>label<sp/>e.g.<sp/>&quot;##empty&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tip:<sp/>If<sp/>your<sp/>vertical<sp/>size<sp/>is<sp/>calculated<sp/>from<sp/>an<sp/>item<sp/>count<sp/>(e.g.<sp/>10<sp/>*<sp/>item_height)<sp/>consider<sp/>adding<sp/>a<sp/>fractional<sp/>part<sp/>to<sp/>facilitate<sp/>seeing<sp/>scrolling<sp/>boundaries<sp/>(e.g.<sp/>10.25<sp/>*<sp/>item_height).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6368"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::BeginListBox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>size_arg)</highlight></codeline>
<codeline lineno="6369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"></highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>GetID(label);</highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"></highlight></codeline>
<codeline lineno="6379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>default<sp/>to<sp/>hold<sp/>~7.25<sp/>items.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fractional<sp/>number<sp/>of<sp/>items<sp/>helps<sp/>seeing<sp/>that<sp/>we<sp/>can<sp/>scroll<sp/>down/up<sp/>without<sp/>looking<sp/>at<sp/>scrollbar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size<sp/>=<sp/>ImFloor(CalcItemSize(size_arg,<sp/>CalcItemWidth(),<sp/>GetTextLineHeightWithSpacing()<sp/>*<sp/>7.25f<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2.0f));</highlight></codeline>
<codeline lineno="6382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>frame_size<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(size.x,<sp/>ImMax(size.y,<sp/>label_size.y));</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>frame_bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/>frame_size);</highlight></codeline>
<codeline lineno="6384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(frame_bb.Min,<sp/>frame_bb.Max<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>label_size.x<sp/>:<sp/>0.0f,<sp/>0.0f));</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"><sp/><sp/><sp/><sp/>g.NextItemData.ClearFlags();</highlight></codeline>
<codeline lineno="6386"><highlight class="normal"></highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsRectVisible(bb.Min,<sp/>bb.Max))</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSize(bb.GetSize(),<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemAdd(bb,<sp/>0,<sp/>&amp;frame_bb);</highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"></highlight></codeline>
<codeline lineno="6394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>We<sp/>could<sp/>omit<sp/>the<sp/>BeginGroup()<sp/>if<sp/>label_size.x<sp/>but<sp/>would<sp/>need<sp/>to<sp/>omit<sp/>the<sp/>EndGroup()<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6395"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginGroup();</highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size.x<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_pos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(frame_bb.Max.x<sp/>+<sp/>style.ItemInnerSpacing.x,<sp/>frame_bb.Min.y<sp/>+<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(label_pos,<sp/>label);</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorMaxPos<sp/>=<sp/>ImMax(window-&gt;DC.CursorMaxPos,<sp/>label_pos<sp/>+<sp/>label_size);</highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"></highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginChildFrame(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>frame_bb.GetSize());</highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"></highlight></codeline>
<codeline lineno="6407"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OBSOLETED<sp/>in<sp/>1.81<sp/>(from<sp/>February<sp/>2021)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6409"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ListBoxHeader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>items_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_in_items)</highlight></codeline>
<codeline lineno="6410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>height_in_items<sp/>==<sp/>-1,<sp/>default<sp/>height<sp/>is<sp/>maximum<sp/>7.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height_in_items_f<sp/>=<sp/>(height_in_items<sp/>&lt;<sp/>0<sp/>?<sp/>ImMin(items_count,<sp/>7)<sp/>:<sp/>height_in_items)<sp/>+<sp/>0.25f;</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size;</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/><sp/>size.x<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/><sp/><sp/>size.y<sp/>=<sp/>GetTextLineHeightWithSpacing()<sp/>*<sp/>height_in_items_f<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2.0f;</highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BeginListBox(label,<sp/>size);</highlight></codeline>
<codeline lineno="6418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6420"><highlight class="normal"></highlight></codeline>
<codeline lineno="6421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::EndListBox()</highlight></codeline>
<codeline lineno="6422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT((window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_ChildWindow)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Mismatched<sp/>BeginListBox/EndListBox<sp/>calls.<sp/>Did<sp/>you<sp/>test<sp/>the<sp/>return<sp/>value<sp/>of<sp/>BeginListBox?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_UNUSED(window);</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"></highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/>EndChildFrame();</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/>EndGroup();<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>only<sp/>required<sp/>to<sp/>be<sp/>able<sp/>to<sp/>do<sp/>IsItemXXX<sp/>query<sp/>on<sp/>the<sp/>whole<sp/>ListBox<sp/>including<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"></highlight></codeline>
<codeline lineno="6432"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ListBox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>current_item,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>items[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>items_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_items)</highlight></codeline>
<codeline lineno="6433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/>ListBox(label,<sp/>current_item,<sp/>Items_ArrayGetter,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)items,<sp/>items_count,<sp/>height_items);</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="6436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"></highlight></codeline>
<codeline lineno="6438"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>merely<sp/>a<sp/>helper<sp/>around<sp/>BeginListBox(),<sp/>EndListBox().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Considering<sp/>using<sp/>those<sp/>directly<sp/>to<sp/>submit<sp/>custom<sp/>data<sp/>or<sp/>store<sp/>selection<sp/>differently.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6440"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::ListBox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>current_item,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>(*items_getter)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>items_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_in_items)</highlight></codeline>
<codeline lineno="6441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"></highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>size<sp/>from<sp/>&quot;height_in_items&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height_in_items<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_in_items<sp/>=<sp/>ImMin(items_count,<sp/>7);</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height_in_items_f<sp/>=<sp/>height_in_items<sp/>+<sp/>0.25f;</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size(0.0f,<sp/>ImFloor(GetTextLineHeightWithSpacing()<sp/>*<sp/>height_in_items_f<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2.0f));</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"></highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!BeginListBox(label,<sp/>size))</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"></highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>all<sp/>items<sp/>have<sp/>even<sp/>height<sp/>(=<sp/>1<sp/>line<sp/>of<sp/>text).<sp/>If<sp/>you<sp/>need<sp/>items<sp/>of<sp/>different<sp/>height,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>create<sp/>a<sp/>custom<sp/>version<sp/>of<sp/>ListBox()<sp/>in<sp/>your<sp/>code<sp/>without<sp/>using<sp/>the<sp/>clipper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_list_clipper" kindref="compound">ImGuiListClipper</ref><sp/>clipper;</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/><sp/><sp/>clipper.Begin(items_count,<sp/>GetTextLineHeightWithSpacing());<sp/></highlight><highlight class="comment">//<sp/>We<sp/>know<sp/>exactly<sp/>our<sp/>line<sp/>height<sp/>here<sp/>so<sp/>we<sp/>pass<sp/>it<sp/>as<sp/>a<sp/>minor<sp/>optimization,<sp/>but<sp/>generally<sp/>you<sp/>don&apos;t<sp/>need<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(clipper.Step())</highlight></codeline>
<codeline lineno="6459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>clipper.DisplayStart;<sp/>i<sp/>&lt;<sp/>clipper.DisplayEnd;<sp/>i++)</highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>item_text;</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!items_getter(data,<sp/>i,<sp/>&amp;item_text))</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;*Unknown<sp/>item*&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"></highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushID(i);</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>item_selected<sp/>=<sp/>(i<sp/>==<sp/>*current_item);</highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Selectable(item_text,<sp/>item_selected))</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*current_item<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item_selected)</highlight></codeline>
<codeline lineno="6473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetItemDefaultFocus();</highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/><sp/><sp/>EndListBox();</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"></highlight></codeline>
<codeline lineno="6478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_changed)</highlight></codeline>
<codeline lineno="6479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkItemEdited(g.LastItemData.ID);</highlight></codeline>
<codeline lineno="6480"><highlight class="normal"></highlight></codeline>
<codeline lineno="6481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_changed;</highlight></codeline>
<codeline lineno="6482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"></highlight></codeline>
<codeline lineno="6484"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6485"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>PlotLines,<sp/>PlotHistogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6486"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6487"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>PlotEx()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6488"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>PlotLines()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6489"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>PlotHistogram()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6490"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6491"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Plot/Graph<sp/>widgets<sp/>are<sp/>not<sp/>very<sp/>good.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Consider<sp/>writing<sp/>your<sp/>own,<sp/>or<sp/>using<sp/>a<sp/>third-party<sp/>one,<sp/>see:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ImPlot<sp/>https://github.com/epezent/implot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6494"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>others<sp/>https://github.com/ocornut/imgui/wiki/Useful-Extensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6495"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6496"><highlight class="normal"></highlight></codeline>
<codeline lineno="6497"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ImGui::PlotEx(ImGuiPlotType<sp/>plot_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>(*values_getter)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>overlay_text,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_max,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>frame_size)</highlight></codeline>
<codeline lineno="6498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="6501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="6502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6503"><highlight class="normal"></highlight></codeline>
<codeline lineno="6504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="6506"><highlight class="normal"></highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_size.x<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size.x<sp/>=<sp/>CalcItemWidth();</highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_size.y<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="6511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size.y<sp/>=<sp/>label_size.y<sp/>+<sp/>(style.FramePadding.y<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="6512"><highlight class="normal"></highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>frame_bb(window-&gt;DC.CursorPos,<sp/>window-&gt;DC.CursorPos<sp/>+<sp/>frame_size);</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>inner_bb(frame_bb.Min<sp/>+<sp/>style.FramePadding,<sp/>frame_bb.Max<sp/>-<sp/>style.FramePadding);</highlight></codeline>
<codeline lineno="6515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>total_bb(frame_bb.Min,<sp/>frame_bb.Max<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>style.ItemInnerSpacing.x<sp/>+<sp/>label_size.x<sp/>:<sp/>0.0f,<sp/>0));</highlight></codeline>
<codeline lineno="6516"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(total_bb,<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(total_bb,<sp/>0,<sp/>&amp;frame_bb))</highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered<sp/>=<sp/>ItemHoverable(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6520"><highlight class="normal"></highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>scale<sp/>from<sp/>values<sp/>if<sp/>not<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale_min<sp/>==<sp/>FLT_MAX<sp/>||<sp/>scale_max<sp/>==<sp/>FLT_MAX)</highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_min<sp/>=<sp/>FLT_MAX;</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v_max<sp/>=<sp/>-FLT_MAX;</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>values_count;<sp/>i++)</highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>values_getter(data,<sp/>i);</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>v)<sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>NaN<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_min<sp/>=<sp/>ImMin(v_min,<sp/>v);</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_max<sp/>=<sp/>ImMax(v_max,<sp/>v);</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale_min<sp/>==<sp/>FLT_MAX)</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_min<sp/>=<sp/>v_min;</highlight></codeline>
<codeline lineno="6536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale_max<sp/>==<sp/>FLT_MAX)</highlight></codeline>
<codeline lineno="6537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_max<sp/>=<sp/>v_max;</highlight></codeline>
<codeline lineno="6538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6539"><highlight class="normal"></highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderFrame(frame_bb.Min,<sp/>frame_bb.Max,<sp/>GetColorU32(ImGuiCol_FrameBg),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="6541"><highlight class="normal"></highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_count_min<sp/>=<sp/>(plot_type<sp/>==<sp/>ImGuiPlotType_Lines)<sp/>?<sp/>2<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_hovered<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(values_count<sp/>&gt;=<sp/>values_count_min)</highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res_w<sp/>=<sp/>ImMin((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)frame_size.x,<sp/>values_count)<sp/>+<sp/>((plot_type<sp/>==<sp/>ImGuiPlotType_Lines)<sp/>?<sp/>-1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="6547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>item_count<sp/>=<sp/>values_count<sp/>+<sp/>((plot_type<sp/>==<sp/>ImGuiPlotType_Lines)<sp/>?<sp/>-1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="6548"><highlight class="normal"></highlight></codeline>
<codeline lineno="6549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tooltip<sp/>on<sp/>hover</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered<sp/>&amp;&amp;<sp/>inner_bb.Contains(g.IO.MousePos))</highlight></codeline>
<codeline lineno="6551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>ImClamp((g.IO.MousePos.x<sp/>-<sp/>inner_bb.Min.x)<sp/>/<sp/>(inner_bb.Max.x<sp/>-<sp/>inner_bb.Min.x),<sp/>0.0f,<sp/>0.9999f);</highlight></codeline>
<codeline lineno="6553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_idx<sp/>=<sp/>(int)(t<sp/>*<sp/>item_count);</highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(v_idx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>v_idx<sp/>&lt;<sp/>values_count);</highlight></codeline>
<codeline lineno="6555"><highlight class="normal"></highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v0<sp/>=<sp/>values_getter(data,<sp/>(v_idx<sp/>+<sp/>values_offset)<sp/>%<sp/>values_count);</highlight></codeline>
<codeline lineno="6557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>values_getter(data,<sp/>(v_idx<sp/>+<sp/>1<sp/>+<sp/>values_offset)<sp/>%<sp/>values_count);</highlight></codeline>
<codeline lineno="6558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plot_type<sp/>==<sp/>ImGuiPlotType_Lines)</highlight></codeline>
<codeline lineno="6559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetTooltip(</highlight><highlight class="stringliteral">&quot;%d:<sp/>%8.4g\n%d:<sp/>%8.4g&quot;</highlight><highlight class="normal">,<sp/>v_idx,<sp/>v0,<sp/>v_idx<sp/>+<sp/>1,<sp/>v1);</highlight></codeline>
<codeline lineno="6560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plot_type<sp/>==<sp/>ImGuiPlotType_Histogram)</highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetTooltip(</highlight><highlight class="stringliteral">&quot;%d:<sp/>%8.4g&quot;</highlight><highlight class="normal">,<sp/>v_idx,<sp/>v0);</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_hovered<sp/>=<sp/>v_idx;</highlight></codeline>
<codeline lineno="6563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"></highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t_step<sp/>=<sp/>1.0f<sp/>/<sp/>(float)res_w;</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inv_scale<sp/>=<sp/>(scale_min<sp/>==<sp/>scale_max)<sp/>?<sp/>0.0f<sp/>:<sp/>(1.0f<sp/>/<sp/>(scale_max<sp/>-<sp/>scale_min));</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"></highlight></codeline>
<codeline lineno="6568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v0<sp/>=<sp/>values_getter(data,<sp/>(0<sp/>+<sp/>values_offset)<sp/>%<sp/>values_count);</highlight></codeline>
<codeline lineno="6569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>tp0<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>t0,<sp/>1.0f<sp/>-<sp/>ImSaturate((v0<sp/>-<sp/>scale_min)<sp/>*<sp/>inv_scale)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>in<sp/>the<sp/>normalized<sp/>space<sp/>of<sp/>our<sp/>target<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>histogram_zero_line_t<sp/>=<sp/>(scale_min<sp/>*<sp/>scale_max<sp/>&lt;<sp/>0.0f)<sp/>?<sp/>(1<sp/>+<sp/>scale_min<sp/>*<sp/>inv_scale)<sp/>:<sp/>(scale_min<sp/>&lt;<sp/>0.0f<sp/>?<sp/>0.0f<sp/>:<sp/>1.0f);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Where<sp/>does<sp/>the<sp/>zero<sp/>line<sp/>stands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6572"><highlight class="normal"></highlight></codeline>
<codeline lineno="6573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col_base<sp/>=<sp/>GetColorU32((plot_type<sp/>==<sp/>ImGuiPlotType_Lines)<sp/>?<sp/>ImGuiCol_PlotLines<sp/>:<sp/>ImGuiCol_PlotHistogram);</highlight></codeline>
<codeline lineno="6574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col_hovered<sp/>=<sp/>GetColorU32((plot_type<sp/>==<sp/>ImGuiPlotType_Lines)<sp/>?<sp/>ImGuiCol_PlotLinesHovered<sp/>:<sp/>ImGuiCol_PlotHistogramHovered);</highlight></codeline>
<codeline lineno="6575"><highlight class="normal"></highlight></codeline>
<codeline lineno="6576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>res_w;<sp/>n++)</highlight></codeline>
<codeline lineno="6577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>t0<sp/>+<sp/>t_step;</highlight></codeline>
<codeline lineno="6579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v1_idx<sp/>=<sp/>(int)(t0<sp/>*<sp/>item_count<sp/>+<sp/>0.5f);</highlight></codeline>
<codeline lineno="6580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(v1_idx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>v1_idx<sp/>&lt;<sp/>values_count);</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>values_getter(data,<sp/>(v1_idx<sp/>+<sp/>values_offset<sp/>+<sp/>1)<sp/>%<sp/>values_count);</highlight></codeline>
<codeline lineno="6582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>tp1<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>t1,<sp/>1.0f<sp/>-<sp/>ImSaturate((v1<sp/>-<sp/>scale_min)<sp/>*<sp/>inv_scale)<sp/>);</highlight></codeline>
<codeline lineno="6583"><highlight class="normal"></highlight></codeline>
<codeline lineno="6584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>Draw<sp/>calls<sp/>are<sp/>merged<sp/>together<sp/>by<sp/>the<sp/>DrawList<sp/>system.<sp/>Still,<sp/>we<sp/>should<sp/>render<sp/>our<sp/>batch<sp/>are<sp/>lower<sp/>level<sp/>to<sp/>save<sp/>a<sp/>bit<sp/>of<sp/>CPU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos0<sp/>=<sp/>ImLerp(inner_bb.Min,<sp/>inner_bb.Max,<sp/>tp0);</highlight></codeline>
<codeline lineno="6586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos1<sp/>=<sp/>ImLerp(inner_bb.Min,<sp/>inner_bb.Max,<sp/>(plot_type<sp/>==<sp/>ImGuiPlotType_Lines)<sp/>?<sp/>tp1<sp/>:<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(tp1.x,<sp/>histogram_zero_line_t));</highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plot_type<sp/>==<sp/>ImGuiPlotType_Lines)</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddLine(pos0,<sp/>pos1,<sp/>idx_hovered<sp/>==<sp/>v1_idx<sp/>?<sp/>col_hovered<sp/>:<sp/>col_base);</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plot_type<sp/>==<sp/>ImGuiPlotType_Histogram)</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos1.x<sp/>&gt;=<sp/>pos0.x<sp/>+<sp/>2.0f)</highlight></codeline>
<codeline lineno="6594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos1.x<sp/>-=<sp/>1.0f;</highlight></codeline>
<codeline lineno="6595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddRectFilled(pos0,<sp/>pos1,<sp/>idx_hovered<sp/>==<sp/>v1_idx<sp/>?<sp/>col_hovered<sp/>:<sp/>col_base);</highlight></codeline>
<codeline lineno="6596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6597"><highlight class="normal"></highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="6599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp0<sp/>=<sp/>tp1;</highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"></highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>overlay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlay_text)</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTextClipped(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(frame_bb.Min.x,<sp/>frame_bb.Min.y<sp/>+<sp/>style.FramePadding.y),<sp/>frame_bb.Max,<sp/>overlay_text,<sp/>NULL,<sp/>NULL,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.5f,<sp/>0.0f));</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"></highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_size.x<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(frame_bb.Max.x<sp/>+<sp/>style.ItemInnerSpacing.x,<sp/>inner_bb.Min.y),<sp/>label);</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"></highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>hovered<sp/>index<sp/>or<sp/>-1<sp/>if<sp/>none<sp/>are<sp/>hovered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>currently<sp/>not<sp/>exposed<sp/>in<sp/>the<sp/>public<sp/>API<sp/>because<sp/>we<sp/>need<sp/>a<sp/>larger<sp/>redesign<sp/>of<sp/>the<sp/>whole<sp/>thing,<sp/>but<sp/>in<sp/>the<sp/>short-term<sp/>we<sp/>are<sp/>making<sp/>it<sp/>available<sp/>in<sp/>PlotEx().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idx_hovered;</highlight></codeline>
<codeline lineno="6613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6614"><highlight class="normal"></highlight></codeline>
<codeline lineno="6615" refid="struct_im_gui_plot_array_getter_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_plot_array_getter_data" kindref="compound">ImGuiPlotArrayGetterData</ref></highlight></codeline>
<codeline lineno="6616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>Values;</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Stride;</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"></highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_plot_array_getter_data" kindref="compound">ImGuiPlotArrayGetterData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride)<sp/>{<sp/>Values<sp/>=<sp/>values;<sp/>Stride<sp/>=<sp/>stride;<sp/>}</highlight></codeline>
<codeline lineno="6621"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6622"><highlight class="normal"></highlight></codeline>
<codeline lineno="6623"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Plot_ArrayGetter(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight></codeline>
<codeline lineno="6624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_plot_array_getter_data" kindref="compound">ImGuiPlotArrayGetterData</ref>*<sp/>plot_data<sp/>=<sp/>(<ref refid="struct_im_gui_plot_array_getter_data" kindref="compound">ImGuiPlotArrayGetterData</ref>*)data;</highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)plot_data-&gt;Values<sp/>+<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)idx<sp/>*<sp/>plot_data-&gt;Stride);</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="6628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"></highlight></codeline>
<codeline lineno="6630"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::PlotLines(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>overlay_text,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_max,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>graph_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride)</highlight></codeline>
<codeline lineno="6631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_plot_array_getter_data" kindref="compound">ImGuiPlotArrayGetterData</ref><sp/>data(values,<sp/>stride);</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/>PlotEx(ImGuiPlotType_Lines,<sp/>label,<sp/>&amp;Plot_ArrayGetter,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;data,<sp/>values_count,<sp/>values_offset,<sp/>overlay_text,<sp/>scale_min,<sp/>scale_max,<sp/>graph_size);</highlight></codeline>
<codeline lineno="6634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"></highlight></codeline>
<codeline lineno="6636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::PlotLines(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>(*values_getter)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>overlay_text,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_max,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>graph_size)</highlight></codeline>
<codeline lineno="6637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/>PlotEx(ImGuiPlotType_Lines,<sp/>label,<sp/>values_getter,<sp/>data,<sp/>values_count,<sp/>values_offset,<sp/>overlay_text,<sp/>scale_min,<sp/>scale_max,<sp/>graph_size);</highlight></codeline>
<codeline lineno="6639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6640"><highlight class="normal"></highlight></codeline>
<codeline lineno="6641"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::PlotHistogram(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>overlay_text,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_max,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>graph_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride)</highlight></codeline>
<codeline lineno="6642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_plot_array_getter_data" kindref="compound">ImGuiPlotArrayGetterData</ref><sp/>data(values,<sp/>stride);</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/>PlotEx(ImGuiPlotType_Histogram,<sp/>label,<sp/>&amp;Plot_ArrayGetter,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;data,<sp/>values_count,<sp/>values_offset,<sp/>overlay_text,<sp/>scale_min,<sp/>scale_max,<sp/>graph_size);</highlight></codeline>
<codeline lineno="6645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6646"><highlight class="normal"></highlight></codeline>
<codeline lineno="6647"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::PlotHistogram(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>(*values_getter)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>overlay_text,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_max,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>graph_size)</highlight></codeline>
<codeline lineno="6648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/><sp/><sp/>PlotEx(ImGuiPlotType_Histogram,<sp/>label,<sp/>values_getter,<sp/>data,<sp/>values_count,<sp/>values_offset,<sp/>overlay_text,<sp/>scale_min,<sp/>scale_max,<sp/>graph_size);</highlight></codeline>
<codeline lineno="6650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6651"><highlight class="normal"></highlight></codeline>
<codeline lineno="6652"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6653"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>Value<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6654"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Those<sp/>is<sp/>not<sp/>very<sp/>useful,<sp/>legacy<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6655"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6656"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Value()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6657"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6658"><highlight class="normal"></highlight></codeline>
<codeline lineno="6659"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="6660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"><sp/><sp/><sp/><sp/>Text(</highlight><highlight class="stringliteral">&quot;%s:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>prefix,<sp/>(b<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="6662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6663"><highlight class="normal"></highlight></codeline>
<codeline lineno="6664"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="6665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6666"><highlight class="normal"><sp/><sp/><sp/><sp/>Text(</highlight><highlight class="stringliteral">&quot;%s:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>prefix,<sp/>v);</highlight></codeline>
<codeline lineno="6667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"></highlight></codeline>
<codeline lineno="6669"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="6670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/><sp/><sp/>Text(</highlight><highlight class="stringliteral">&quot;%s:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>prefix,<sp/>v);</highlight></codeline>
<codeline lineno="6672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6673"><highlight class="normal"></highlight></codeline>
<codeline lineno="6674"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::Value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>float_format)</highlight></codeline>
<codeline lineno="6675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(float_format)</highlight></codeline>
<codeline lineno="6677"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fmt[64];</highlight></codeline>
<codeline lineno="6679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFormatString(fmt,<sp/>IM_ARRAYSIZE(fmt),<sp/></highlight><highlight class="stringliteral">&quot;%%s:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>float_format);</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text(fmt,<sp/>prefix,<sp/>v);</highlight></codeline>
<codeline lineno="6681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6683"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text(</highlight><highlight class="stringliteral">&quot;%s:<sp/>%.3f&quot;</highlight><highlight class="normal">,<sp/>prefix,<sp/>v);</highlight></codeline>
<codeline lineno="6685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"></highlight></codeline>
<codeline lineno="6688"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6689"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>MenuItem,<sp/>BeginMenu,<sp/>EndMenu,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6690"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6691"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>ImGuiMenuColumns<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6692"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BeginMenuBar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6693"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>EndMenuBar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6694"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BeginMainMenuBar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6695"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>EndMainMenuBar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6696"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BeginMenu()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6697"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>EndMenu()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6698"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>MenuItemEx()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6699"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>MenuItem()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6700"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6701"><highlight class="normal"></highlight></codeline>
<codeline lineno="6702"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helpers<sp/>for<sp/>internal<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGuiMenuColumns::Update(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spacing,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>window_reappearing)</highlight></codeline>
<codeline lineno="6704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_reappearing)</highlight></codeline>
<codeline lineno="6706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(Widths,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Widths));</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"><sp/><sp/><sp/><sp/>Spacing<sp/>=<sp/>(ImU16)spacing;</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/><sp/><sp/>CalcNextTotalWidth(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(Widths,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Widths));</highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/><sp/><sp/>TotalWidth<sp/>=<sp/>NextTotalWidth;</highlight></codeline>
<codeline lineno="6711"><highlight class="normal"><sp/><sp/><sp/><sp/>NextTotalWidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6713"><highlight class="normal"></highlight></codeline>
<codeline lineno="6714"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGuiMenuColumns::CalcNextTotalWidth(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>update_offsets)</highlight></codeline>
<codeline lineno="6715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6716"><highlight class="normal"><sp/><sp/><sp/><sp/>ImU16<sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>want_spacing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>IM_ARRAYSIZE(Widths);<sp/>i++)</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImU16<sp/>width<sp/>=<sp/>Widths[i];</highlight></codeline>
<codeline lineno="6721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(want_spacing<sp/>&amp;&amp;<sp/>width<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>Spacing;</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>want_spacing<sp/>|=<sp/>(width<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(update_offsets)</highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1)<sp/>{<sp/>OffsetLabel<sp/>=<sp/>offset;<sp/>}</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>2)<sp/>{<sp/>OffsetShortcut<sp/>=<sp/>offset;<sp/>}</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>3)<sp/>{<sp/>OffsetMark<sp/>=<sp/>offset;<sp/>}</highlight></codeline>
<codeline lineno="6729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>width;</highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/><sp/><sp/>NextTotalWidth<sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="6733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"></highlight></codeline>
<codeline lineno="6735"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ImGuiMenuColumns::DeclColumns(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_icon,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_shortcut,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w_mark)</highlight></codeline>
<codeline lineno="6736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6737"><highlight class="normal"><sp/><sp/><sp/><sp/>Widths[0]<sp/>=<sp/>ImMax(Widths[0],<sp/>(ImU16)w_icon);</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/><sp/><sp/>Widths[1]<sp/>=<sp/>ImMax(Widths[1],<sp/>(ImU16)w_label);</highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><sp/><sp/>Widths[2]<sp/>=<sp/>ImMax(Widths[2],<sp/>(ImU16)w_shortcut);</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"><sp/><sp/><sp/><sp/>Widths[3]<sp/>=<sp/>ImMax(Widths[3],<sp/>(ImU16)w_mark);</highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><sp/><sp/>CalcNextTotalWidth(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)ImMax(TotalWidth,<sp/>NextTotalWidth);</highlight></codeline>
<codeline lineno="6743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6744"><highlight class="normal"></highlight></codeline>
<codeline lineno="6745"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Provided<sp/>a<sp/>rectangle<sp/>perhaps<sp/>e.g.<sp/>a<sp/>BeginMenuBarEx()<sp/>could<sp/>be<sp/>used<sp/>anywhere..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6746"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Currently<sp/>the<sp/>main<sp/>responsibility<sp/>of<sp/>this<sp/>function<sp/>being<sp/>to<sp/>setup<sp/>clip-rect<sp/>+<sp/>horizontal<sp/>layout<sp/>+<sp/>menu<sp/>navigation<sp/>layer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6747"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ideally<sp/>we<sp/>also<sp/>want<sp/>this<sp/>to<sp/>be<sp/>responsible<sp/>for<sp/>claiming<sp/>space<sp/>out<sp/>of<sp/>the<sp/>main<sp/>window<sp/>scrolling<sp/>rectangle,<sp/>in<sp/>which<sp/>case<sp/>ImGuiWindowFlags_MenuBar<sp/>will<sp/>become<sp/>unnecessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6748"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Then<sp/>later<sp/>the<sp/>same<sp/>system<sp/>could<sp/>be<sp/>used<sp/>for<sp/>multiple<sp/>menu-bars,<sp/>scrollbars,<sp/>side-bars.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6749"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::BeginMenuBar()</highlight></codeline>
<codeline lineno="6750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="6753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_MenuBar))</highlight></codeline>
<codeline lineno="6755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6756"><highlight class="normal"></highlight></codeline>
<codeline lineno="6757"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(!window-&gt;DC.MenuBarAppending);</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginGroup();<sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>position<sp/>on<sp/>layer<sp/>0<sp/>//<sp/>FIXME:<sp/>Misleading<sp/>to<sp/>use<sp/>a<sp/>group<sp/>for<sp/>that<sp/>backup/restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(</highlight><highlight class="stringliteral">&quot;##menubar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"></highlight></codeline>
<codeline lineno="6761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>clip<sp/>with<sp/>current<sp/>window<sp/>clipping<sp/>rectangle<sp/>as<sp/>it<sp/>is<sp/>already<sp/>set<sp/>to<sp/>the<sp/>area<sp/>below.<sp/>However<sp/>we<sp/>clip<sp/>with<sp/>window<sp/>full<sp/>rect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>remove<sp/>1<sp/>worth<sp/>of<sp/>rounding<sp/>to<sp/>Max.x<sp/>to<sp/>that<sp/>text<sp/>in<sp/>long<sp/>menus<sp/>and<sp/>small<sp/>windows<sp/>don&apos;t<sp/>tend<sp/>to<sp/>display<sp/>over<sp/>the<sp/>lower-right<sp/>rounded<sp/>area,<sp/>which<sp/>looks<sp/>particularly<sp/>glitchy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bar_rect<sp/>=<sp/>window-&gt;MenuBarRect();</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>clip_rect(IM_ROUND(bar_rect.Min.x<sp/>+<sp/>window-&gt;WindowBorderSize),<sp/>IM_ROUND(bar_rect.Min.y<sp/>+<sp/>window-&gt;WindowBorderSize),<sp/>IM_ROUND(ImMax(bar_rect.Min.x,<sp/>bar_rect.Max.x<sp/>-<sp/>ImMax(window-&gt;WindowRounding,<sp/>window-&gt;WindowBorderSize))),<sp/>IM_ROUND(bar_rect.Max.y));</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/><sp/><sp/>clip_rect.ClipWith(window-&gt;OuterRectClipped);</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/><sp/><sp/>PushClipRect(clip_rect.Min,<sp/>clip_rect.Max,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"></highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>overwrite<sp/>CursorMaxPos<sp/>because<sp/>BeginGroup<sp/>sets<sp/>it<sp/>to<sp/>CursorPos<sp/>(essentially<sp/>the<sp/>.EmitItem<sp/>hack<sp/>in<sp/>EndMenuBar()<sp/>would<sp/>need<sp/>something<sp/>analogous<sp/>here,<sp/>maybe<sp/>a<sp/>BeginGroupEx()<sp/>with<sp/>flags).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>window-&gt;DC.CursorMaxPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bar_rect.Min.x<sp/>+<sp/>window-&gt;DC.MenuBarOffset.x,<sp/>bar_rect.Min.y<sp/>+<sp/>window-&gt;DC.MenuBarOffset.y);</highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.LayoutType<sp/>=<sp/>ImGuiLayoutType_Horizontal;</highlight></codeline>
<codeline lineno="6771"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.NavLayerCurrent<sp/>=<sp/>ImGuiNavLayer_Menu;</highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.MenuBarAppending<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"><sp/><sp/><sp/><sp/>AlignTextToFramePadding();</highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"></highlight></codeline>
<codeline lineno="6777"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::EndMenuBar()</highlight></codeline>
<codeline lineno="6778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="6780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"></highlight></codeline>
<codeline lineno="6784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nav:<sp/>When<sp/>a<sp/>move<sp/>request<sp/>within<sp/>one<sp/>of<sp/>our<sp/>child<sp/>menu<sp/>failed,<sp/>capture<sp/>the<sp/>request<sp/>to<sp/>navigate<sp/>among<sp/>our<sp/>siblings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NavMoveRequestButNoResultYet()<sp/>&amp;&amp;<sp/>(g.NavMoveDir<sp/>==<sp/>ImGuiDir_Left<sp/>||<sp/>g.NavMoveDir<sp/>==<sp/>ImGuiDir_Right)<sp/>&amp;&amp;<sp/>(g.NavWindow-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_ChildMenu))</highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>find<sp/>out<sp/>if<sp/>the<sp/>request<sp/>is<sp/>for<sp/>one<sp/>of<sp/>our<sp/>child<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>nav_earliest_child<sp/>=<sp/>g.NavWindow;</highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nav_earliest_child-&gt;ParentWindow<sp/>&amp;&amp;<sp/>(nav_earliest_child-&gt;ParentWindow-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_ChildMenu))</highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nav_earliest_child<sp/>=<sp/>nav_earliest_child-&gt;ParentWindow;</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nav_earliest_child-&gt;ParentWindow<sp/>==<sp/>window<sp/>&amp;&amp;<sp/>nav_earliest_child-&gt;DC.ParentLayoutType<sp/>==<sp/>ImGuiLayoutType_Horizontal<sp/>&amp;&amp;<sp/>(g.NavMoveFlags<sp/>&amp;<sp/>ImGuiNavMoveFlags_Forwarded)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>do<sp/>so<sp/>we<sp/>claim<sp/>focus<sp/>back,<sp/>restore<sp/>NavId<sp/>and<sp/>then<sp/>process<sp/>the<sp/>movement<sp/>request<sp/>for<sp/>yet<sp/>another<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>involve<sp/>a<sp/>one-frame<sp/>delay<sp/>which<sp/>isn&apos;t<sp/>very<sp/>problematic<sp/>in<sp/>this<sp/>situation.<sp/>We<sp/>could<sp/>remove<sp/>it<sp/>by<sp/>scoring<sp/>in<sp/>advance<sp/>for<sp/>multiple<sp/>window<sp/>(probably<sp/>not<sp/>worth<sp/>bothering)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiNavLayer<sp/>layer<sp/>=<sp/>ImGuiNavLayer_Menu;</highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(window-&gt;DC.NavLayersActiveMaskNext<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>layer));<sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusWindow(window);</highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNavID(window-&gt;NavLastIds[layer],<sp/>layer,<sp/>0,<sp/>window-&gt;NavRectRel[layer]);</highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavDisableHighlight<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>highlight<sp/>for<sp/>the<sp/>current<sp/>frame<sp/>so<sp/>we<sp/>don&apos;t<sp/>see<sp/>the<sp/>intermediary<sp/>selection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavDisableMouseHover<sp/>=<sp/>g.NavMousePosDirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestForward(g.NavMoveDir,<sp/>g.NavMoveClipDir,<sp/>g.NavMoveFlags,<sp/>g.NavMoveScrollFlags);<sp/></highlight><highlight class="comment">//<sp/>Repeat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6804"><highlight class="normal"></highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_MSVC_WARNING_SUPPRESS(6011);<sp/></highlight><highlight class="comment">//<sp/>Static<sp/>Analysis<sp/>false<sp/>positive<sp/>&quot;warning<sp/>C6011:<sp/>Dereferencing<sp/>NULL<sp/>pointer<sp/>&apos;window&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_MenuBar);</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(window-&gt;DC.MenuBarAppending);</highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/><sp/><sp/>PopClipRect();</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.MenuBarOffset.x<sp/>=<sp/>window-&gt;DC.CursorPos.x<sp/>-<sp/>window-&gt;Pos.x;<sp/></highlight><highlight class="comment">//<sp/>Save<sp/>horizontal<sp/>position<sp/>so<sp/>next<sp/>append<sp/>can<sp/>reuse<sp/>it.<sp/>This<sp/>is<sp/>kinda<sp/>equivalent<sp/>to<sp/>a<sp/>per-layer<sp/>CursorPos.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6811"><highlight class="normal"><sp/><sp/><sp/><sp/>g.GroupStack.back().EmitItem<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/><sp/><sp/>EndGroup();<sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>position<sp/>on<sp/>layer<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.LayoutType<sp/>=<sp/>ImGuiLayoutType_Vertical;</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.NavLayerCurrent<sp/>=<sp/>ImGuiNavLayer_Main;</highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.MenuBarAppending<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6817"><highlight class="normal"></highlight></codeline>
<codeline lineno="6818"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Important:<sp/>calling<sp/>order<sp/>matters!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6819"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Somehow<sp/>overlapping<sp/>with<sp/>docking<sp/>tech.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6820"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>The<sp/>&quot;rect-cut&quot;<sp/>aspect<sp/>of<sp/>this<sp/>could<sp/>be<sp/>formalized<sp/>into<sp/>a<sp/>lower-level<sp/>helper<sp/>(rect-cut:<sp/>https://halt.software/dead-simple-layouts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6821"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::BeginViewportSideBar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/><ref refid="struct_im_gui_viewport" kindref="compound">ImGuiViewport</ref>*<sp/>viewport_p,<sp/>ImGuiDir<sp/>dir,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>axis_size,<sp/>ImGuiWindowFlags<sp/>window_flags)</highlight></codeline>
<codeline lineno="6822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6823"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(dir<sp/>!=<sp/>ImGuiDir_None);</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"></highlight></codeline>
<codeline lineno="6825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>bar_window<sp/>=<sp/>FindWindowByName(name);</highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/>viewport<sp/>=<sp/>(<ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(viewport_p<sp/>?<sp/>viewport_p<sp/>:<sp/>GetMainViewport());</highlight></codeline>
<codeline lineno="6827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bar_window<sp/>==<sp/>NULL<sp/>||<sp/>bar_window-&gt;BeginCount<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6828"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>and<sp/>set<sp/>window<sp/>size/position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>avail_rect<sp/>=<sp/>viewport-&gt;GetBuildWorkRect();</highlight></codeline>
<codeline lineno="6831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiAxis<sp/><ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref><sp/>=<sp/>(dir<sp/>==<sp/>ImGuiDir_Up<sp/>||<sp/>dir<sp/>==<sp/>ImGuiDir_Down)<sp/>?<sp/>ImGuiAxis_Y<sp/>:<sp/>ImGuiAxis_X;</highlight></codeline>
<codeline lineno="6832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>avail_rect.Min;</highlight></codeline>
<codeline lineno="6833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>ImGuiDir_Right<sp/>||<sp/>dir<sp/>==<sp/>ImGuiDir_Down)</highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>=<sp/>avail_rect.Max[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>-<sp/>axis_size;</highlight></codeline>
<codeline lineno="6835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size<sp/>=<sp/>avail_rect.GetSize();</highlight></codeline>
<codeline lineno="6836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>=<sp/>axis_size;</highlight></codeline>
<codeline lineno="6837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextWindowPos(pos);</highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextWindowSize(size);</highlight></codeline>
<codeline lineno="6839"><highlight class="normal"></highlight></codeline>
<codeline lineno="6840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>our<sp/>size<sp/>into<sp/>work<sp/>area<sp/>(for<sp/>next<sp/>frame)<sp/>using<sp/>actual<sp/>window<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>ImGuiDir_Up<sp/>||<sp/>dir<sp/>==<sp/>ImGuiDir_Left)</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;BuildWorkOffsetMin[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>+=<sp/>axis_size;</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>ImGuiDir_Down<sp/>||<sp/>dir<sp/>==<sp/>ImGuiDir_Right)</highlight></codeline>
<codeline lineno="6844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport-&gt;BuildWorkOffsetMax[<ref refid="group__gtc__quaternion_1gacb991327b755ed51ce12605e4c541250" kindref="member">axis</ref>]<sp/>-=<sp/>axis_size;</highlight></codeline>
<codeline lineno="6845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6846"><highlight class="normal"></highlight></codeline>
<codeline lineno="6847"><highlight class="normal"><sp/><sp/><sp/><sp/>window_flags<sp/>|=<sp/>ImGuiWindowFlags_NoTitleBar<sp/>|<sp/>ImGuiWindowFlags_NoResize<sp/>|<sp/>ImGuiWindowFlags_NoMove<sp/>|<sp/>ImGuiWindowFlags_NoDocking;</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"><sp/><sp/><sp/><sp/>SetNextWindowViewport(viewport-&gt;ID);<sp/></highlight><highlight class="comment">//<sp/>Enforce<sp/>viewport<sp/>so<sp/>we<sp/>don&apos;t<sp/>create<sp/>our<sp/>own<sp/>viewport<sp/>when<sp/>ImGuiConfigFlags_ViewportsNoMerge<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><sp/><sp/><sp/><sp/>PushStyleVar(ImGuiStyleVar_WindowRounding,<sp/>0.0f);</highlight></codeline>
<codeline lineno="6850"><highlight class="normal"><sp/><sp/><sp/><sp/>PushStyleVar(ImGuiStyleVar_WindowMinSize,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0,<sp/>0));<sp/></highlight><highlight class="comment">//<sp/>Lift<sp/>normal<sp/>size<sp/>constraint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open<sp/>=<sp/>Begin(name,<sp/>NULL,<sp/>window_flags);</highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><sp/><sp/><sp/><sp/>PopStyleVar(2);</highlight></codeline>
<codeline lineno="6853"><highlight class="normal"></highlight></codeline>
<codeline lineno="6854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="6855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6856"><highlight class="normal"></highlight></codeline>
<codeline lineno="6857"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::BeginMainMenuBar()</highlight></codeline>
<codeline lineno="6858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*<sp/>viewport<sp/>=<sp/>(<ref refid="struct_im_gui_viewport_p" kindref="compound">ImGuiViewportP</ref>*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)GetMainViewport();</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"></highlight></codeline>
<codeline lineno="6862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>of<sp/>viewport<sp/>change<sp/>so<sp/>GetFrameHeight()<sp/>can<sp/>be<sp/>accurate<sp/>in<sp/>case<sp/>of<sp/>DPI<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6863"><highlight class="normal"><sp/><sp/><sp/><sp/>SetCurrentViewport(NULL,<sp/>viewport);</highlight></codeline>
<codeline lineno="6864"><highlight class="normal"></highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>main<sp/>menu<sp/>bar,<sp/>which<sp/>cannot<sp/>be<sp/>moved,<sp/>we<sp/>honor<sp/>g.Style.DisplaySafeAreaPadding<sp/>to<sp/>ensure<sp/>text<sp/>can<sp/>be<sp/>visible<sp/>on<sp/>a<sp/>TV<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>could<sp/>be<sp/>generalized<sp/>as<sp/>an<sp/>opt-in<sp/>way<sp/>to<sp/>clamp<sp/>window-&gt;DC.CursorStartPos<sp/>to<sp/>avoid<sp/>SafeArea?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Consider<sp/>removing<sp/>support<sp/>for<sp/>safe<sp/>area<sp/>down<sp/>the<sp/>line...<sp/>it&apos;s<sp/>messy.<sp/>Nowadays<sp/>consoles<sp/>have<sp/>support<sp/>for<sp/>TV<sp/>calibration<sp/>in<sp/>OS<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6868"><highlight class="normal"><sp/><sp/><sp/><sp/>g.NextWindowData.MenuBarOffsetMinVal<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(g.Style.DisplaySafeAreaPadding.x,<sp/>ImMax(g.Style.DisplaySafeAreaPadding.y<sp/>-<sp/>g.Style.FramePadding.y,<sp/>0.0f));</highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowFlags<sp/>window_flags<sp/>=<sp/>ImGuiWindowFlags_NoScrollbar<sp/>|<sp/>ImGuiWindowFlags_NoSavedSettings<sp/>|<sp/>ImGuiWindowFlags_MenuBar;</highlight></codeline>
<codeline lineno="6870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>GetFrameHeight();</highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open<sp/>=<sp/>BeginViewportSideBar(</highlight><highlight class="stringliteral">&quot;##MainMenuBar&quot;</highlight><highlight class="normal">,<sp/>viewport,<sp/>ImGuiDir_Up,<sp/>height,<sp/>window_flags);</highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/><sp/><sp/>g.NextWindowData.MenuBarOffsetMinVal<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="6873"><highlight class="normal"></highlight></codeline>
<codeline lineno="6874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_open)</highlight></codeline>
<codeline lineno="6875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginMenuBar();</highlight></codeline>
<codeline lineno="6876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>End();</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="6879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6880"><highlight class="normal"></highlight></codeline>
<codeline lineno="6881"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::EndMainMenuBar()</highlight></codeline>
<codeline lineno="6882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6883"><highlight class="normal"><sp/><sp/><sp/><sp/>EndMenuBar();</highlight></codeline>
<codeline lineno="6884"><highlight class="normal"></highlight></codeline>
<codeline lineno="6885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>the<sp/>user<sp/>has<sp/>left<sp/>the<sp/>menu<sp/>layer<sp/>(typically:<sp/>closed<sp/>menus<sp/>through<sp/>activation<sp/>of<sp/>an<sp/>item),<sp/>we<sp/>restore<sp/>focus<sp/>to<sp/>the<sp/>previous<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>With<sp/>this<sp/>strategy<sp/>we<sp/>won&apos;t<sp/>be<sp/>able<sp/>to<sp/>restore<sp/>a<sp/>NULL<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6887"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.CurrentWindow<sp/>==<sp/>g.NavWindow<sp/>&amp;&amp;<sp/>g.NavLayer<sp/>==<sp/>ImGuiNavLayer_Main<sp/>&amp;&amp;<sp/>!g.NavAnyRequest)</highlight></codeline>
<codeline lineno="6889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FocusTopMostWindowUnderOne(g.NavWindow,<sp/>NULL);</highlight></codeline>
<codeline lineno="6890"><highlight class="normal"></highlight></codeline>
<codeline lineno="6891"><highlight class="normal"><sp/><sp/><sp/><sp/>End();</highlight></codeline>
<codeline lineno="6892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6893"><highlight class="normal"></highlight></codeline>
<codeline lineno="6894"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsRootOfOpenMenuSet()</highlight></codeline>
<codeline lineno="6895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="6898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((g.OpenPopupStack.Size<sp/>&lt;=<sp/>g.BeginPopupStack.Size)<sp/>||<sp/>(window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_ChildMenu))</highlight></codeline>
<codeline lineno="6899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6900"><highlight class="normal"></highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initially<sp/>we<sp/>used<sp/>&apos;OpenParentId&apos;<sp/>to<sp/>differentiate<sp/>multiple<sp/>menu<sp/>sets<sp/>from<sp/>each<sp/>others<sp/>(e.g.<sp/>inside<sp/>menu<sp/>bar<sp/>vs<sp/>loose<sp/>menu<sp/>items)<sp/>based<sp/>on<sp/>parent<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>would<sp/>however<sp/>prevent<sp/>the<sp/>use<sp/>of<sp/>e.g.<sp/>PuhsID()<sp/>user<sp/>code<sp/>submitting<sp/>menus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Previously<sp/>this<sp/>worked<sp/>between<sp/>popup<sp/>and<sp/>a<sp/>first<sp/>child<sp/>menu<sp/>because<sp/>the<sp/>first<sp/>child<sp/>menu<sp/>always<sp/>had<sp/>the<sp/>_ChildWindow<sp/>flag,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>making<sp/><sp/>hovering<sp/>on<sp/>parent<sp/>popup<sp/>possible<sp/>while<sp/>first<sp/>child<sp/>menu<sp/>was<sp/>focused<sp/>-<sp/>but<sp/>this<sp/>was<sp/>generally<sp/>a<sp/>bug<sp/>with<sp/>other<sp/>side<sp/>effects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instead<sp/>we<sp/>don&apos;t<sp/>treat<sp/>Popup<sp/>specifically<sp/>(in<sp/>order<sp/>to<sp/>consistently<sp/>support<sp/>menu<sp/>features<sp/>in<sp/>them),<sp/>maybe<sp/>the<sp/>first<sp/>child<sp/>menu<sp/>of<sp/>a<sp/>Popup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>have<sp/>the<sp/>_ChildWindow<sp/>flag,<sp/>and<sp/>we<sp/>rely<sp/>on<sp/>this<sp/>IsRootOfOpenMenuSet()<sp/>check<sp/>to<sp/>allow<sp/>hovering<sp/>between<sp/>root<sp/>window/popup<sp/>and<sp/>first<sp/>chilld<sp/>menu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_popup_data" kindref="compound">ImGuiPopupData</ref>*<sp/>upper_popup<sp/>=<sp/>&amp;g.OpenPopupStack[g.BeginPopupStack.Size];</highlight></codeline>
<codeline lineno="6908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="comment">/*upper_popup-&gt;OpenParentId<sp/>==<sp/>window-&gt;IDStack.back()<sp/>&amp;&amp;*/</highlight><highlight class="normal"><sp/>upper_popup-&gt;Window<sp/>&amp;&amp;<sp/>(upper_popup-&gt;Window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_ChildMenu));</highlight></codeline>
<codeline lineno="6909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6910"><highlight class="normal"></highlight></codeline>
<codeline lineno="6911"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::BeginMenuEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>icon,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="6912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="6914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6916"><highlight class="normal"></highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="6920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>menu_is_open<sp/>=<sp/>IsPopupOpen(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiPopupFlags_None);</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"></highlight></codeline>
<codeline lineno="6922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sub-menus<sp/>are<sp/>ChildWindow<sp/>so<sp/>that<sp/>mouse<sp/>can<sp/>be<sp/>hovering<sp/>across<sp/>them<sp/>(otherwise<sp/>top-most<sp/>popup<sp/>menu<sp/>would<sp/>steal<sp/>focus<sp/>and<sp/>not<sp/>allow<sp/>hovering<sp/>on<sp/>parent<sp/>menu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>menu<sp/>in<sp/>a<sp/>hierarchy<sp/>isn&apos;t<sp/>so<sp/>hovering<sp/>doesn&apos;t<sp/>get<sp/>accross<sp/>(otherwise<sp/>e.g.<sp/>resizing<sp/>borders<sp/>with<sp/>ImGuiButtonFlags_FlattenChildren<sp/>would<sp/>react),<sp/>but<sp/>top-most<sp/>BeginMenu()<sp/>will<sp/>bypass<sp/>that<sp/>limitation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6924"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindowFlags<sp/>flags<sp/>=<sp/>ImGuiWindowFlags_ChildMenu<sp/>|<sp/>ImGuiWindowFlags_AlwaysAutoResize<sp/>|<sp/>ImGuiWindowFlags_NoMove<sp/>|<sp/>ImGuiWindowFlags_NoTitleBar<sp/>|<sp/>ImGuiWindowFlags_NoSavedSettings<sp/>|<sp/>ImGuiWindowFlags_NoNavFocus;</highlight></codeline>
<codeline lineno="6925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_ChildMenu)</highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiWindowFlags_ChildWindow;</highlight></codeline>
<codeline lineno="6927"><highlight class="normal"></highlight></codeline>
<codeline lineno="6928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>menu<sp/>with<sp/>same<sp/>the<sp/>ID<sp/>was<sp/>already<sp/>submitted,<sp/>we<sp/>will<sp/>append<sp/>to<sp/>it,<sp/>matching<sp/>the<sp/>behavior<sp/>of<sp/>Begin().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>relying<sp/>on<sp/>a<sp/>O(N)<sp/>search<sp/>-<sp/>so<sp/>O(N<sp/>log<sp/>N)<sp/>over<sp/>the<sp/>frame<sp/>-<sp/>which<sp/>seems<sp/>like<sp/>the<sp/>most<sp/>efficient<sp/>for<sp/>the<sp/>expected<sp/>small<sp/>amount<sp/>of<sp/>BeginMenu()<sp/>calls<sp/>per<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>somehow<sp/>this<sp/>is<sp/>ever<sp/>becoming<sp/>a<sp/>problem<sp/>we<sp/>can<sp/>switch<sp/>to<sp/>use<sp/>e.g.<sp/>ImGuiStorage<sp/>mapping<sp/>key<sp/>to<sp/>last<sp/>frame<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.MenusIdSubmittedThisFrame.contains(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="6932"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(menu_is_open)</highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>menu_is_open<sp/>=<sp/>BeginPopupEx(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>flags);<sp/></highlight><highlight class="comment">//<sp/>menu_is_open<sp/>can<sp/>be<sp/>&apos;false&apos;<sp/>when<sp/>the<sp/>popup<sp/>is<sp/>completely<sp/>clipped<sp/>(e.g.<sp/>zero<sp/>size<sp/>display)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NextWindowData.ClearFlags();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>behave<sp/>like<sp/>Begin()<sp/>and<sp/>need<sp/>to<sp/>consume<sp/>those<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>menu_is_open;</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6939"><highlight class="normal"></highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tag<sp/>menu<sp/>as<sp/>used.<sp/>Next<sp/>time<sp/>BeginMenu()<sp/>with<sp/>same<sp/>ID<sp/>is<sp/>called<sp/>it<sp/>will<sp/>append<sp/>to<sp/>existing<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6941"><highlight class="normal"><sp/><sp/><sp/><sp/>g.MenusIdSubmittedThisFrame.push_back(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6942"><highlight class="normal"></highlight></codeline>
<codeline lineno="6943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6944"><highlight class="normal"></highlight></codeline>
<codeline lineno="6945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Odd<sp/>hack<sp/>to<sp/>allow<sp/>hovering<sp/>across<sp/>menus<sp/>of<sp/>a<sp/>same<sp/>menu-set<sp/>(otherwise<sp/>we<sp/>wouldn&apos;t<sp/>be<sp/>able<sp/>to<sp/>hover<sp/>parent<sp/>without<sp/>always<sp/>being<sp/>a<sp/>Child<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>menuset_is_open<sp/>=<sp/>IsRootOfOpenMenuSet();</highlight></codeline>
<codeline lineno="6947"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>backed_nav_window<sp/>=<sp/>g.NavWindow;</highlight></codeline>
<codeline lineno="6948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(menuset_is_open)</highlight></codeline>
<codeline lineno="6949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavWindow<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="6950"><highlight class="normal"></highlight></codeline>
<codeline lineno="6951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>reference<sp/>position<sp/>stored<sp/>in<sp/>popup_pos<sp/>will<sp/>be<sp/>used<sp/>by<sp/>Begin()<sp/>to<sp/>find<sp/>a<sp/>suitable<sp/>position<sp/>for<sp/>the<sp/>child<sp/>menu,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However<sp/>the<sp/>final<sp/>position<sp/>is<sp/>going<sp/>to<sp/>be<sp/>different!<sp/>It<sp/>is<sp/>chosen<sp/>by<sp/>FindBestWindowPosForPopup().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>Menus<sp/>tend<sp/>to<sp/>overlap<sp/>each<sp/>other<sp/>horizontally<sp/>to<sp/>amplify<sp/>relative<sp/>Z-ordering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>popup_pos,<sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="6955"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(label);</highlight></codeline>
<codeline lineno="6956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled)</highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginDisabled();</highlight></codeline>
<codeline lineno="6958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_menu_columns" kindref="compound">ImGuiMenuColumns</ref>*<sp/>offsets<sp/>=<sp/>&amp;window-&gt;DC.MenuColumns;</highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="6960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;DC.LayoutType<sp/>==<sp/>ImGuiLayoutType_Horizontal)</highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Menu<sp/>inside<sp/>an<sp/>horizontal<sp/>menu<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Selectable<sp/>extend<sp/>their<sp/>highlight<sp/>by<sp/>half<sp/>ItemSpacing<sp/>in<sp/>each<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>ChildMenu,<sp/>the<sp/>popup<sp/>position<sp/>will<sp/>be<sp/>overwritten<sp/>by<sp/>the<sp/>call<sp/>to<sp/>FindBestWindowPosForPopup()<sp/>in<sp/>Begin()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popup_pos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.x<sp/>-<sp/>1.0f<sp/>-<sp/>IM_FLOOR(style.ItemSpacing.x<sp/>*<sp/>0.5f),<sp/>pos.y<sp/>-<sp/>style.FramePadding.y<sp/>+<sp/>window-&gt;MenuBarHeight());</highlight></codeline>
<codeline lineno="6966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos.x<sp/>+=<sp/>IM_FLOOR(style.ItemSpacing.x<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushStyleVar(ImGuiStyleVar_ItemSpacing,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(style.ItemSpacing.x<sp/>*<sp/>2.0f,<sp/>style.ItemSpacing.y));</highlight></codeline>
<codeline lineno="6968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>label_size.x;</highlight></codeline>
<codeline lineno="6969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_pos(window-&gt;DC.CursorPos.x<sp/>+<sp/>offsets-&gt;OffsetLabel,<sp/>window-&gt;DC.CursorPos.y<sp/>+<sp/>window-&gt;DC.CurrLineTextBaseOffset);</highlight></codeline>
<codeline lineno="6970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/>Selectable(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>menu_is_open,<sp/>ImGuiSelectableFlags_NoHoldingActiveID<sp/>|<sp/>ImGuiSelectableFlags_SelectOnClick<sp/>|<sp/>ImGuiSelectableFlags_DontClosePopups,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(w,<sp/>0.0f));</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(text_pos,<sp/>label);</highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopStyleVar();</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos.x<sp/>+=<sp/>IM_FLOOR(style.ItemSpacing.x<sp/>*<sp/>(-1.0f<sp/>+<sp/>0.5f));<sp/></highlight><highlight class="comment">//<sp/>-1<sp/>spacing<sp/>to<sp/>compensate<sp/>the<sp/>spacing<sp/>added<sp/>when<sp/>Selectable()<sp/>did<sp/>a<sp/>SameLine().<sp/>It<sp/>would<sp/>also<sp/>work<sp/>to<sp/>call<sp/>SameLine()<sp/>ourselves<sp/>after<sp/>the<sp/>PopStyleVar().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Menu<sp/>inside<sp/>a<sp/>regular/vertical<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(In<sp/>a<sp/>typical<sp/>menu<sp/>window<sp/>where<sp/>all<sp/>items<sp/>are<sp/>BeginMenu()<sp/>or<sp/>MenuItem()<sp/>calls,<sp/>extra_w<sp/>will<sp/>always<sp/>be<sp/>0.0f.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Only<sp/>when<sp/>they<sp/>are<sp/>other<sp/>items<sp/>sticking<sp/>out<sp/>we&apos;re<sp/>going<sp/>to<sp/>add<sp/>spacing,<sp/>yet<sp/>only<sp/>register<sp/>minimum<sp/>width<sp/>into<sp/>the<sp/>layout<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popup_pos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.x,<sp/>pos.y<sp/>-<sp/>style.WindowPadding.y);</highlight></codeline>
<codeline lineno="6981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>icon_w<sp/>=<sp/>(icon<sp/>&amp;&amp;<sp/>icon[0])<sp/>?<sp/>CalcTextSize(icon,<sp/>NULL).x<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="6982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>checkmark_w<sp/>=<sp/>IM_FLOOR(g.FontSize<sp/>*<sp/>1.20f);</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_w<sp/>=<sp/>window-&gt;DC.MenuColumns.DeclColumns(icon_w,<sp/>label_size.x,<sp/>0.0f,<sp/>checkmark_w);<sp/></highlight><highlight class="comment">//<sp/>Feedback<sp/>to<sp/>next<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>extra_w<sp/>=<sp/>ImMax(0.0f,<sp/>GetContentRegionAvail().x<sp/>-<sp/>min_w);</highlight></codeline>
<codeline lineno="6985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_pos(window-&gt;DC.CursorPos.x<sp/>+<sp/>offsets-&gt;OffsetLabel,<sp/>window-&gt;DC.CursorPos.y<sp/>+<sp/>window-&gt;DC.CurrLineTextBaseOffset);</highlight></codeline>
<codeline lineno="6986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/>Selectable(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>menu_is_open,<sp/>ImGuiSelectableFlags_NoHoldingActiveID<sp/>|<sp/>ImGuiSelectableFlags_SelectOnClick<sp/>|<sp/>ImGuiSelectableFlags_DontClosePopups<sp/>|<sp/>ImGuiSelectableFlags_SpanAvailWidth,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(min_w,<sp/>0.0f));</highlight></codeline>
<codeline lineno="6987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(text_pos,<sp/>label);</highlight></codeline>
<codeline lineno="6988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icon_w<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(offsets-&gt;OffsetIcon,<sp/>0.0f),<sp/>icon);</highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderArrow(window-&gt;DrawList,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(offsets-&gt;OffsetMark<sp/>+<sp/>extra_w<sp/>+<sp/>g.FontSize<sp/>*<sp/>0.30f,<sp/>0.0f),<sp/>GetColorU32(ImGuiCol_Text),<sp/>ImGuiDir_Right);</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled)</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndDisabled();</highlight></codeline>
<codeline lineno="6994"><highlight class="normal"></highlight></codeline>
<codeline lineno="6995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered<sp/>=<sp/>(g.HoveredId<sp/>==<sp/>id)<sp/>&amp;&amp;<sp/>enabled;</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(menuset_is_open)</highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavWindow<sp/>=<sp/>backed_nav_window;</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"></highlight></codeline>
<codeline lineno="6999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>want_open<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>want_close<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;DC.LayoutType<sp/>==<sp/>ImGuiLayoutType_Vertical)<sp/></highlight><highlight class="comment">//<sp/>(window-&gt;Flags<sp/>&amp;<sp/>(ImGuiWindowFlags_Popup|ImGuiWindowFlags_ChildMenu))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7002"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>menu<sp/>when<sp/>not<sp/>hovering<sp/>it<sp/>anymore<sp/>unless<sp/>we<sp/>are<sp/>moving<sp/>roughly<sp/>in<sp/>the<sp/>direction<sp/>of<sp/>the<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implement<sp/>http://bjk5.com/post/44698559168/breaking-down-amazons-mega-dropdown<sp/>to<sp/>avoid<sp/>using<sp/>timers,<sp/>so<sp/>menus<sp/>feels<sp/>more<sp/>reactive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>moving_toward_other_child_menu<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>child_menu_window<sp/>=<sp/>(g.BeginPopupStack.Size<sp/>&lt;<sp/>g.OpenPopupStack.Size<sp/>&amp;&amp;<sp/>g.OpenPopupStack[g.BeginPopupStack.Size].SourceWindow<sp/>==<sp/>window)<sp/>?<sp/>g.OpenPopupStack[g.BeginPopupStack.Size].Window<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="7007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(g.HoveredWindow<sp/>==<sp/>window<sp/>&amp;&amp;<sp/>child_menu_window<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>!(window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_MenuBar))</highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ref_unit<sp/>=<sp/>g.FontSize;<sp/></highlight><highlight class="comment">//<sp/>FIXME-DPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>next_window_rect<sp/>=<sp/>child_menu_window-&gt;Rect();</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ta<sp/>=<sp/>(g.IO.MousePos<sp/>-<sp/>g.IO.MouseDelta);</highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>tb<sp/>=<sp/>(window-&gt;Pos.x<sp/>&lt;<sp/>child_menu_window-&gt;Pos.x)<sp/>?<sp/>next_window_rect.GetTL()<sp/>:<sp/>next_window_rect.GetTR();</highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>tc<sp/>=<sp/>(window-&gt;Pos.x<sp/>&lt;<sp/>child_menu_window-&gt;Pos.x)<sp/>?<sp/>next_window_rect.GetBL()<sp/>:<sp/>next_window_rect.GetBR();</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>extra<sp/>=<sp/>ImClamp(ImFabs(ta.x<sp/>-<sp/>tb.x)<sp/>*<sp/>0.30f,<sp/>ref_unit<sp/>*<sp/>0.5f,<sp/>ref_unit<sp/>*<sp/>2.5f);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>bit<sp/>of<sp/>extra<sp/>slack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ta.x<sp/>+=<sp/>(window-&gt;Pos.x<sp/>&lt;<sp/>child_menu_window-&gt;Pos.x)<sp/>?<sp/>-0.5f<sp/>:<sp/>+0.5f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>numerical<sp/>issues<sp/>(FIXME:<sp/>??)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tb.y<sp/>=<sp/>ta.y<sp/>+<sp/>ImMax((tb.y<sp/>-<sp/>extra)<sp/>-<sp/>ta.y,<sp/>-ref_unit<sp/>*<sp/>8.0f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>triangle<sp/>is<sp/>maximum<sp/>200<sp/>high<sp/>to<sp/>limit<sp/>the<sp/>slope<sp/>and<sp/>the<sp/>bias<sp/>toward<sp/>large<sp/>sub-menus<sp/>//<sp/>FIXME:<sp/>Multiply<sp/>by<sp/>fb_scale?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tc.y<sp/>=<sp/>ta.y<sp/>+<sp/>ImMin((tc.y<sp/>+<sp/>extra)<sp/>-<sp/>ta.y,<sp/>+ref_unit<sp/>*<sp/>8.0f);</highlight></codeline>
<codeline lineno="7018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moving_toward_other_child_menu<sp/>=<sp/>ImTriangleContainsPoint(ta,<sp/>tb,<sp/>tc,<sp/>g.IO.MousePos);</highlight></codeline>
<codeline lineno="7019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GetForegroundDrawList()-&gt;AddTriangleFilled(ta,<sp/>tb,<sp/>tc,<sp/>moving_toward_other_child_menu<sp/>?<sp/>IM_COL32(0,128,0,128)<sp/>:<sp/>IM_COL32(128,0,0,128));<sp/>//<sp/>[DEBUG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(menu_is_open<sp/>&amp;&amp;<sp/>!hovered<sp/>&amp;&amp;<sp/>g.HoveredWindow<sp/>==<sp/>window<sp/>&amp;&amp;<sp/>g.HoveredIdPreviousFrame<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>g.HoveredIdPreviousFrame<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!moving_toward_other_child_menu)</highlight></codeline>
<codeline lineno="7022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>want_close<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7023"><highlight class="normal"></highlight></codeline>
<codeline lineno="7024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!menu_is_open<sp/>&amp;&amp;<sp/>pressed)<sp/></highlight><highlight class="comment">//<sp/>Click/activate<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>want_open<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!menu_is_open<sp/>&amp;&amp;<sp/>hovered<sp/>&amp;&amp;<sp/>!moving_toward_other_child_menu)<sp/></highlight><highlight class="comment">//<sp/>Hover<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>want_open<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.NavMoveDir<sp/>==<sp/>ImGuiDir_Right)<sp/></highlight><highlight class="comment">//<sp/>Nav-Right<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>want_open<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestCancel();</highlight></codeline>
<codeline lineno="7033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7036"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Menu<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(menu_is_open<sp/>&amp;&amp;<sp/>pressed<sp/>&amp;&amp;<sp/>menuset_is_open)<sp/></highlight><highlight class="comment">//<sp/>Click<sp/>an<sp/>open<sp/>menu<sp/>again<sp/>to<sp/>close<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>want_close<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>want_open<sp/>=<sp/>menu_is_open<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed<sp/>||<sp/>(hovered<sp/>&amp;&amp;<sp/>menuset_is_open<sp/>&amp;&amp;<sp/>!menu_is_open))<sp/></highlight><highlight class="comment">//<sp/>First<sp/>click<sp/>to<sp/>open,<sp/>then<sp/>hover<sp/>to<sp/>open<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>want_open<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.NavMoveDir<sp/>==<sp/>ImGuiDir_Down)<sp/></highlight><highlight class="comment">//<sp/>Nav-Down<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>want_open<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestCancel();</highlight></codeline>
<codeline lineno="7051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"></highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled)<sp/></highlight><highlight class="comment">//<sp/>explicitly<sp/>close<sp/>if<sp/>an<sp/>open<sp/>menu<sp/>becomes<sp/>disabled,<sp/>facilitate<sp/>users<sp/>code<sp/>a<sp/>lot<sp/>in<sp/>pattern<sp/>such<sp/>as<sp/>&apos;if<sp/>(BeginMenu(&quot;options&quot;,<sp/>has_object))<sp/>{<sp/>..use<sp/>object..<sp/>}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>want_close<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(want_close<sp/>&amp;&amp;<sp/>IsPopupOpen(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiPopupFlags_None))</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClosePopupToLevel(g.BeginPopupStack.Size,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7058"><highlight class="normal"></highlight></codeline>
<codeline lineno="7059"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags<sp/>|<sp/>ImGuiItemStatusFlags_Openable<sp/>|<sp/>(menu_is_open<sp/>?<sp/>ImGuiItemStatusFlags_Opened<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="7060"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="7061"><highlight class="normal"></highlight></codeline>
<codeline lineno="7062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!menu_is_open<sp/>&amp;&amp;<sp/>want_open<sp/>&amp;&amp;<sp/>g.OpenPopupStack.Size<sp/>&gt;<sp/>g.BeginPopupStack.Size)</highlight></codeline>
<codeline lineno="7063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>recycle<sp/>same<sp/>menu<sp/>level<sp/>in<sp/>the<sp/>same<sp/>frame,<sp/>first<sp/>close<sp/>the<sp/>other<sp/>menu<sp/>and<sp/>yield<sp/>for<sp/>a<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopup(label);</highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"></highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/><sp/><sp/>menu_is_open<sp/>|=<sp/>want_open;</highlight></codeline>
<codeline lineno="7070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(want_open)</highlight></codeline>
<codeline lineno="7071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPopup(label);</highlight></codeline>
<codeline lineno="7072"><highlight class="normal"></highlight></codeline>
<codeline lineno="7073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(menu_is_open)</highlight></codeline>
<codeline lineno="7074"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNextWindowPos(popup_pos,<sp/>ImGuiCond_Always);<sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>this<sp/>is<sp/>super<sp/>misleading!<sp/>The<sp/>value<sp/>will<sp/>serve<sp/>as<sp/>reference<sp/>for<sp/>FindBestWindowPosForPopup(),<sp/>not<sp/>actual<sp/>pos.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushStyleVar(ImGuiStyleVar_ChildRounding,<sp/>style.PopupRounding);<sp/></highlight><highlight class="comment">//<sp/>First<sp/>level<sp/>will<sp/>use<sp/>_PopupRounding,<sp/>subsequent<sp/>will<sp/>use<sp/>_ChildRounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>menu_is_open<sp/>=<sp/>BeginPopupEx(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>flags);<sp/></highlight><highlight class="comment">//<sp/>menu_is_open<sp/>can<sp/>be<sp/>&apos;false&apos;<sp/>when<sp/>the<sp/>popup<sp/>is<sp/>completely<sp/>clipped<sp/>(e.g.<sp/>zero<sp/>size<sp/>display)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopStyleVar();</highlight></codeline>
<codeline lineno="7079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7081"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NextWindowData.ClearFlags();<sp/></highlight><highlight class="comment">//<sp/>We<sp/>behave<sp/>like<sp/>Begin()<sp/>and<sp/>need<sp/>to<sp/>consume<sp/>those<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7084"><highlight class="normal"></highlight></codeline>
<codeline lineno="7085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>menu_is_open;</highlight></codeline>
<codeline lineno="7086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7087"><highlight class="normal"></highlight></codeline>
<codeline lineno="7088"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::BeginMenu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="7089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BeginMenuEx(label,<sp/>NULL,<sp/>enabled);</highlight></codeline>
<codeline lineno="7091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7092"><highlight class="normal"></highlight></codeline>
<codeline lineno="7093"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::EndMenu()</highlight></codeline>
<codeline lineno="7094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nav:<sp/>When<sp/>a<sp/>left<sp/>move<sp/>request<sp/>_within<sp/>our<sp/>child<sp/>menu_<sp/>failed,<sp/>close<sp/>ourselves<sp/>(the<sp/>_parent_<sp/>menu).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>menu<sp/>doesn&apos;t<sp/>close<sp/>itself<sp/>because<sp/>EndMenuBar()<sp/>wants<sp/>the<sp/>catch<sp/>the<sp/>last<sp/>Left&lt;&gt;Right<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>it<sp/>means<sp/>that<sp/>with<sp/>the<sp/>current<sp/>code,<sp/>a<sp/>BeginMenu()<sp/>from<sp/>outside<sp/>another<sp/>menu<sp/>or<sp/>a<sp/>menu-bar<sp/>won&apos;t<sp/>be<sp/>closable<sp/>with<sp/>the<sp/>Left<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7099"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="7100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavMoveDir<sp/>==<sp/>ImGuiDir_Left<sp/>&amp;&amp;<sp/>NavMoveRequestButNoResultYet()<sp/>&amp;&amp;<sp/>window-&gt;DC.LayoutType<sp/>==<sp/>ImGuiLayoutType_Vertical)</highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavWindow<sp/>&amp;&amp;<sp/>(g.NavWindow-&gt;RootWindowForNav-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_Popup)<sp/>&amp;&amp;<sp/>g.NavWindow-&gt;RootWindowForNav-&gt;ParentWindow<sp/>==<sp/>window)</highlight></codeline>
<codeline lineno="7102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClosePopupToLevel(g.BeginPopupStack.Size,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavMoveRequestCancel();</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"></highlight></codeline>
<codeline lineno="7107"><highlight class="normal"><sp/><sp/><sp/><sp/>EndPopup();</highlight></codeline>
<codeline lineno="7108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7109"><highlight class="normal"></highlight></codeline>
<codeline lineno="7110"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::MenuItemEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>icon,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>shortcut,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="7111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GetCurrentWindow();</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7115"><highlight class="normal"></highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"></highlight></codeline>
<codeline lineno="7121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>menuset_is_open<sp/>=<sp/>IsRootOfOpenMenuSet();</highlight></codeline>
<codeline lineno="7122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>backed_nav_window<sp/>=<sp/>g.NavWindow;</highlight></codeline>
<codeline lineno="7123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(menuset_is_open)</highlight></codeline>
<codeline lineno="7124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavWindow<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="7125"><highlight class="normal"></highlight></codeline>
<codeline lineno="7126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>been<sp/>using<sp/>the<sp/>equivalent<sp/>of<sp/>ImGuiSelectableFlags_SetNavIdOnHover<sp/>on<sp/>all<sp/>Selectable()<sp/>since<sp/>early<sp/>Nav<sp/>system<sp/>days<sp/>(commit<sp/>43ee5d73),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>I<sp/>am<sp/>unsure<sp/>whether<sp/>this<sp/>should<sp/>be<sp/>kept<sp/>at<sp/>all.<sp/>For<sp/>now<sp/>moved<sp/>it<sp/>to<sp/>be<sp/>an<sp/>opt-in<sp/>feature<sp/>used<sp/>by<sp/>menus<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"><sp/><sp/><sp/><sp/>PushID(label);</highlight></codeline>
<codeline lineno="7130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled)</highlight></codeline>
<codeline lineno="7131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginDisabled();</highlight></codeline>
<codeline lineno="7132"><highlight class="normal"></highlight></codeline>
<codeline lineno="7133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiSelectableFlags<sp/>selectable_flags<sp/>=<sp/>ImGuiSelectableFlags_SelectOnRelease<sp/>|<sp/>ImGuiSelectableFlags_SetNavIdOnHover;</highlight></codeline>
<codeline lineno="7134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_menu_columns" kindref="compound">ImGuiMenuColumns</ref>*<sp/>offsets<sp/>=<sp/>&amp;window-&gt;DC.MenuColumns;</highlight></codeline>
<codeline lineno="7135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;DC.LayoutType<sp/>==<sp/>ImGuiLayoutType_Horizontal)</highlight></codeline>
<codeline lineno="7136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mimic<sp/>the<sp/>exact<sp/>layout<sp/>spacing<sp/>of<sp/>BeginMenu()<sp/>to<sp/>allow<sp/>MenuItem()<sp/>inside<sp/>a<sp/>menu<sp/>bar,<sp/>which<sp/>is<sp/>a<sp/>little<sp/>misleading<sp/>but<sp/>may<sp/>be<sp/>useful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>in<sp/>this<sp/>situation:<sp/>we<sp/>don&apos;t<sp/>render<sp/>the<sp/>shortcut,<sp/>we<sp/>render<sp/>a<sp/>highlight<sp/>instead<sp/>of<sp/>the<sp/>selected<sp/>tick<sp/>mark.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>label_size.x;</highlight></codeline>
<codeline lineno="7140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos.x<sp/>+=<sp/>IM_FLOOR(style.ItemSpacing.x<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="7141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>text_pos(window-&gt;DC.CursorPos.x<sp/>+<sp/>offsets-&gt;OffsetLabel,<sp/>window-&gt;DC.CursorPos.y<sp/>+<sp/>window-&gt;DC.CurrLineTextBaseOffset);</highlight></codeline>
<codeline lineno="7142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushStyleVar(ImGuiStyleVar_ItemSpacing,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(style.ItemSpacing.x<sp/>*<sp/>2.0f,<sp/>style.ItemSpacing.y));</highlight></codeline>
<codeline lineno="7143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/>Selectable(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>selected,<sp/>selectable_flags,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(w,<sp/>0.0f));</highlight></codeline>
<codeline lineno="7144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopStyleVar();</highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(text_pos,<sp/>label);</highlight></codeline>
<codeline lineno="7146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos.x<sp/>+=<sp/>IM_FLOOR(style.ItemSpacing.x<sp/>*<sp/>(-1.0f<sp/>+<sp/>0.5f));<sp/></highlight><highlight class="comment">//<sp/>-1<sp/>spacing<sp/>to<sp/>compensate<sp/>the<sp/>spacing<sp/>added<sp/>when<sp/>Selectable()<sp/>did<sp/>a<sp/>SameLine().<sp/>It<sp/>would<sp/>also<sp/>work<sp/>to<sp/>call<sp/>SameLine()<sp/>ourselves<sp/>after<sp/>the<sp/>PopStyleVar().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Menu<sp/>item<sp/>inside<sp/>a<sp/>vertical<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(In<sp/>a<sp/>typical<sp/>menu<sp/>window<sp/>where<sp/>all<sp/>items<sp/>are<sp/>BeginMenu()<sp/>or<sp/>MenuItem()<sp/>calls,<sp/>extra_w<sp/>will<sp/>always<sp/>be<sp/>0.0f.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Only<sp/>when<sp/>they<sp/>are<sp/>other<sp/>items<sp/>sticking<sp/>out<sp/>we&apos;re<sp/>going<sp/>to<sp/>add<sp/>spacing,<sp/>yet<sp/>only<sp/>register<sp/>minimum<sp/>width<sp/>into<sp/>the<sp/>layout<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>icon_w<sp/>=<sp/>(icon<sp/>&amp;&amp;<sp/>icon[0])<sp/>?<sp/>CalcTextSize(icon,<sp/>NULL).x<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="7154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shortcut_w<sp/>=<sp/>(shortcut<sp/>&amp;&amp;<sp/>shortcut[0])<sp/>?<sp/>CalcTextSize(shortcut,<sp/>NULL).x<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="7155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>checkmark_w<sp/>=<sp/>IM_FLOOR(g.FontSize<sp/>*<sp/>1.20f);</highlight></codeline>
<codeline lineno="7156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_w<sp/>=<sp/>window-&gt;DC.MenuColumns.DeclColumns(icon_w,<sp/>label_size.x,<sp/>shortcut_w,<sp/>checkmark_w);<sp/></highlight><highlight class="comment">//<sp/>Feedback<sp/>for<sp/>next<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stretch_w<sp/>=<sp/>ImMax(0.0f,<sp/>GetContentRegionAvail().x<sp/>-<sp/>min_w);</highlight></codeline>
<codeline lineno="7158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressed<sp/>=<sp/>Selectable(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>selectable_flags<sp/>|<sp/>ImGuiSelectableFlags_SpanAvailWidth,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(min_w,<sp/>0.0f));</highlight></codeline>
<codeline lineno="7159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(offsets-&gt;OffsetLabel,<sp/>0.0f),<sp/>label);</highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(icon_w<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="7161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(offsets-&gt;OffsetIcon,<sp/>0.0f),<sp/>icon);</highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shortcut_w<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushStyleColor(ImGuiCol_Text,<sp/>style.Colors[ImGuiCol_TextDisabled]);</highlight></codeline>
<codeline lineno="7165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderText(pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(offsets-&gt;OffsetShortcut<sp/>+<sp/>stretch_w,<sp/>0.0f),<sp/>shortcut,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopStyleColor();</highlight></codeline>
<codeline lineno="7167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected)</highlight></codeline>
<codeline lineno="7169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderCheckMark(window-&gt;DrawList,<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(offsets-&gt;OffsetMark<sp/>+<sp/>stretch_w<sp/>+<sp/>g.FontSize<sp/>*<sp/>0.40f,<sp/>g.FontSize<sp/>*<sp/>0.134f<sp/>*<sp/>0.5f),<sp/>GetColorU32(ImGuiCol_Text),<sp/>g.FontSize<sp/><sp/>*<sp/>0.866f);</highlight></codeline>
<codeline lineno="7170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7171"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(g.LastItemData.ID,<sp/>label,<sp/>g.LastItemData.StatusFlags<sp/>|<sp/>ImGuiItemStatusFlags_Checkable<sp/>|<sp/>(selected<sp/>?<sp/>ImGuiItemStatusFlags_Checked<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled)</highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndDisabled();</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="7175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(menuset_is_open)</highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.NavWindow<sp/>=<sp/>backed_nav_window;</highlight></codeline>
<codeline lineno="7177"><highlight class="normal"></highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="7179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7180"><highlight class="normal"></highlight></codeline>
<codeline lineno="7181"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::MenuItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>shortcut,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="7182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MenuItemEx(label,<sp/>NULL,<sp/>shortcut,<sp/>selected,<sp/>enabled);</highlight></codeline>
<codeline lineno="7184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7185"><highlight class="normal"></highlight></codeline>
<codeline lineno="7186"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::MenuItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>shortcut,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>p_selected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="7187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MenuItemEx(label,<sp/>NULL,<sp/>shortcut,<sp/>p_selected<sp/>?<sp/>*p_selected<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>enabled))</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_selected)</highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_selected<sp/>=<sp/>!*p_selected;</highlight></codeline>
<codeline lineno="7192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7196"><highlight class="normal"></highlight></codeline>
<codeline lineno="7197"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>BeginTabBar,<sp/>EndTabBar,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7199"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BeginTabBar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BeginTabBarEx()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>EndTabBar()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarLayout()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarCalcTabID()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarCalcMaxTabWidth()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarFindTabById()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarAddTab()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarRemoveTab()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarCloseTab()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarScrollClamp()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarScrollToTab()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarQueueChangeTabOrder()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarScrollingButtons()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7214"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabBarTabListPopupButton()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7215"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7216"><highlight class="normal"></highlight></codeline>
<codeline lineno="7217" refid="struct_im_gui_tab_bar_section" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui_tab_bar_section" kindref="compound">ImGuiTabBarSection</ref></highlight></codeline>
<codeline lineno="7218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>tabs<sp/>in<sp/>this<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>of<sp/>width<sp/>of<sp/>tabs<sp/>in<sp/>this<sp/>section<sp/>(after<sp/>shrinking<sp/>down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spacing;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>spacing<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7222"><highlight class="normal"></highlight></codeline>
<codeline lineno="7223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar_section" kindref="compound">ImGuiTabBarSection</ref>()<sp/>{<sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="7224"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7225"><highlight class="normal"></highlight></codeline>
<codeline lineno="7226"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ImGui</highlight></codeline>
<codeline lineno="7227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarLayout(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar);</highlight></codeline>
<codeline lineno="7229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ImU32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarCalcTabID(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>docked_window);</highlight></codeline>
<codeline lineno="7230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarCalcMaxTabWidth();</highlight></codeline>
<codeline lineno="7231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarScrollClamp(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scrolling);</highlight></codeline>
<codeline lineno="7232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarScrollToTab(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/>ImGuiID<sp/>tab_id,<sp/><ref refid="struct_im_gui_tab_bar_section" kindref="compound">ImGuiTabBarSection</ref>*<sp/>sections);</highlight></codeline>
<codeline lineno="7233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/><sp/><sp/><sp/>TabBarScrollingButtons(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar);</highlight></codeline>
<codeline lineno="7234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/><sp/><sp/><sp/>TabBarTabListPopupButton(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar);</highlight></codeline>
<codeline lineno="7235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7236"><highlight class="normal"></highlight></codeline>
<codeline lineno="7237"><highlight class="normal">ImGuiTabBar::ImGuiTabBar()</highlight></codeline>
<codeline lineno="7238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7239"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/><sp/><sp/>CurrFrameVisible<sp/>=<sp/>PrevFrameVisible<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/><sp/><sp/>LastTabItemIdx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"></highlight></codeline>
<codeline lineno="7244"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TabItemGetSectionIdx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab)</highlight></codeline>
<codeline lineno="7245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Leading)<sp/>?<sp/>0<sp/>:<sp/>(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Trailing)<sp/>?<sp/>2<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="7247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"></highlight></codeline>
<codeline lineno="7249"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IMGUI_CDECL<sp/>TabItemComparerBySection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>rhs)</highlight></codeline>
<codeline lineno="7250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>a<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*)lhs;</highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>b<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*)rhs;</highlight></codeline>
<codeline lineno="7253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_section<sp/>=<sp/>TabItemGetSectionIdx(a);</highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b_section<sp/>=<sp/>TabItemGetSectionIdx(b);</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_section<sp/>!=<sp/>b_section)</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_section<sp/>-<sp/>b_section;</highlight></codeline>
<codeline lineno="7257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(a-&gt;IndexDuringLayout<sp/>-<sp/>b-&gt;IndexDuringLayout);</highlight></codeline>
<codeline lineno="7258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"></highlight></codeline>
<codeline lineno="7260"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IMGUI_CDECL<sp/>TabItemComparerByBeginOrder(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>rhs)</highlight></codeline>
<codeline lineno="7261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>a<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*)lhs;</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>b<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*)rhs;</highlight></codeline>
<codeline lineno="7264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(a-&gt;BeginOrder<sp/>-<sp/>b-&gt;BeginOrder);</highlight></codeline>
<codeline lineno="7265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"></highlight></codeline>
<codeline lineno="7267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>GetTabBarFromTabBarRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_ptr_or_index" kindref="compound">ImGuiPtrOrIndex</ref>&amp;<sp/>ref)</highlight></codeline>
<codeline lineno="7268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref.Ptr<sp/>?<sp/>(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*)ref.Ptr<sp/>:<sp/>g.TabBars.GetByIndex(ref.Index);</highlight></codeline>
<codeline lineno="7271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7272"><highlight class="normal"></highlight></codeline>
<codeline lineno="7273"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_ptr_or_index" kindref="compound">ImGuiPtrOrIndex</ref><sp/>GetTabBarRefFromTabBar(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar)</highlight></codeline>
<codeline lineno="7274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.TabBars.Contains(tab_bar))</highlight></codeline>
<codeline lineno="7277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_ptr_or_index" kindref="compound">ImGuiPtrOrIndex</ref>(g.TabBars.GetIndex(tab_bar));</highlight></codeline>
<codeline lineno="7278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_ptr_or_index" kindref="compound">ImGuiPtrOrIndex</ref>(tab_bar);</highlight></codeline>
<codeline lineno="7279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7280"><highlight class="normal"></highlight></codeline>
<codeline lineno="7281"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::BeginTabBar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_id,<sp/>ImGuiTabBarFlags<sp/>flags)</highlight></codeline>
<codeline lineno="7282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="7285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="7286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7287"><highlight class="normal"></highlight></codeline>
<codeline lineno="7288"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>window-&gt;GetID(str_id);</highlight></codeline>
<codeline lineno="7289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar<sp/>=<sp/>g.TabBars.GetOrAddByKey(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>tab_bar_bb<sp/>=<sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>(window-&gt;DC.CursorPos.x,<sp/>window-&gt;DC.CursorPos.y,<sp/>window-&gt;WorkRect.Max.x,<sp/>window-&gt;DC.CursorPos.y<sp/>+<sp/>g.FontSize<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="7291"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;ID<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="7292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BeginTabBarEx(tab_bar,<sp/>tab_bar_bb,<sp/>flags<sp/>|<sp/>ImGuiTabBarFlags_IsFocused,<sp/>NULL);</highlight></codeline>
<codeline lineno="7293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7294"><highlight class="normal"></highlight></codeline>
<codeline lineno="7295"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::BeginTabBarEx(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>tab_bar_bb,<sp/>ImGuiTabBarFlags<sp/>flags,<sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>dock_node)</highlight></codeline>
<codeline lineno="7296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="7299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="7300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"></highlight></codeline>
<codeline lineno="7302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiTabBarFlags_DockNode)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushOverrideID(tab_bar-&gt;ID);</highlight></codeline>
<codeline lineno="7304"><highlight class="normal"></highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/><sp/><sp/>g.CurrentTabBarStack.push_back(GetTabBarRefFromTabBar(tab_bar));</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"><sp/><sp/><sp/><sp/>g.CurrentTabBar<sp/>=<sp/>tab_bar;</highlight></codeline>
<codeline lineno="7308"><highlight class="normal"></highlight></codeline>
<codeline lineno="7309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>with<sp/>multiple<sp/>BeginTabBar()/EndTabBar()<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7310"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;BackupCursorPos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="7311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;CurrFrameVisible<sp/>==<sp/>g.FrameCount)</highlight></codeline>
<codeline lineno="7312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(tab_bar-&gt;BarRect.Min.x,<sp/>tab_bar-&gt;BarRect.Max.y<sp/>+<sp/>tab_bar-&gt;ItemSpacingY);</highlight></codeline>
<codeline lineno="7314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;BeginCount++;</highlight></codeline>
<codeline lineno="7315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7317"><highlight class="normal"></highlight></codeline>
<codeline lineno="7318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>correct<sp/>ordering<sp/>when<sp/>toggling<sp/>ImGuiTabBarFlags_Reorderable<sp/>flag,<sp/>or<sp/>when<sp/>a<sp/>new<sp/>tab<sp/>was<sp/>added<sp/>while<sp/>being<sp/>not<sp/>reorderable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiTabBarFlags_Reorderable)<sp/>!=<sp/>(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_Reorderable)<sp/>||<sp/>(tab_bar-&gt;TabsAddedNew<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiTabBarFlags_Reorderable)))</highlight></codeline>
<codeline lineno="7320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiTabBarFlags_DockNode)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>TabBar<sp/>with<sp/>DockNode<sp/>can<sp/>now<sp/>be<sp/>hybrid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImQsort(tab_bar-&gt;Tabs.Data,<sp/>tab_bar-&gt;Tabs.Size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>),<sp/>TabItemComparerByBeginOrder);</highlight></codeline>
<codeline lineno="7322"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;TabsAddedNew<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7323"><highlight class="normal"></highlight></codeline>
<codeline lineno="7324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiTabBarFlags_FittingPolicyMask_)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiTabBarFlags_FittingPolicyDefault_;</highlight></codeline>
<codeline lineno="7327"><highlight class="normal"></highlight></codeline>
<codeline lineno="7328"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;Flags<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="7329"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;BarRect<sp/>=<sp/>tab_bar_bb;</highlight></codeline>
<codeline lineno="7330"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;WantLayout<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Layout<sp/>will<sp/>be<sp/>done<sp/>on<sp/>the<sp/>first<sp/>call<sp/>to<sp/>ItemTab()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7331"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;PrevFrameVisible<sp/>=<sp/>tab_bar-&gt;CurrFrameVisible;</highlight></codeline>
<codeline lineno="7332"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;CurrFrameVisible<sp/>=<sp/>g.FrameCount;</highlight></codeline>
<codeline lineno="7333"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;PrevTabsContentsHeight<sp/>=<sp/>tab_bar-&gt;CurrTabsContentsHeight;</highlight></codeline>
<codeline lineno="7334"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;CurrTabsContentsHeight<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="7335"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;ItemSpacingY<sp/>=<sp/>g.Style.ItemSpacing.y;</highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;FramePadding<sp/>=<sp/>g.Style.FramePadding;</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;TabsActiveCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7338"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;BeginCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7339"><highlight class="normal"></highlight></codeline>
<codeline lineno="7340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>cursor<sp/>pos<sp/>in<sp/>a<sp/>way<sp/>which<sp/>only<sp/>be<sp/>used<sp/>in<sp/>the<sp/>off-chance<sp/>the<sp/>user<sp/>erroneously<sp/>submits<sp/>item<sp/>before<sp/>BeginTabItem():<sp/>items<sp/>will<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7341"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(tab_bar-&gt;BarRect.Min.x,<sp/>tab_bar-&gt;BarRect.Max.y<sp/>+<sp/>tab_bar-&gt;ItemSpacingY);</highlight></codeline>
<codeline lineno="7342"><highlight class="normal"></highlight></codeline>
<codeline lineno="7343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>separator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col<sp/>=<sp/>GetColorU32((flags<sp/>&amp;<sp/>ImGuiTabBarFlags_IsFocused)<sp/>?<sp/>ImGuiCol_TabActive<sp/>:<sp/>ImGuiCol_TabUnfocusedActive);</highlight></codeline>
<codeline lineno="7345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>tab_bar-&gt;BarRect.Max.y<sp/>-<sp/>1.0f;</highlight></codeline>
<codeline lineno="7346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dock_node<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>separator_min_x<sp/>=<sp/>dock_node-&gt;Pos.x<sp/>+<sp/>window-&gt;WindowBorderSize;</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>separator_max_x<sp/>=<sp/>dock_node-&gt;Pos.x<sp/>+<sp/>dock_node-&gt;Size.x<sp/>-<sp/>window-&gt;WindowBorderSize;</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddLine(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(separator_min_x,<sp/>y),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(separator_max_x,<sp/>y),<sp/>col,<sp/>1.0f);</highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>separator_min_x<sp/>=<sp/>tab_bar-&gt;BarRect.Min.x<sp/>-<sp/>IM_FLOOR(window-&gt;WindowPadding.x<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="7355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>separator_max_x<sp/>=<sp/>tab_bar-&gt;BarRect.Max.x<sp/>+<sp/>IM_FLOOR(window-&gt;WindowPadding.x<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="7356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DrawList-&gt;AddLine(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(separator_min_x,<sp/>y),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(separator_max_x,<sp/>y),<sp/>col,<sp/>1.0f);</highlight></codeline>
<codeline lineno="7357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7360"><highlight class="normal"></highlight></codeline>
<codeline lineno="7361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::EndTabBar()</highlight></codeline>
<codeline lineno="7362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="7365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="7366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7367"><highlight class="normal"></highlight></codeline>
<codeline lineno="7368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar<sp/>=<sp/>g.CurrentTabBar;</highlight></codeline>
<codeline lineno="7369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT_USER_ERROR(tab_bar<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Mismatched<sp/>BeginTabBar()/EndTabBar()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"></highlight></codeline>
<codeline lineno="7375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback<sp/>in<sp/>case<sp/>no<sp/>TabItem<sp/>have<sp/>been<sp/>submitted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;WantLayout)</highlight></codeline>
<codeline lineno="7377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarLayout(tab_bar);</highlight></codeline>
<codeline lineno="7378"><highlight class="normal"></highlight></codeline>
<codeline lineno="7379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>last<sp/>visible<sp/>height<sp/>if<sp/>no<sp/>tab<sp/>is<sp/>visible,<sp/>this<sp/>reduce<sp/>vertical<sp/>flicker/movement<sp/>when<sp/>a<sp/>tabs<sp/>gets<sp/>removed<sp/>without<sp/>calling<sp/>SetTabItemClosed().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tab_bar_appearing<sp/>=<sp/>(tab_bar-&gt;PrevFrameVisible<sp/>+<sp/>1<sp/>&lt;<sp/>g.FrameCount);</highlight></codeline>
<codeline lineno="7381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;VisibleTabWasSubmitted<sp/>||<sp/>tab_bar-&gt;VisibleTabId<sp/>==<sp/>0<sp/>||<sp/>tab_bar_appearing)</highlight></codeline>
<codeline lineno="7382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;CurrTabsContentsHeight<sp/>=<sp/>ImMax(window-&gt;DC.CursorPos.y<sp/>-<sp/>tab_bar-&gt;BarRect.Max.y,<sp/>tab_bar-&gt;CurrTabsContentsHeight);</highlight></codeline>
<codeline lineno="7384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos.y<sp/>=<sp/>tab_bar-&gt;BarRect.Max.y<sp/>+<sp/>tab_bar-&gt;CurrTabsContentsHeight;</highlight></codeline>
<codeline lineno="7385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos.y<sp/>=<sp/>tab_bar-&gt;BarRect.Max.y<sp/>+<sp/>tab_bar-&gt;PrevTabsContentsHeight;</highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;BeginCount<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="7391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>tab_bar-&gt;BackupCursorPos;</highlight></codeline>
<codeline lineno="7392"><highlight class="normal"></highlight></codeline>
<codeline lineno="7393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_DockNode)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="7395"><highlight class="normal"></highlight></codeline>
<codeline lineno="7396"><highlight class="normal"><sp/><sp/><sp/><sp/>g.CurrentTabBarStack.pop_back();</highlight></codeline>
<codeline lineno="7397"><highlight class="normal"><sp/><sp/><sp/><sp/>g.CurrentTabBar<sp/>=<sp/>g.CurrentTabBarStack.empty()<sp/>?<sp/>NULL<sp/>:<sp/>GetTabBarFromTabBarRef(g.CurrentTabBarStack.back());</highlight></codeline>
<codeline lineno="7398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7399"><highlight class="normal"></highlight></codeline>
<codeline lineno="7400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>called<sp/>only<sp/>once<sp/>a<sp/>frame<sp/>before<sp/>by<sp/>the<sp/>first<sp/>call<sp/>to<sp/>ItemTab()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>reason<sp/>we&apos;re<sp/>not<sp/>calling<sp/>it<sp/>in<sp/>BeginTabBar()<sp/>is<sp/>to<sp/>leave<sp/>a<sp/>chance<sp/>to<sp/>the<sp/>user<sp/>to<sp/>call<sp/>the<sp/>SetTabItemClosed()<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7402"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TabBarLayout(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar)</highlight></codeline>
<codeline lineno="7403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;WantLayout<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"></highlight></codeline>
<codeline lineno="7407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Garbage<sp/>collect<sp/>by<sp/>compacting<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>if<sp/>we<sp/>need<sp/>to<sp/>sort<sp/>out<sp/>tab<sp/>list<sp/>(e.g.<sp/>in<sp/>rare<sp/>case<sp/>where<sp/>a<sp/>tab<sp/>changed<sp/>section)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_dst_n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>need_sort_by_section<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar_section" kindref="compound">ImGuiTabBarSection</ref><sp/>sections[3];<sp/></highlight><highlight class="comment">//<sp/>Layout<sp/>sections:<sp/>Leading,<sp/>Central,<sp/>Trailing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_src_n<sp/>=<sp/>0;<sp/>tab_src_n<sp/>&lt;<sp/>tab_bar-&gt;Tabs.Size;<sp/>tab_src_n++)</highlight></codeline>
<codeline lineno="7413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[tab_src_n];</highlight></codeline>
<codeline lineno="7415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab-&gt;LastFrameVisible<sp/>&lt;<sp/>tab_bar-&gt;PrevFrameVisible<sp/>||<sp/>tab-&gt;WantClose)</highlight></codeline>
<codeline lineno="7416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;VisibleTabId<sp/>==<sp/>tab-&gt;ID)<sp/>{<sp/>tab_bar-&gt;VisibleTabId<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="7419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;SelectedTabId<sp/>==<sp/>tab-&gt;ID)<sp/>{<sp/>tab_bar-&gt;SelectedTabId<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="7420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;NextSelectedTabId<sp/>==<sp/>tab-&gt;ID)<sp/>{<sp/>tab_bar-&gt;NextSelectedTabId<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="7421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_dst_n<sp/>!=<sp/>tab_src_n)</highlight></codeline>
<codeline lineno="7424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;Tabs[tab_dst_n]<sp/>=<sp/>tab_bar-&gt;Tabs[tab_src_n];</highlight></codeline>
<codeline lineno="7425"><highlight class="normal"></highlight></codeline>
<codeline lineno="7426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[tab_dst_n];</highlight></codeline>
<codeline lineno="7427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;IndexDuringLayout<sp/>=<sp/>(ImS16)tab_dst_n;</highlight></codeline>
<codeline lineno="7428"><highlight class="normal"></highlight></codeline>
<codeline lineno="7429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>need<sp/>sorting<sp/>if<sp/>tabs<sp/>have<sp/>changed<sp/>section<sp/>(e.g.<sp/>moved<sp/>from<sp/>one<sp/>of<sp/>Leading/Central/Trailing<sp/>to<sp/>another)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_tab_section_n<sp/>=<sp/>TabItemGetSectionIdx(tab);</highlight></codeline>
<codeline lineno="7431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_dst_n<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>prev_tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[tab_dst_n<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_tab_section_n<sp/>=<sp/>TabItemGetSectionIdx(prev_tab);</highlight></codeline>
<codeline lineno="7435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_tab_section_n<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>prev_tab_section_n<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>need_sort_by_section<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_tab_section_n<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>curr_tab_section_n<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>need_sort_by_section<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"></highlight></codeline>
<codeline lineno="7441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sections[curr_tab_section_n].TabCount++;</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_dst_n++;</highlight></codeline>
<codeline lineno="7443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;Tabs.Size<sp/>!=<sp/>tab_dst_n)</highlight></codeline>
<codeline lineno="7445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;Tabs.resize(tab_dst_n);</highlight></codeline>
<codeline lineno="7446"><highlight class="normal"></highlight></codeline>
<codeline lineno="7447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(need_sort_by_section)</highlight></codeline>
<codeline lineno="7448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImQsort(tab_bar-&gt;Tabs.Data,<sp/>tab_bar-&gt;Tabs.Size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>),<sp/>TabItemComparerBySection);</highlight></codeline>
<codeline lineno="7449"><highlight class="normal"></highlight></codeline>
<codeline lineno="7450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>spacing<sp/>between<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7451"><highlight class="normal"><sp/><sp/><sp/><sp/>sections[0].Spacing<sp/>=<sp/>sections[0].TabCount<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(sections[1].TabCount<sp/>+<sp/>sections[2].TabCount)<sp/>&gt;<sp/>0<sp/>?<sp/>g.Style.ItemInnerSpacing.x<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="7452"><highlight class="normal"><sp/><sp/><sp/><sp/>sections[1].Spacing<sp/>=<sp/>sections[1].TabCount<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>sections[2].TabCount<sp/>&gt;<sp/>0<sp/>?<sp/>g.Style.ItemInnerSpacing.x<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="7453"><highlight class="normal"></highlight></codeline>
<codeline lineno="7454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>next<sp/>selected<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7455"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiID<sp/>scroll_to_tab_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7456"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(tab_bar-&gt;NextSelectedTabId)</highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;SelectedTabId<sp/>=<sp/>tab_bar-&gt;NextSelectedTabId;</highlight></codeline>
<codeline lineno="7459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;NextSelectedTabId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroll_to_tab_id<sp/>=<sp/>tab_bar-&gt;SelectedTabId;</highlight></codeline>
<codeline lineno="7461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"></highlight></codeline>
<codeline lineno="7463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>order<sp/>change<sp/>request<sp/>(we<sp/>could<sp/>probably<sp/>process<sp/>it<sp/>when<sp/>requested<sp/>but<sp/>it&apos;s<sp/>just<sp/>saner<sp/>to<sp/>do<sp/>it<sp/>in<sp/>a<sp/>single<sp/>spot).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;ReorderRequestTabId<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TabBarProcessReorder(tab_bar))</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;ReorderRequestTabId<sp/>==<sp/>tab_bar-&gt;SelectedTabId)</highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroll_to_tab_id<sp/>=<sp/>tab_bar-&gt;ReorderRequestTabId;</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;ReorderRequestTabId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"></highlight></codeline>
<codeline lineno="7472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tab<sp/>List<sp/>Popup<sp/>(will<sp/>alter<sp/>tab_bar-&gt;BarRect<sp/>and<sp/>therefore<sp/>the<sp/>available<sp/>width!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tab_list_popup_button<sp/>=<sp/>(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_TabListPopupButton)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="7474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_list_popup_button)</highlight></codeline>
<codeline lineno="7475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab_to_select<sp/>=<sp/>TabBarTabListPopupButton(tab_bar))<sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>Will<sp/>alter<sp/>BarRect.Min.x!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroll_to_tab_id<sp/>=<sp/>tab_bar-&gt;SelectedTabId<sp/>=<sp/>tab_to_select-&gt;ID;</highlight></codeline>
<codeline lineno="7477"><highlight class="normal"></highlight></codeline>
<codeline lineno="7478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Leading/Trailing<sp/>tabs<sp/>will<sp/>be<sp/>shrink<sp/>only<sp/>if<sp/>central<sp/>one<sp/>aren&apos;t<sp/>visible<sp/>anymore,<sp/>so<sp/>layout<sp/>the<sp/>shrink<sp/>data<sp/>as:<sp/>leading,<sp/>trailing,<sp/>central</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(whereas<sp/>our<sp/>tabs<sp/>are<sp/>stored<sp/>as:<sp/>leading,<sp/>central,<sp/>trailing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shrink_buffer_indexes[3]<sp/>=<sp/>{<sp/>0,<sp/>sections[0].TabCount<sp/>+<sp/>sections[2].TabCount,<sp/>sections[0].TabCount<sp/>};</highlight></codeline>
<codeline lineno="7481"><highlight class="normal"><sp/><sp/><sp/><sp/>g.ShrinkWidthBuffer.resize(tab_bar-&gt;Tabs.Size);</highlight></codeline>
<codeline lineno="7482"><highlight class="normal"></highlight></codeline>
<codeline lineno="7483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>ideal<sp/>tabs<sp/>widths<sp/>+<sp/>store<sp/>them<sp/>into<sp/>shrink<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>most_recently_selected_tab<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_section_n<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found_selected_tab_id<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_n<sp/>=<sp/>0;<sp/>tab_n<sp/>&lt;<sp/>tab_bar-&gt;Tabs.Size;<sp/>tab_n++)</highlight></codeline>
<codeline lineno="7488"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[tab_n];</highlight></codeline>
<codeline lineno="7490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(tab-&gt;LastFrameVisible<sp/>&gt;=<sp/>tab_bar-&gt;PrevFrameVisible);</highlight></codeline>
<codeline lineno="7491"><highlight class="normal"></highlight></codeline>
<codeline lineno="7492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((most_recently_selected_tab<sp/>==<sp/>NULL<sp/>||<sp/>most_recently_selected_tab-&gt;LastFrameSelected<sp/>&lt;<sp/>tab-&gt;LastFrameSelected)<sp/>&amp;&amp;<sp/>!(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Button))</highlight></codeline>
<codeline lineno="7493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>most_recently_selected_tab<sp/>=<sp/>tab;</highlight></codeline>
<codeline lineno="7494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab-&gt;ID<sp/>==<sp/>tab_bar-&gt;SelectedTabId)</highlight></codeline>
<codeline lineno="7495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found_selected_tab_id<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scroll_to_tab_id<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>g.NavJustMovedToId<sp/>==<sp/>tab-&gt;ID)</highlight></codeline>
<codeline lineno="7497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroll_to_tab_id<sp/>=<sp/>tab-&gt;ID;</highlight></codeline>
<codeline lineno="7498"><highlight class="normal"></highlight></codeline>
<codeline lineno="7499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refresh<sp/>tab<sp/>width<sp/>immediately,<sp/>otherwise<sp/>changes<sp/>of<sp/>style<sp/>e.g.<sp/>style.FramePadding.x<sp/>would<sp/>noticeably<sp/>lag<sp/>in<sp/>the<sp/>tab<sp/>bar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additionally,<sp/>when<sp/>using<sp/>TabBarAddTab()<sp/>to<sp/>manipulate<sp/>tab<sp/>bar<sp/>order<sp/>we<sp/>occasionally<sp/>insert<sp/>new<sp/>tabs<sp/>that<sp/>don&apos;t<sp/>have<sp/>a<sp/>width<sp/>yet,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>we<sp/>cannot<sp/>wait<sp/>for<sp/>the<sp/>next<sp/>BeginTabItem()<sp/>call.<sp/>We<sp/>cannot<sp/>compute<sp/>this<sp/>width<sp/>within<sp/>TabBarAddTab()<sp/>because<sp/>font<sp/>size<sp/>depends<sp/>on<sp/>the<sp/>active<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tab_name<sp/>=<sp/>tab_bar-&gt;GetTabName(tab);</highlight></codeline>
<codeline lineno="7503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_close_button<sp/>=<sp/>(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_NoCloseButton)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="7504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;ContentWidth<sp/>=<sp/>TabItemCalcSize(tab_name,<sp/>has_close_button).x;</highlight></codeline>
<codeline lineno="7505"><highlight class="normal"></highlight></codeline>
<codeline lineno="7506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section_n<sp/>=<sp/>TabItemGetSectionIdx(tab);</highlight></codeline>
<codeline lineno="7507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar_section" kindref="compound">ImGuiTabBarSection</ref>*<sp/>section<sp/>=<sp/>&amp;sections[section_n];</highlight></codeline>
<codeline lineno="7508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section-&gt;Width<sp/>+=<sp/>tab-&gt;ContentWidth<sp/>+<sp/>(section_n<sp/>==<sp/>curr_section_n<sp/>?<sp/>g.Style.ItemInnerSpacing.x<sp/>:<sp/>0.0f);</highlight></codeline>
<codeline lineno="7509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_section_n<sp/>=<sp/>section_n;</highlight></codeline>
<codeline lineno="7510"><highlight class="normal"></highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>data<sp/>so<sp/>we<sp/>can<sp/>build<sp/>an<sp/>array<sp/>sorted<sp/>by<sp/>width<sp/>if<sp/>we<sp/>need<sp/>to<sp/>shrink<sp/>tabs<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_MSVC_WARNING_SUPPRESS(6385);</highlight></codeline>
<codeline lineno="7513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shrink_buffer_index<sp/>=<sp/>shrink_buffer_indexes[section_n]++;</highlight></codeline>
<codeline lineno="7514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ShrinkWidthBuffer[shrink_buffer_index].Index<sp/>=<sp/>tab_n;</highlight></codeline>
<codeline lineno="7515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ShrinkWidthBuffer[shrink_buffer_index].Width<sp/>=<sp/>tab-&gt;ContentWidth;</highlight></codeline>
<codeline lineno="7516"><highlight class="normal"></highlight></codeline>
<codeline lineno="7517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(tab-&gt;ContentWidth<sp/>&gt;<sp/>0.0f);</highlight></codeline>
<codeline lineno="7518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;Width<sp/>=<sp/>tab-&gt;ContentWidth;</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7520"><highlight class="normal"></highlight></codeline>
<codeline lineno="7521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>total<sp/>ideal<sp/>width<sp/>(used<sp/>for<sp/>e.g.<sp/>auto-resizing<sp/>a<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7522"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;WidthAllTabsIdeal<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="7523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section_n<sp/>=<sp/>0;<sp/>section_n<sp/>&lt;<sp/>3;<sp/>section_n++)</highlight></codeline>
<codeline lineno="7524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;WidthAllTabsIdeal<sp/>+=<sp/>sections[section_n].Width<sp/>+<sp/>sections[section_n].Spacing;</highlight></codeline>
<codeline lineno="7525"><highlight class="normal"></highlight></codeline>
<codeline lineno="7526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>scrolling<sp/>buttons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(note<sp/>that<sp/>TabBarScrollButtons()<sp/>will<sp/>alter<sp/>BarRect.Max.x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7528"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>((tab_bar-&gt;WidthAllTabsIdeal<sp/>&gt;<sp/>tab_bar-&gt;BarRect.GetWidth()<sp/>&amp;&amp;<sp/>tab_bar-&gt;Tabs.Size<sp/>&gt;<sp/>1)<sp/>&amp;&amp;<sp/>!(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_NoTabListScrollingButtons)<sp/>&amp;&amp;<sp/>(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_FittingPolicyScroll))</highlight></codeline>
<codeline lineno="7529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>scroll_and_select_tab<sp/>=<sp/>TabBarScrollingButtons(tab_bar))</highlight></codeline>
<codeline lineno="7530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroll_to_tab_id<sp/>=<sp/>scroll_and_select_tab-&gt;ID;</highlight></codeline>
<codeline lineno="7532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((scroll_and_select_tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Button)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;SelectedTabId<sp/>=<sp/>scroll_to_tab_id;</highlight></codeline>
<codeline lineno="7534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7535"><highlight class="normal"></highlight></codeline>
<codeline lineno="7536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shrink<sp/>widths<sp/>if<sp/>full<sp/>tabs<sp/>don&apos;t<sp/>fit<sp/>in<sp/>their<sp/>allocated<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>section_0_w<sp/>=<sp/>sections[0].Width<sp/>+<sp/>sections[0].Spacing;</highlight></codeline>
<codeline lineno="7538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>section_1_w<sp/>=<sp/>sections[1].Width<sp/>+<sp/>sections[1].Spacing;</highlight></codeline>
<codeline lineno="7539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>section_2_w<sp/>=<sp/>sections[2].Width<sp/>+<sp/>sections[2].Spacing;</highlight></codeline>
<codeline lineno="7540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>central_section_is_visible<sp/>=<sp/>(section_0_w<sp/>+<sp/>section_2_w)<sp/>&lt;<sp/>tab_bar-&gt;BarRect.GetWidth();</highlight></codeline>
<codeline lineno="7541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width_excess;</highlight></codeline>
<codeline lineno="7542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(central_section_is_visible)</highlight></codeline>
<codeline lineno="7543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_excess<sp/>=<sp/>ImMax(section_1_w<sp/>-<sp/>(tab_bar-&gt;BarRect.GetWidth()<sp/>-<sp/>section_0_w<sp/>-<sp/>section_2_w),<sp/>0.0f);<sp/></highlight><highlight class="comment">//<sp/>Excess<sp/>used<sp/>to<sp/>shrink<sp/>central<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_excess<sp/>=<sp/>(section_0_w<sp/>+<sp/>section_2_w)<sp/>-<sp/>tab_bar-&gt;BarRect.GetWidth();<sp/></highlight><highlight class="comment">//<sp/>Excess<sp/>used<sp/>to<sp/>shrink<sp/>leading/trailing<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7546"><highlight class="normal"></highlight></codeline>
<codeline lineno="7547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>ImGuiTabBarFlags_FittingPolicyScroll<sp/>policy,<sp/>we<sp/>will<sp/>only<sp/>shrink<sp/>leading/trailing<sp/>if<sp/>the<sp/>central<sp/>section<sp/>is<sp/>not<sp/>visible<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width_excess<sp/>&gt;<sp/>0.0f<sp/>&amp;&amp;<sp/>((tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_FittingPolicyResizeDown)<sp/>||<sp/>!central_section_is_visible))</highlight></codeline>
<codeline lineno="7549"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shrink_data_count<sp/>=<sp/>(central_section_is_visible<sp/>?<sp/>sections[1].TabCount<sp/>:<sp/>sections[0].TabCount<sp/>+<sp/>sections[2].TabCount);</highlight></codeline>
<codeline lineno="7551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shrink_data_offset<sp/>=<sp/>(central_section_is_visible<sp/>?<sp/>sections[0].TabCount<sp/>+<sp/>sections[2].TabCount<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="7552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShrinkWidths(g.ShrinkWidthBuffer.Data<sp/>+<sp/>shrink_data_offset,<sp/>shrink_data_count,<sp/>width_excess);</highlight></codeline>
<codeline lineno="7553"><highlight class="normal"></highlight></codeline>
<codeline lineno="7554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>shrunk<sp/>values<sp/>into<sp/>tabs<sp/>and<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_n<sp/>=<sp/>shrink_data_offset;<sp/>tab_n<sp/>&lt;<sp/>shrink_data_offset<sp/>+<sp/>shrink_data_count;<sp/>tab_n++)</highlight></codeline>
<codeline lineno="7556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[g.ShrinkWidthBuffer[tab_n].Index];</highlight></codeline>
<codeline lineno="7558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shrinked_width<sp/>=<sp/>IM_FLOOR(g.ShrinkWidthBuffer[tab_n].Width);</highlight></codeline>
<codeline lineno="7559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shrinked_width<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="7560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7561"><highlight class="normal"></highlight></codeline>
<codeline lineno="7562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section_n<sp/>=<sp/>TabItemGetSectionIdx(tab);</highlight></codeline>
<codeline lineno="7563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sections[section_n].Width<sp/>-=<sp/>(tab-&gt;Width<sp/>-<sp/>shrinked_width);</highlight></codeline>
<codeline lineno="7564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;Width<sp/>=<sp/>shrinked_width;</highlight></codeline>
<codeline lineno="7565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7567"><highlight class="normal"></highlight></codeline>
<codeline lineno="7568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Layout<sp/>all<sp/>active<sp/>tabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section_tab_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tab_offset<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="7571"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;WidthAllTabs<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="7572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section_n<sp/>=<sp/>0;<sp/>section_n<sp/>&lt;<sp/>3;<sp/>section_n++)</highlight></codeline>
<codeline lineno="7573"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar_section" kindref="compound">ImGuiTabBarSection</ref>*<sp/>section<sp/>=<sp/>&amp;sections[section_n];</highlight></codeline>
<codeline lineno="7575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(section_n<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="7576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_offset<sp/>=<sp/>ImMin(ImMax(0.0f,<sp/>tab_bar-&gt;BarRect.GetWidth()<sp/>-<sp/>section-&gt;Width),<sp/>tab_offset);</highlight></codeline>
<codeline lineno="7577"><highlight class="normal"></highlight></codeline>
<codeline lineno="7578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_n<sp/>=<sp/>0;<sp/>tab_n<sp/>&lt;<sp/>section-&gt;TabCount;<sp/>tab_n++)</highlight></codeline>
<codeline lineno="7579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[section_tab_index<sp/>+<sp/>tab_n];</highlight></codeline>
<codeline lineno="7581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;Offset<sp/>=<sp/>tab_offset;</highlight></codeline>
<codeline lineno="7582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;NameOffset<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_offset<sp/>+=<sp/>tab-&gt;Width<sp/>+<sp/>(tab_n<sp/>&lt;<sp/>section-&gt;TabCount<sp/>-<sp/>1<sp/>?<sp/>g.Style.ItemInnerSpacing.x<sp/>:<sp/>0.0f);</highlight></codeline>
<codeline lineno="7584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;WidthAllTabs<sp/>+=<sp/>ImMax(section-&gt;Width<sp/>+<sp/>section-&gt;Spacing,<sp/>0.0f);</highlight></codeline>
<codeline lineno="7586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_offset<sp/>+=<sp/>section-&gt;Spacing;</highlight></codeline>
<codeline lineno="7587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section_tab_index<sp/>+=<sp/>section-&gt;TabCount;</highlight></codeline>
<codeline lineno="7588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7589"><highlight class="normal"></highlight></codeline>
<codeline lineno="7590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>name<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7591"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;TabsNames.Buf.resize(0);</highlight></codeline>
<codeline lineno="7592"><highlight class="normal"></highlight></codeline>
<codeline lineno="7593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>lost<sp/>the<sp/>selected<sp/>tab,<sp/>select<sp/>the<sp/>next<sp/>most<sp/>recently<sp/>active<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found_selected_tab_id<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;SelectedTabId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;SelectedTabId<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>tab_bar-&gt;NextSelectedTabId<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>most_recently_selected_tab<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroll_to_tab_id<sp/>=<sp/>tab_bar-&gt;SelectedTabId<sp/>=<sp/>most_recently_selected_tab-&gt;ID;</highlight></codeline>
<codeline lineno="7598"><highlight class="normal"></highlight></codeline>
<codeline lineno="7599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>in<sp/>visible<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7600"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;VisibleTabId<sp/>=<sp/>tab_bar-&gt;SelectedTabId;</highlight></codeline>
<codeline lineno="7601"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;VisibleTabWasSubmitted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7602"><highlight class="normal"></highlight></codeline>
<codeline lineno="7603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL+TAB<sp/>can<sp/>override<sp/>visible<sp/>tab<sp/>temporarily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavWindowingTarget<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>g.NavWindowingTarget-&gt;DockNode<sp/>&amp;&amp;<sp/>g.NavWindowingTarget-&gt;DockNode-&gt;TabBar<sp/>==<sp/>tab_bar)</highlight></codeline>
<codeline lineno="7605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;VisibleTabId<sp/>=<sp/>scroll_to_tab_id<sp/>=<sp/>g.NavWindowingTarget-&gt;ID;</highlight></codeline>
<codeline lineno="7606"><highlight class="normal"></highlight></codeline>
<codeline lineno="7607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>scrolling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scroll_to_tab_id<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="7609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarScrollToTab(tab_bar,<sp/>scroll_to_tab_id,<sp/>sections);</highlight></codeline>
<codeline lineno="7610"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingAnim<sp/>=<sp/>TabBarScrollClamp(tab_bar,<sp/>tab_bar-&gt;ScrollingAnim);</highlight></codeline>
<codeline lineno="7611"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingTarget<sp/>=<sp/>TabBarScrollClamp(tab_bar,<sp/>tab_bar-&gt;ScrollingTarget);</highlight></codeline>
<codeline lineno="7612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;ScrollingAnim<sp/>!=<sp/>tab_bar-&gt;ScrollingTarget)</highlight></codeline>
<codeline lineno="7613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scrolling<sp/>speed<sp/>adjust<sp/>itself<sp/>so<sp/>we<sp/>can<sp/>always<sp/>reach<sp/>our<sp/>target<sp/>in<sp/>1/3<sp/>seconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Teleport<sp/>if<sp/>we<sp/>are<sp/>aiming<sp/>far<sp/>off<sp/>the<sp/>visible<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingSpeed<sp/>=<sp/>ImMax(tab_bar-&gt;ScrollingSpeed,<sp/>70.0f<sp/>*<sp/>g.FontSize);</highlight></codeline>
<codeline lineno="7617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingSpeed<sp/>=<sp/>ImMax(tab_bar-&gt;ScrollingSpeed,<sp/>ImFabs(tab_bar-&gt;ScrollingTarget<sp/>-<sp/>tab_bar-&gt;ScrollingAnim)<sp/>/<sp/>0.3f);</highlight></codeline>
<codeline lineno="7618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>teleport<sp/>=<sp/>(tab_bar-&gt;PrevFrameVisible<sp/>+<sp/>1<sp/>&lt;<sp/>g.FrameCount)<sp/>||<sp/>(tab_bar-&gt;ScrollingTargetDistToVisibility<sp/>&gt;<sp/>10.0f<sp/>*<sp/>g.FontSize);</highlight></codeline>
<codeline lineno="7619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingAnim<sp/>=<sp/>teleport<sp/>?<sp/>tab_bar-&gt;ScrollingTarget<sp/>:<sp/>ImLinearSweep(tab_bar-&gt;ScrollingAnim,<sp/>tab_bar-&gt;ScrollingTarget,<sp/>g.IO.DeltaTime<sp/>*<sp/>tab_bar-&gt;ScrollingSpeed);</highlight></codeline>
<codeline lineno="7620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7622"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingSpeed<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="7624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7625"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingRectMinX<sp/>=<sp/>tab_bar-&gt;BarRect.Min.x<sp/>+<sp/>sections[0].Width<sp/>+<sp/>sections[0].Spacing;</highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingRectMaxX<sp/>=<sp/>tab_bar-&gt;BarRect.Max.x<sp/>-<sp/>sections[2].Width<sp/>-<sp/>sections[1].Spacing;</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"></highlight></codeline>
<codeline lineno="7628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>layout<sp/>in<sp/>host<sp/>window<sp/>(we<sp/>don&apos;t<sp/>do<sp/>it<sp/>in<sp/>BeginTabBar()<sp/>so<sp/>as<sp/>not<sp/>to<sp/>waste<sp/>an<sp/>extra<sp/>frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>tab_bar-&gt;BarRect.Min;</highlight></codeline>
<codeline lineno="7631"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(tab_bar-&gt;WidthAllTabs,<sp/>tab_bar-&gt;BarRect.GetHeight()),<sp/>tab_bar-&gt;FramePadding.y);</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.IdealMaxPos.x<sp/>=<sp/>ImMax(window-&gt;DC.IdealMaxPos.x,<sp/>tab_bar-&gt;BarRect.Min.x<sp/>+<sp/>tab_bar-&gt;WidthAllTabsIdeal);</highlight></codeline>
<codeline lineno="7633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7634"><highlight class="normal"></highlight></codeline>
<codeline lineno="7635"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dockable<sp/>uses<sp/>Name/ID<sp/>in<sp/>the<sp/>global<sp/>namespace.<sp/>Non-dockable<sp/>items<sp/>use<sp/>the<sp/>ID<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7636"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ImU32<sp/><sp/><sp/>ImGui::TabBarCalcTabID(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>docked_window)</highlight></codeline>
<codeline lineno="7637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(docked_window<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7639"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_UNUSED(tab_bar);</highlight></codeline>
<codeline lineno="7641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_DockNode);</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>ImHashStr(label);</highlight></codeline>
<codeline lineno="7643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeepAliveID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>GImGui-&gt;CurrentWindow;</highlight></codeline>
<codeline lineno="7649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window-&gt;GetID(label);</highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7652"><highlight class="normal"></highlight></codeline>
<codeline lineno="7653"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ImGui::TabBarCalcMaxTabWidth()</highlight></codeline>
<codeline lineno="7654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g.FontSize<sp/>*<sp/>20.0f;</highlight></codeline>
<codeline lineno="7657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7658"><highlight class="normal"></highlight></codeline>
<codeline lineno="7659"><highlight class="normal"><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>ImGui::TabBarFindTabByID(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/>ImGuiID<sp/>tab_id)</highlight></codeline>
<codeline lineno="7660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_id<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="7662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>tab_bar-&gt;Tabs.Size;<sp/>n++)</highlight></codeline>
<codeline lineno="7663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;Tabs[n].ID<sp/>==<sp/>tab_id)</highlight></codeline>
<codeline lineno="7664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;tab_bar-&gt;Tabs[n];</highlight></codeline>
<codeline lineno="7665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7667"><highlight class="normal"></highlight></codeline>
<codeline lineno="7668"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>See<sp/>references<sp/>to<sp/>#2304<sp/>in<sp/>TODO.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7669"><highlight class="normal"><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>ImGui::TabBarFindMostRecentlySelectedTabForActiveWindow(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar)</highlight></codeline>
<codeline lineno="7670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>most_recently_selected_tab<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_n<sp/>=<sp/>0;<sp/>tab_n<sp/>&lt;<sp/>tab_bar-&gt;Tabs.Size;<sp/>tab_n++)</highlight></codeline>
<codeline lineno="7673"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[tab_n];</highlight></codeline>
<codeline lineno="7675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(most_recently_selected_tab<sp/>==<sp/>NULL<sp/>||<sp/>most_recently_selected_tab-&gt;LastFrameSelected<sp/>&lt;<sp/>tab-&gt;LastFrameSelected)</highlight></codeline>
<codeline lineno="7676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab-&gt;Window<sp/>&amp;&amp;<sp/>tab-&gt;Window-&gt;WasActive)</highlight></codeline>
<codeline lineno="7677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>most_recently_selected_tab<sp/>=<sp/>tab;</highlight></codeline>
<codeline lineno="7678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>most_recently_selected_tab;</highlight></codeline>
<codeline lineno="7680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7681"><highlight class="normal"></highlight></codeline>
<codeline lineno="7682"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>purpose<sp/>of<sp/>this<sp/>call<sp/>is<sp/>to<sp/>register<sp/>tab<sp/>in<sp/>advance<sp/>so<sp/>we<sp/>can<sp/>control<sp/>their<sp/>order<sp/>at<sp/>the<sp/>time<sp/>they<sp/>appear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7683"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Otherwise<sp/>calling<sp/>this<sp/>is<sp/>unnecessary<sp/>as<sp/>tabs<sp/>are<sp/>appending<sp/>as<sp/>needed<sp/>by<sp/>the<sp/>BeginTabItem()<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7684"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TabBarAddTab(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/>ImGuiTabItemFlags<sp/>tab_flags,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window)</highlight></codeline>
<codeline lineno="7685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7687"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(TabBarFindTabByID(tab_bar,<sp/>window-&gt;ID)<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="7688"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(g.CurrentTabBar<sp/>!=<sp/>tab_bar);<sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>work<sp/>while<sp/>the<sp/>tab<sp/>bar<sp/>is<sp/>active<sp/>as<sp/>our<sp/>tab<sp/>doesn&apos;t<sp/>have<sp/>an<sp/>X<sp/>offset<sp/>yet,<sp/>in<sp/>theory<sp/>we<sp/>could/should<sp/>test<sp/>something<sp/>like<sp/>(tab_bar-&gt;CurrFrameVisible<sp/>&lt;<sp/>g.FrameCount)<sp/>but<sp/>we&apos;d<sp/>need<sp/>to<sp/>solve<sp/>why<sp/>triggers<sp/>the<sp/>commented<sp/>early-out<sp/>assert<sp/>in<sp/>BeginTabBarEx()<sp/>(probably<sp/>dock<sp/>node<sp/>going<sp/>from<sp/>implicit<sp/>to<sp/>explicit<sp/>in<sp/>same<sp/>frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7689"><highlight class="normal"></highlight></codeline>
<codeline lineno="7690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;HasCloseButton)</highlight></codeline>
<codeline lineno="7691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_flags<sp/>|=<sp/>ImGuiTabItemFlags_NoCloseButton;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>_NoCloseButton<sp/>immediately<sp/>because<sp/>it<sp/>will<sp/>be<sp/>used<sp/>for<sp/>first-frame<sp/>width<sp/>calculation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7692"><highlight class="normal"></highlight></codeline>
<codeline lineno="7693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref><sp/>new_tab;</highlight></codeline>
<codeline lineno="7694"><highlight class="normal"><sp/><sp/><sp/><sp/>new_tab.ID<sp/>=<sp/>window-&gt;ID;</highlight></codeline>
<codeline lineno="7695"><highlight class="normal"><sp/><sp/><sp/><sp/>new_tab.Flags<sp/>=<sp/>tab_flags;</highlight></codeline>
<codeline lineno="7696"><highlight class="normal"><sp/><sp/><sp/><sp/>new_tab.LastFrameVisible<sp/>=<sp/>tab_bar-&gt;CurrFrameVisible;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Required<sp/>so<sp/>BeginTabBar()<sp/>doesn&apos;t<sp/>ditch<sp/>the<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_tab.LastFrameVisible<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="7698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_tab.LastFrameVisible<sp/>=<sp/>g.FrameCount<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="7699"><highlight class="normal"><sp/><sp/><sp/><sp/>new_tab.Window<sp/>=<sp/>window;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Required<sp/>so<sp/>tab<sp/>bar<sp/>layout<sp/>can<sp/>compute<sp/>the<sp/>tab<sp/>width<sp/>before<sp/>tab<sp/>submission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7700"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;Tabs.push_back(new_tab);</highlight></codeline>
<codeline lineno="7701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7702"><highlight class="normal"></highlight></codeline>
<codeline lineno="7703"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>*TabId<sp/>fields<sp/>be<sp/>already<sp/>set<sp/>by<sp/>the<sp/>docking<sp/>system<sp/>_before_<sp/>the<sp/>actual<sp/>TabItem<sp/>was<sp/>created,<sp/>so<sp/>we<sp/>clear<sp/>them<sp/>regardless.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7704"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TabBarRemoveTab(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/>ImGuiID<sp/>tab_id)</highlight></codeline>
<codeline lineno="7705"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>TabBarFindTabByID(tab_bar,<sp/>tab_id))</highlight></codeline>
<codeline lineno="7707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;Tabs.erase(tab);</highlight></codeline>
<codeline lineno="7708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;VisibleTabId<sp/>==<sp/>tab_id)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>tab_bar-&gt;VisibleTabId<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="7709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;SelectedTabId<sp/>==<sp/>tab_id)<sp/><sp/><sp/><sp/><sp/>{<sp/>tab_bar-&gt;SelectedTabId<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="7710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;NextSelectedTabId<sp/>==<sp/>tab_id)<sp/>{<sp/>tab_bar-&gt;NextSelectedTabId<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="7711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7712"><highlight class="normal"></highlight></codeline>
<codeline lineno="7713"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Called<sp/>on<sp/>manual<sp/>closure<sp/>attempt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7714"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TabBarCloseTab(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab)</highlight></codeline>
<codeline lineno="7715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7716"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(!(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Button));</highlight></codeline>
<codeline lineno="7717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_UnsavedDocument))</highlight></codeline>
<codeline lineno="7718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>remove<sp/>a<sp/>frame<sp/>of<sp/>lag<sp/>for<sp/>selecting<sp/>another<sp/>tab<sp/>on<sp/>closure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However<sp/>we<sp/>don&apos;t<sp/>run<sp/>it<sp/>in<sp/>the<sp/>case<sp/>where<sp/>the<sp/>&apos;Unsaved&apos;<sp/>flag<sp/>is<sp/>set,<sp/>so<sp/>user<sp/>gets<sp/>a<sp/>chance<sp/>to<sp/>fully<sp/>undo<sp/>the<sp/>closure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;WantClose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;VisibleTabId<sp/>==<sp/>tab-&gt;ID)</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;LastFrameVisible<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;SelectedTabId<sp/>=<sp/>tab_bar-&gt;NextSelectedTabId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actually<sp/>select<sp/>before<sp/>expecting<sp/>closure<sp/>attempt<sp/>(on<sp/>an<sp/>UnsavedDocument<sp/>tab<sp/>user<sp/>is<sp/>expect<sp/>to<sp/>e.g.<sp/>show<sp/>a<sp/>popup)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;VisibleTabId<sp/>!=<sp/>tab-&gt;ID)</highlight></codeline>
<codeline lineno="7732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;NextSelectedTabId<sp/>=<sp/>tab-&gt;ID;</highlight></codeline>
<codeline lineno="7733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7735"><highlight class="normal"></highlight></codeline>
<codeline lineno="7736"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ImGui::TabBarScrollClamp(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scrolling)</highlight></codeline>
<codeline lineno="7737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7738"><highlight class="normal"><sp/><sp/><sp/><sp/>scrolling<sp/>=<sp/>ImMin(scrolling,<sp/>tab_bar-&gt;WidthAllTabs<sp/>-<sp/>tab_bar-&gt;BarRect.GetWidth());</highlight></codeline>
<codeline lineno="7739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImMax(scrolling,<sp/>0.0f);</highlight></codeline>
<codeline lineno="7740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7741"><highlight class="normal"></highlight></codeline>
<codeline lineno="7742"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>we<sp/>may<sp/>scroll<sp/>to<sp/>tab<sp/>that<sp/>are<sp/>not<sp/>selected!<sp/>e.g.<sp/>using<sp/>keyboard<sp/>arrow<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7743"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TabBarScrollToTab(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/>ImGuiID<sp/>tab_id,<sp/><ref refid="struct_im_gui_tab_bar_section" kindref="compound">ImGuiTabBarSection</ref>*<sp/>sections)</highlight></codeline>
<codeline lineno="7744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>TabBarFindTabByID(tab_bar,<sp/>tab_id);</highlight></codeline>
<codeline lineno="7746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_SectionMask_)</highlight></codeline>
<codeline lineno="7749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7750"><highlight class="normal"></highlight></codeline>
<codeline lineno="7751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>margin<sp/>=<sp/>g.FontSize<sp/>*<sp/>1.0f;<sp/></highlight><highlight class="comment">//<sp/>When<sp/>to<sp/>scroll<sp/>to<sp/>make<sp/>Tab<sp/>N+1<sp/>visible<sp/>always<sp/>make<sp/>a<sp/>bit<sp/>of<sp/>N<sp/>visible<sp/>to<sp/>suggest<sp/>more<sp/>scrolling<sp/>area<sp/>(since<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>scrollbar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order<sp/>=<sp/>tab_bar-&gt;GetTabOrder(tab);</highlight></codeline>
<codeline lineno="7754"><highlight class="normal"></highlight></codeline>
<codeline lineno="7755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scrolling<sp/>happens<sp/>only<sp/>in<sp/>the<sp/>central<sp/>section<sp/>(leading/trailing<sp/>sections<sp/>are<sp/>not<sp/>scrolling)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>is<sp/>all<sp/>confusing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scrollable_width<sp/>=<sp/>tab_bar-&gt;BarRect.GetWidth()<sp/>-<sp/>sections[0].Width<sp/>-<sp/>sections[2].Width<sp/>-<sp/>sections[1].Spacing;</highlight></codeline>
<codeline lineno="7758"><highlight class="normal"></highlight></codeline>
<codeline lineno="7759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>make<sp/>all<sp/>tabs<sp/>positions<sp/>all<sp/>relative<sp/>Sections[0].Width<sp/>to<sp/>make<sp/>code<sp/>simpler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tab_x1<sp/>=<sp/>tab-&gt;Offset<sp/>-<sp/>sections[0].Width<sp/>+<sp/>(order<sp/>&gt;<sp/>sections[0].TabCount<sp/>-<sp/>1<sp/>?<sp/>-margin<sp/>:<sp/>0.0f);</highlight></codeline>
<codeline lineno="7761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tab_x2<sp/>=<sp/>tab-&gt;Offset<sp/>-<sp/>sections[0].Width<sp/>+<sp/>tab-&gt;Width<sp/>+<sp/>(order<sp/>+<sp/>1<sp/>&lt;<sp/>tab_bar-&gt;Tabs.Size<sp/>-<sp/>sections[2].TabCount<sp/>?<sp/>margin<sp/>:<sp/>1.0f);</highlight></codeline>
<codeline lineno="7762"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingTargetDistToVisibility<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="7763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;ScrollingTarget<sp/>&gt;<sp/>tab_x1<sp/>||<sp/>(tab_x2<sp/>-<sp/>tab_x1<sp/>&gt;=<sp/>scrollable_width))</highlight></codeline>
<codeline lineno="7764"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scroll<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingTargetDistToVisibility<sp/>=<sp/>ImMax(tab_bar-&gt;ScrollingAnim<sp/>-<sp/>tab_x2,<sp/>0.0f);</highlight></codeline>
<codeline lineno="7767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingTarget<sp/>=<sp/>tab_x1;</highlight></codeline>
<codeline lineno="7768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;ScrollingTarget<sp/>&lt;<sp/>tab_x2<sp/>-<sp/>scrollable_width)</highlight></codeline>
<codeline lineno="7770"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scroll<sp/>to<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingTargetDistToVisibility<sp/>=<sp/>ImMax((tab_x1<sp/>-<sp/>scrollable_width)<sp/>-<sp/>tab_bar-&gt;ScrollingAnim,<sp/>0.0f);</highlight></codeline>
<codeline lineno="7773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;ScrollingTarget<sp/>=<sp/>tab_x2<sp/>-<sp/>scrollable_width;</highlight></codeline>
<codeline lineno="7774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7776"><highlight class="normal"></highlight></codeline>
<codeline lineno="7777"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TabBarQueueReorder(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="7778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7779"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(offset<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="7780"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(tab_bar-&gt;ReorderRequestTabId<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="7781"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;ReorderRequestTabId<sp/>=<sp/>tab-&gt;ID;</highlight></codeline>
<codeline lineno="7782"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;ReorderRequestOffset<sp/>=<sp/>(ImS16)offset;</highlight></codeline>
<codeline lineno="7783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7784"><highlight class="normal"></highlight></codeline>
<codeline lineno="7785"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TabBarQueueReorderFromMousePos(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>src_tab,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>mouse_pos)</highlight></codeline>
<codeline lineno="7786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7787"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7788"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(tab_bar-&gt;ReorderRequestTabId<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="7789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_Reorderable)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7791"><highlight class="normal"></highlight></codeline>
<codeline lineno="7792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_central_section<sp/>=<sp/>(src_tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_SectionMask_)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="7793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bar_offset<sp/>=<sp/>tab_bar-&gt;BarRect.Min.x<sp/>-<sp/>(is_central_section<sp/>?<sp/>tab_bar-&gt;ScrollingTarget<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="7794"><highlight class="normal"></highlight></codeline>
<codeline lineno="7795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>number<sp/>of<sp/>contiguous<sp/>tabs<sp/>we<sp/>are<sp/>crossing<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>(bar_offset<sp/>+<sp/>src_tab-&gt;Offset)<sp/>&gt;<sp/>mouse_pos.x<sp/>?<sp/>-1<sp/>:<sp/>+1;</highlight></codeline>
<codeline lineno="7797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_idx<sp/>=<sp/>tab_bar-&gt;Tabs.index_from_ptr(src_tab);</highlight></codeline>
<codeline lineno="7798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_idx<sp/>=<sp/>src_idx;</highlight></codeline>
<codeline lineno="7799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>src_idx;<sp/>i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>tab_bar-&gt;Tabs.Size;<sp/>i<sp/>+=<sp/>dir)</highlight></codeline>
<codeline lineno="7800"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reordered<sp/>tabs<sp/>must<sp/>share<sp/>the<sp/>same<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>dst_tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[i];</highlight></codeline>
<codeline lineno="7803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_NoReorder)</highlight></codeline>
<codeline lineno="7804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dst_tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_SectionMask_)<sp/>!=<sp/>(src_tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_SectionMask_))</highlight></codeline>
<codeline lineno="7806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_idx<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="7808"><highlight class="normal"></highlight></codeline>
<codeline lineno="7809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>spacing<sp/>after<sp/>tab,<sp/>so<sp/>when<sp/>mouse<sp/>cursor<sp/>is<sp/>between<sp/>tabs<sp/>we<sp/>would<sp/>not<sp/>continue<sp/>checking<sp/>further<sp/>tabs<sp/>that<sp/>are<sp/>not<sp/>hovered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>bar_offset<sp/>+<sp/>dst_tab-&gt;Offset<sp/>-<sp/>g.Style.ItemInnerSpacing.x;</highlight></codeline>
<codeline lineno="7811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>bar_offset<sp/>+<sp/>dst_tab-&gt;Offset<sp/>+<sp/>dst_tab-&gt;Width<sp/>+<sp/>g.Style.ItemInnerSpacing.x;</highlight></codeline>
<codeline lineno="7812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GetForegroundDrawList()-&gt;AddRect(ImVec2(x1,<sp/>tab_bar-&gt;BarRect.Min.y),<sp/>ImVec2(x2,<sp/>tab_bar-&gt;BarRect.Max.y),<sp/>IM_COL32(255,<sp/>0,<sp/>0,<sp/>255));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dir<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>mouse_pos.x<sp/>&gt;<sp/>x1)<sp/>||<sp/>(dir<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>mouse_pos.x<sp/>&lt;<sp/>x2))</highlight></codeline>
<codeline lineno="7814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7816"><highlight class="normal"></highlight></codeline>
<codeline lineno="7817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_idx<sp/>!=<sp/>src_idx)</highlight></codeline>
<codeline lineno="7818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarQueueReorder(tab_bar,<sp/>src_tab,<sp/>dst_idx<sp/>-<sp/>src_idx);</highlight></codeline>
<codeline lineno="7819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7820"><highlight class="normal"></highlight></codeline>
<codeline lineno="7821"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui::TabBarProcessReorder(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar)</highlight></codeline>
<codeline lineno="7822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab1<sp/>=<sp/>TabBarFindTabByID(tab_bar,<sp/>tab_bar-&gt;ReorderRequestTabId);</highlight></codeline>
<codeline lineno="7824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab1<sp/>==<sp/>NULL<sp/>||<sp/>(tab1-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_NoReorder))</highlight></codeline>
<codeline lineno="7825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7826"><highlight class="normal"></highlight></codeline>
<codeline lineno="7827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//IM_ASSERT(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_Reorderable);<sp/>//<sp/>&lt;-<sp/>this<sp/>may<sp/>happen<sp/>when<sp/>using<sp/>debug<sp/>tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab2_order<sp/>=<sp/>tab_bar-&gt;GetTabOrder(tab1)<sp/>+<sp/>tab_bar-&gt;ReorderRequestOffset;</highlight></codeline>
<codeline lineno="7829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab2_order<sp/>&lt;<sp/>0<sp/>||<sp/>tab2_order<sp/>&gt;=<sp/>tab_bar-&gt;Tabs.Size)</highlight></codeline>
<codeline lineno="7830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7831"><highlight class="normal"></highlight></codeline>
<codeline lineno="7832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reordered<sp/>tabs<sp/>must<sp/>share<sp/>the<sp/>same<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Note:<sp/>TabBarQueueReorderFromMousePos()<sp/>also<sp/>has<sp/>a<sp/>similar<sp/>test<sp/>but<sp/>since<sp/>we<sp/>allow<sp/>direct<sp/>calls<sp/>to<sp/>TabBarQueueReorder()<sp/>we<sp/>do<sp/>it<sp/>here<sp/>too)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab2<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[tab2_order];</highlight></codeline>
<codeline lineno="7835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab2-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_NoReorder)</highlight></codeline>
<codeline lineno="7836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tab1-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_SectionMask_)<sp/>!=<sp/>(tab2-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_SectionMask_))</highlight></codeline>
<codeline lineno="7838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7839"><highlight class="normal"></highlight></codeline>
<codeline lineno="7840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref><sp/>item_tmp<sp/>=<sp/>*tab1;</highlight></codeline>
<codeline lineno="7841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>src_tab<sp/>=<sp/>(tab_bar-&gt;ReorderRequestOffset<sp/>&gt;<sp/>0)<sp/>?<sp/>tab1<sp/>+<sp/>1<sp/>:<sp/>tab2;</highlight></codeline>
<codeline lineno="7842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>dst_tab<sp/>=<sp/>(tab_bar-&gt;ReorderRequestOffset<sp/>&gt;<sp/>0)<sp/>?<sp/>tab1<sp/>:<sp/>tab2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="7843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>move_count<sp/>=<sp/>(tab_bar-&gt;ReorderRequestOffset<sp/>&gt;<sp/>0)<sp/>?<sp/>tab_bar-&gt;ReorderRequestOffset<sp/>:<sp/>-tab_bar-&gt;ReorderRequestOffset;</highlight></codeline>
<codeline lineno="7844"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(dst_tab,<sp/>src_tab,<sp/>move_count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>));</highlight></codeline>
<codeline lineno="7845"><highlight class="normal"><sp/><sp/><sp/><sp/>*tab2<sp/>=<sp/>item_tmp;</highlight></codeline>
<codeline lineno="7846"><highlight class="normal"></highlight></codeline>
<codeline lineno="7847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_SaveSettings)</highlight></codeline>
<codeline lineno="7848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarkIniSettingsDirty();</highlight></codeline>
<codeline lineno="7849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7851"><highlight class="normal"></highlight></codeline>
<codeline lineno="7852"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>ImGui::TabBarScrollingButtons(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar)</highlight></codeline>
<codeline lineno="7853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="7856"><highlight class="normal"></highlight></codeline>
<codeline lineno="7857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>arrow_button_size(g.FontSize<sp/>-<sp/>2.0f,<sp/>g.FontSize<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="7858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scrolling_buttons_width<sp/>=<sp/>arrow_button_size.x<sp/>*<sp/>2.0f;</highlight></codeline>
<codeline lineno="7859"><highlight class="normal"></highlight></codeline>
<codeline lineno="7860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>backup_cursor_pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="7861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//window-&gt;DrawList-&gt;AddRect(ImVec2(tab_bar-&gt;BarRect.Max.x<sp/>-<sp/>scrolling_buttons_width,<sp/>tab_bar-&gt;BarRect.Min.y),<sp/>ImVec2(tab_bar-&gt;BarRect.Max.x,<sp/>tab_bar-&gt;BarRect.Max.y),<sp/>IM_COL32(255,0,0,255));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7862"><highlight class="normal"></highlight></codeline>
<codeline lineno="7863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>select_dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>arrow_col<sp/>=<sp/>g.Style.Colors[ImGuiCol_Text];</highlight></codeline>
<codeline lineno="7865"><highlight class="normal"><sp/><sp/><sp/><sp/>arrow_col.w<sp/>*=<sp/>0.5f;</highlight></codeline>
<codeline lineno="7866"><highlight class="normal"></highlight></codeline>
<codeline lineno="7867"><highlight class="normal"><sp/><sp/><sp/><sp/>PushStyleColor(ImGuiCol_Text,<sp/>arrow_col);</highlight></codeline>
<codeline lineno="7868"><highlight class="normal"><sp/><sp/><sp/><sp/>PushStyleColor(ImGuiCol_Button,<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0,<sp/>0,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="7869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>backup_repeat_delay<sp/>=<sp/>g.IO.KeyRepeatDelay;</highlight></codeline>
<codeline lineno="7870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>backup_repeat_rate<sp/>=<sp/>g.IO.KeyRepeatRate;</highlight></codeline>
<codeline lineno="7871"><highlight class="normal"><sp/><sp/><sp/><sp/>g.IO.KeyRepeatDelay<sp/>=<sp/>0.250f;</highlight></codeline>
<codeline lineno="7872"><highlight class="normal"><sp/><sp/><sp/><sp/>g.IO.KeyRepeatRate<sp/>=<sp/>0.200f;</highlight></codeline>
<codeline lineno="7873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>ImMax(tab_bar-&gt;BarRect.Min.x,<sp/>tab_bar-&gt;BarRect.Max.x<sp/>-<sp/>scrolling_buttons_width);</highlight></codeline>
<codeline lineno="7874"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x,<sp/>tab_bar-&gt;BarRect.Min.y);</highlight></codeline>
<codeline lineno="7875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ArrowButtonEx(</highlight><highlight class="stringliteral">&quot;##&lt;&quot;</highlight><highlight class="normal">,<sp/>ImGuiDir_Left,<sp/>arrow_button_size,<sp/>ImGuiButtonFlags_PressedOnClick<sp/>|<sp/>ImGuiButtonFlags_Repeat))</highlight></codeline>
<codeline lineno="7876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>select_dir<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7877"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x<sp/>+<sp/>arrow_button_size.x,<sp/>tab_bar-&gt;BarRect.Min.y);</highlight></codeline>
<codeline lineno="7878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ArrowButtonEx(</highlight><highlight class="stringliteral">&quot;##&gt;&quot;</highlight><highlight class="normal">,<sp/>ImGuiDir_Right,<sp/>arrow_button_size,<sp/>ImGuiButtonFlags_PressedOnClick<sp/>|<sp/>ImGuiButtonFlags_Repeat))</highlight></codeline>
<codeline lineno="7879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>select_dir<sp/>=<sp/>+1;</highlight></codeline>
<codeline lineno="7880"><highlight class="normal"><sp/><sp/><sp/><sp/>PopStyleColor(2);</highlight></codeline>
<codeline lineno="7881"><highlight class="normal"><sp/><sp/><sp/><sp/>g.IO.KeyRepeatRate<sp/>=<sp/>backup_repeat_rate;</highlight></codeline>
<codeline lineno="7882"><highlight class="normal"><sp/><sp/><sp/><sp/>g.IO.KeyRepeatDelay<sp/>=<sp/>backup_repeat_delay;</highlight></codeline>
<codeline lineno="7883"><highlight class="normal"></highlight></codeline>
<codeline lineno="7884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab_to_scroll_to<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(select_dir<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="7886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab_item<sp/>=<sp/>TabBarFindTabByID(tab_bar,<sp/>tab_bar-&gt;SelectedTabId))</highlight></codeline>
<codeline lineno="7887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_order<sp/>=<sp/>tab_bar-&gt;GetTabOrder(tab_item);</highlight></codeline>
<codeline lineno="7889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_order<sp/>=<sp/>selected_order<sp/>+<sp/>select_dir;</highlight></codeline>
<codeline lineno="7890"><highlight class="normal"></highlight></codeline>
<codeline lineno="7891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>tab<sp/>item<sp/>buttons<sp/>until<sp/>another<sp/>tab<sp/>item<sp/>is<sp/>found<sp/>or<sp/>end<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tab_to_scroll_to<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list,<sp/>still<sp/>scroll<sp/>to<sp/>make<sp/>our<sp/>tab<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_to_scroll_to<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[(target_order<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>target_order<sp/>&lt;<sp/>tab_bar-&gt;Tabs.Size)<sp/>?<sp/>target_order<sp/>:<sp/>selected_order];</highlight></codeline>
<codeline lineno="7896"><highlight class="normal"></highlight></codeline>
<codeline lineno="7897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cross<sp/>through<sp/>buttons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(even<sp/>if<sp/>first/last<sp/>item<sp/>is<sp/>a<sp/>button,<sp/>return<sp/>it<sp/>so<sp/>we<sp/>can<sp/>update<sp/>the<sp/>scroll)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_to_scroll_to-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Button)</highlight></codeline>
<codeline lineno="7900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_order<sp/>+=<sp/>select_dir;</highlight></codeline>
<codeline lineno="7902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_order<sp/>+=<sp/>select_dir;</highlight></codeline>
<codeline lineno="7903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_to_scroll_to<sp/>=<sp/>(target_order<sp/>&lt;<sp/>0<sp/>||<sp/>target_order<sp/>&gt;=<sp/>tab_bar-&gt;Tabs.Size)<sp/>?<sp/>tab_to_scroll_to<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="7904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7907"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>backup_cursor_pos;</highlight></codeline>
<codeline lineno="7908"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;BarRect.Max.x<sp/>-=<sp/>scrolling_buttons_width<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="7909"><highlight class="normal"></highlight></codeline>
<codeline lineno="7910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tab_to_scroll_to;</highlight></codeline>
<codeline lineno="7911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7912"><highlight class="normal"></highlight></codeline>
<codeline lineno="7913"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>ImGui::TabBarTabListPopupButton(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar)</highlight></codeline>
<codeline lineno="7914"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="7917"><highlight class="normal"></highlight></codeline>
<codeline lineno="7918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>g.Style.FramePadding.y<sp/>to<sp/>match<sp/>the<sp/>square<sp/>ArrowButton<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tab_list_popup_button_width<sp/>=<sp/>g.FontSize<sp/>+<sp/>g.Style.FramePadding.y;</highlight></codeline>
<codeline lineno="7920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>backup_cursor_pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="7921"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(tab_bar-&gt;BarRect.Min.x<sp/>-<sp/>g.Style.FramePadding.y,<sp/>tab_bar-&gt;BarRect.Min.y);</highlight></codeline>
<codeline lineno="7922"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;BarRect.Min.x<sp/>+=<sp/>tab_list_popup_button_width;</highlight></codeline>
<codeline lineno="7923"><highlight class="normal"></highlight></codeline>
<codeline lineno="7924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>arrow_col<sp/>=<sp/>g.Style.Colors[ImGuiCol_Text];</highlight></codeline>
<codeline lineno="7925"><highlight class="normal"><sp/><sp/><sp/><sp/>arrow_col.w<sp/>*=<sp/>0.5f;</highlight></codeline>
<codeline lineno="7926"><highlight class="normal"><sp/><sp/><sp/><sp/>PushStyleColor(ImGuiCol_Text,<sp/>arrow_col);</highlight></codeline>
<codeline lineno="7927"><highlight class="normal"><sp/><sp/><sp/><sp/>PushStyleColor(ImGuiCol_Button,<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0,<sp/>0,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="7928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>open<sp/>=<sp/>BeginCombo(</highlight><highlight class="stringliteral">&quot;##v&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>ImGuiComboFlags_NoPreview<sp/>|<sp/>ImGuiComboFlags_HeightLargest);</highlight></codeline>
<codeline lineno="7929"><highlight class="normal"><sp/><sp/><sp/><sp/>PopStyleColor(2);</highlight></codeline>
<codeline lineno="7930"><highlight class="normal"></highlight></codeline>
<codeline lineno="7931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab_to_select<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(open)</highlight></codeline>
<codeline lineno="7933"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_n<sp/>=<sp/>0;<sp/>tab_n<sp/>&lt;<sp/>tab_bar-&gt;Tabs.Size;<sp/>tab_n++)</highlight></codeline>
<codeline lineno="7935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[tab_n];</highlight></codeline>
<codeline lineno="7937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Button)</highlight></codeline>
<codeline lineno="7938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7939"><highlight class="normal"></highlight></codeline>
<codeline lineno="7940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tab_name<sp/>=<sp/>tab_bar-&gt;GetTabName(tab);</highlight></codeline>
<codeline lineno="7941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Selectable(tab_name,<sp/>tab_bar-&gt;SelectedTabId<sp/>==<sp/>tab-&gt;ID))</highlight></codeline>
<codeline lineno="7942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_to_select<sp/>=<sp/>tab;</highlight></codeline>
<codeline lineno="7943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndCombo();</highlight></codeline>
<codeline lineno="7945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7946"><highlight class="normal"></highlight></codeline>
<codeline lineno="7947"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>backup_cursor_pos;</highlight></codeline>
<codeline lineno="7948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tab_to_select;</highlight></codeline>
<codeline lineno="7949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7950"><highlight class="normal"></highlight></codeline>
<codeline lineno="7951"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7952"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Widgets:<sp/>BeginTabItem,<sp/>EndTabItem,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7953"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7954"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BeginTabItem()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7955"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>EndTabItem()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7956"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabItemButton()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7957"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabItemEx()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>SetTabItemClosed()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7959"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabItemCalcSize()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7960"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabItemBackground()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7961"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>TabItemLabelAndCloseButton()<sp/>[Internal]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7962"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7963"><highlight class="normal"></highlight></codeline>
<codeline lineno="7964"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::BeginTabItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>p_open,<sp/>ImGuiTabItemFlags<sp/>flags)</highlight></codeline>
<codeline lineno="7965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7966"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="7968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="7969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7970"><highlight class="normal"></highlight></codeline>
<codeline lineno="7971"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar<sp/>=<sp/>g.CurrentTabBar;</highlight></codeline>
<codeline lineno="7972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7973"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT_USER_ERROR(tab_bar,<sp/></highlight><highlight class="stringliteral">&quot;Needs<sp/>to<sp/>be<sp/>called<sp/>between<sp/>BeginTabBar()<sp/>and<sp/>EndTabBar()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7977"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT((flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Button)<sp/>==<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BeginTabItem()<sp/>Can&apos;t<sp/>be<sp/>used<sp/>with<sp/>button<sp/>flags,<sp/>use<sp/>TabItemButton()<sp/>instead!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7978"><highlight class="normal"></highlight></codeline>
<codeline lineno="7979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>TabItemEx(tab_bar,<sp/>label,<sp/>p_open,<sp/>flags,<sp/>NULL);</highlight></codeline>
<codeline lineno="7980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiTabItemFlags_NoPushId))</highlight></codeline>
<codeline lineno="7981"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[tab_bar-&gt;LastTabItemIdx];</highlight></codeline>
<codeline lineno="7983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushOverrideID(tab-&gt;ID);<sp/></highlight><highlight class="comment">//<sp/>We<sp/>already<sp/>hashed<sp/>&apos;label&apos;<sp/>so<sp/>push<sp/>into<sp/>the<sp/>ID<sp/>stack<sp/>directly<sp/>instead<sp/>of<sp/>doing<sp/>another<sp/>hash<sp/>through<sp/>PushID(label)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="7986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7987"><highlight class="normal"></highlight></codeline>
<codeline lineno="7988"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::EndTabItem()</highlight></codeline>
<codeline lineno="7989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7990"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="7991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="7992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="7993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7994"><highlight class="normal"></highlight></codeline>
<codeline lineno="7995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar<sp/>=<sp/>g.CurrentTabBar;</highlight></codeline>
<codeline lineno="7996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT_USER_ERROR(tab_bar<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Needs<sp/>to<sp/>be<sp/>called<sp/>between<sp/>BeginTabBar()<sp/>and<sp/>EndTabBar()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8001"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(tab_bar-&gt;LastTabItemIdx<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="8002"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs[tab_bar-&gt;LastTabItemIdx];</highlight></codeline>
<codeline lineno="8003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_NoPushId))</highlight></codeline>
<codeline lineno="8004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopID();</highlight></codeline>
<codeline lineno="8005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8006"><highlight class="normal"></highlight></codeline>
<codeline lineno="8007"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::TabItemButton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiTabItemFlags<sp/>flags)</highlight></codeline>
<codeline lineno="8008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="8010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="8011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="8012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8013"><highlight class="normal"></highlight></codeline>
<codeline lineno="8014"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar<sp/>=<sp/>g.CurrentTabBar;</highlight></codeline>
<codeline lineno="8015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="8016"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT_USER_ERROR(tab_bar<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Needs<sp/>to<sp/>be<sp/>called<sp/>between<sp/>BeginTabBar()<sp/>and<sp/>EndTabBar()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TabItemEx(tab_bar,<sp/>label,<sp/>NULL,<sp/>flags<sp/>|<sp/>ImGuiTabItemFlags_Button<sp/>|<sp/>ImGuiTabItemFlags_NoReorder,<sp/>NULL);</highlight></codeline>
<codeline lineno="8021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8022"><highlight class="normal"></highlight></codeline>
<codeline lineno="8023"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::TabItemEx(<ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>p_open,<sp/>ImGuiTabItemFlags<sp/>flags,<sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>docked_window)</highlight></codeline>
<codeline lineno="8024"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Layout<sp/>whole<sp/>tab<sp/>bar<sp/>if<sp/>not<sp/>already<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;WantLayout)</highlight></codeline>
<codeline lineno="8027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarLayout(tab_bar);</highlight></codeline>
<codeline lineno="8028"><highlight class="normal"></highlight></codeline>
<codeline lineno="8029"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="8030"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="8031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="8032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8033"><highlight class="normal"></highlight></codeline>
<codeline lineno="8034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="8035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>TabBarCalcTabID(tab_bar,<sp/>label,<sp/>docked_window);</highlight></codeline>
<codeline lineno="8036"><highlight class="normal"></highlight></codeline>
<codeline lineno="8037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>user<sp/>called<sp/>us<sp/>with<sp/>*p_open<sp/>==<sp/>false,<sp/>we<sp/>early<sp/>out<sp/>and<sp/>don&apos;t<sp/>render.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>make<sp/>a<sp/>call<sp/>to<sp/>ItemAdd()<sp/>so<sp/>that<sp/>attempts<sp/>to<sp/>use<sp/>a<sp/>contextual<sp/>popup<sp/>menu<sp/>with<sp/>an<sp/>implicit<sp/>ID<sp/>won&apos;t<sp/>use<sp/>an<sp/>older<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8039"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_TEST_ENGINE_ITEM_INFO(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>label,<sp/>g.LastItemData.StatusFlags);</highlight></codeline>
<codeline lineno="8040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_open<sp/>&amp;&amp;<sp/>!*p_open)</highlight></codeline>
<codeline lineno="8041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemAdd(<ref refid="struct_im_rect" kindref="compound">ImRect</ref>(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>NULL,<sp/>ImGuiItemFlags_NoNav<sp/>|<sp/>ImGuiItemFlags_NoNavDefaultFocus);</highlight></codeline>
<codeline lineno="8043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8044"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8045"><highlight class="normal"></highlight></codeline>
<codeline lineno="8046"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(!p_open<sp/>||<sp/>!(flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Button));</highlight></codeline>
<codeline lineno="8047"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT((flags<sp/>&amp;<sp/>(ImGuiTabItemFlags_Leading<sp/>|<sp/>ImGuiTabItemFlags_Trailing))<sp/>!=<sp/>(ImGuiTabItemFlags_Leading<sp/>|<sp/>ImGuiTabItemFlags_Trailing));<sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>both<sp/>Leading<sp/>and<sp/>Trailing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8048"><highlight class="normal"></highlight></codeline>
<codeline lineno="8049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>into<sp/>ImGuiTabItemFlags_NoCloseButton,<sp/>also<sp/>honor<sp/>ImGuiTabItemFlags_NoCloseButton<sp/>passed<sp/>by<sp/>user<sp/>(although<sp/>not<sp/>documented)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTabItemFlags_NoCloseButton)</highlight></codeline>
<codeline lineno="8051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_open<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_open<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="8053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiTabItemFlags_NoCloseButton;</highlight></codeline>
<codeline lineno="8054"><highlight class="normal"></highlight></codeline>
<codeline lineno="8055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>tab<sp/>contents<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size<sp/>=<sp/>TabItemCalcSize(label,<sp/>p_open<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="8057"><highlight class="normal"></highlight></codeline>
<codeline lineno="8058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acquire<sp/>tab<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8059"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>TabBarFindTabByID(tab_bar,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tab_is_new<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="8062"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;Tabs.push_back(<ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>());</highlight></codeline>
<codeline lineno="8064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab<sp/>=<sp/>&amp;tab_bar-&gt;Tabs.back();</highlight></codeline>
<codeline lineno="8065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;ID<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="8066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;Width<sp/>=<sp/>size.x;</highlight></codeline>
<codeline lineno="8067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;TabsAddedNew<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_is_new<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8070"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_bar-&gt;LastTabItemIdx<sp/>=<sp/>(ImS16)tab_bar-&gt;Tabs.index_from_ptr(tab);</highlight></codeline>
<codeline lineno="8071"><highlight class="normal"><sp/><sp/><sp/><sp/>tab-&gt;ContentWidth<sp/>=<sp/>size.x;</highlight></codeline>
<codeline lineno="8072"><highlight class="normal"><sp/><sp/><sp/><sp/>tab-&gt;BeginOrder<sp/>=<sp/>tab_bar-&gt;TabsActiveCount++;</highlight></codeline>
<codeline lineno="8073"><highlight class="normal"></highlight></codeline>
<codeline lineno="8074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tab_bar_appearing<sp/>=<sp/>(tab_bar-&gt;PrevFrameVisible<sp/>+<sp/>1<sp/>&lt;<sp/>g.FrameCount);</highlight></codeline>
<codeline lineno="8075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tab_bar_focused<sp/>=<sp/>(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_IsFocused)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="8076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tab_appearing<sp/>=<sp/>(tab-&gt;LastFrameVisible<sp/>+<sp/>1<sp/>&lt;<sp/>g.FrameCount);</highlight></codeline>
<codeline lineno="8077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_tab_button<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Button)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="8078"><highlight class="normal"><sp/><sp/><sp/><sp/>tab-&gt;LastFrameVisible<sp/>=<sp/>g.FrameCount;</highlight></codeline>
<codeline lineno="8079"><highlight class="normal"><sp/><sp/><sp/><sp/>tab-&gt;Flags<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="8080"><highlight class="normal"><sp/><sp/><sp/><sp/>tab-&gt;Window<sp/>=<sp/>docked_window;</highlight></codeline>
<codeline lineno="8081"><highlight class="normal"></highlight></codeline>
<codeline lineno="8082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>name<sp/>with<sp/>zero-terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(regular<sp/>tabs<sp/>are<sp/>permitted<sp/>in<sp/>a<sp/>DockNode<sp/>tab<sp/>bar,<sp/>but<sp/>window<sp/>tabs<sp/>not<sp/>permitted<sp/>in<sp/>a<sp/>non-DockNode<sp/>tab<sp/>bar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab-&gt;Window<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="8085"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_DockNode);</highlight></codeline>
<codeline lineno="8087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;NameOffset<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="8088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8090"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IM_ASSERT(tab-&gt;Window<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="8092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;NameOffset<sp/>=<sp/>(ImS32)tab_bar-&gt;TabsNames.size();</highlight></codeline>
<codeline lineno="8093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;TabsNames.append(label,<sp/>label<sp/>+<sp/>strlen(label)<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Append<sp/>name<sp/>_with_<sp/>the<sp/>zero-terminator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8095"><highlight class="normal"></highlight></codeline>
<codeline lineno="8096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>selected<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_appearing<sp/>&amp;&amp;<sp/>(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_AutoSelectNewTabs)<sp/>&amp;&amp;<sp/>tab_bar-&gt;NextSelectedTabId<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="8098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tab_bar_appearing<sp/>||<sp/>tab_bar-&gt;SelectedTabId<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="8099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_tab_button)</highlight></codeline>
<codeline lineno="8100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;NextSelectedTabId<sp/>=<sp/>id;<sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>tabs<sp/>gets<sp/>activated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>ImGuiTabItemFlags_SetSelected)<sp/>&amp;&amp;<sp/>(tab_bar-&gt;SelectedTabId<sp/>!=<sp/>id))<sp/></highlight><highlight class="comment">//<sp/>SetSelected<sp/>can<sp/>only<sp/>be<sp/>passed<sp/>on<sp/>explicit<sp/>tab<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_tab_button)</highlight></codeline>
<codeline lineno="8103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;NextSelectedTabId<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="8104"><highlight class="normal"></highlight></codeline>
<codeline lineno="8105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>visibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Note:<sp/>tab_contents_visible<sp/>!=<sp/>tab_selected...<sp/>because<sp/>CTRL+TAB<sp/>operations<sp/>may<sp/>preview<sp/>some<sp/>tabs<sp/>without<sp/>selecting<sp/>them!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tab_contents_visible<sp/>=<sp/>(tab_bar-&gt;VisibleTabId<sp/>==<sp/>id);</highlight></codeline>
<codeline lineno="8108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_contents_visible)</highlight></codeline>
<codeline lineno="8109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;VisibleTabWasSubmitted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8110"><highlight class="normal"></highlight></codeline>
<codeline lineno="8111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>very<sp/>first<sp/>frame<sp/>of<sp/>a<sp/>tab<sp/>bar<sp/>we<sp/>let<sp/>first<sp/>tab<sp/>contents<sp/>be<sp/>visible<sp/>to<sp/>minimize<sp/>appearing<sp/>glitches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tab_contents_visible<sp/>&amp;&amp;<sp/>tab_bar-&gt;SelectedTabId<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>tab_bar_appearing<sp/>&amp;&amp;<sp/>docked_window<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="8113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;Tabs.Size<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>!(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_AutoSelectNewTabs))</highlight></codeline>
<codeline lineno="8114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_contents_visible<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8115"><highlight class="normal"></highlight></codeline>
<codeline lineno="8116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>tab_is_new<sp/>is<sp/>not<sp/>necessarily<sp/>the<sp/>same<sp/>as<sp/>tab_appearing!<sp/>When<sp/>a<sp/>tab<sp/>bar<sp/>stops<sp/>being<sp/>submitted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>gets<sp/>submitted<sp/>again,<sp/>the<sp/>tabs<sp/>will<sp/>have<sp/>&apos;tab_appearing=true&apos;<sp/>but<sp/>&apos;tab_is_new=false&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_appearing<sp/>&amp;&amp;<sp/>(!tab_bar_appearing<sp/>||<sp/>tab_is_new))</highlight></codeline>
<codeline lineno="8119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemAdd(<ref refid="struct_im_rect" kindref="compound">ImRect</ref>(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>NULL,<sp/>ImGuiItemFlags_NoNav<sp/>|<sp/>ImGuiItemFlags_NoNavDefaultFocus);</highlight></codeline>
<codeline lineno="8121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_tab_button)</highlight></codeline>
<codeline lineno="8122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tab_contents_visible;</highlight></codeline>
<codeline lineno="8124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8125"><highlight class="normal"></highlight></codeline>
<codeline lineno="8126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;SelectedTabId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;LastFrameSelected<sp/>=<sp/>g.FrameCount;</highlight></codeline>
<codeline lineno="8128"><highlight class="normal"></highlight></codeline>
<codeline lineno="8129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>current<sp/>layout<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>backup_main_cursor_pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="8131"><highlight class="normal"></highlight></codeline>
<codeline lineno="8132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_central_section<sp/>=<sp/>(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_SectionMask_)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="8134"><highlight class="normal"><sp/><sp/><sp/><sp/>size.x<sp/>=<sp/>tab-&gt;Width;</highlight></codeline>
<codeline lineno="8135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_central_section)</highlight></codeline>
<codeline lineno="8136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>tab_bar-&gt;BarRect.Min<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(IM_FLOOR(tab-&gt;Offset<sp/>-<sp/>tab_bar-&gt;ScrollingAnim),<sp/>0.0f);</highlight></codeline>
<codeline lineno="8137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>tab_bar-&gt;BarRect.Min<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(tab-&gt;Offset,<sp/>0.0f);</highlight></codeline>
<codeline lineno="8139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos<sp/>=<sp/>window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="8140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bb(pos,<sp/>pos<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="8141"><highlight class="normal"></highlight></codeline>
<codeline lineno="8142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>have<sp/>CPU<sp/>clipping<sp/>primitives<sp/>to<sp/>clip<sp/>the<sp/>CloseButton<sp/>(until<sp/>it<sp/>becomes<sp/>a<sp/>texture),<sp/>so<sp/>need<sp/>to<sp/>add<sp/>an<sp/>extra<sp/>draw<sp/>call<sp/>(temporary<sp/>in<sp/>the<sp/>case<sp/>of<sp/>vertical<sp/>animation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>want_clip_rect<sp/>=<sp/>is_central_section<sp/>&amp;&amp;<sp/>(bb.Min.x<sp/>&lt;<sp/>tab_bar-&gt;ScrollingRectMinX<sp/>||<sp/>bb.Max.x<sp/>&gt;<sp/>tab_bar-&gt;ScrollingRectMaxX);</highlight></codeline>
<codeline lineno="8144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(want_clip_rect)</highlight></codeline>
<codeline lineno="8145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushClipRect(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(ImMax(bb.Min.x,<sp/>tab_bar-&gt;ScrollingRectMinX),<sp/>bb.Min.y<sp/>-<sp/>1),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(tab_bar-&gt;ScrollingRectMaxX,<sp/>bb.Max.y),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8146"><highlight class="normal"></highlight></codeline>
<codeline lineno="8147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>backup_cursor_max_pos<sp/>=<sp/>window-&gt;DC.CursorMaxPos;</highlight></codeline>
<codeline lineno="8148"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemSize(bb.GetSize(),<sp/>style.FramePadding.y);</highlight></codeline>
<codeline lineno="8149"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorMaxPos<sp/>=<sp/>backup_cursor_max_pos;</highlight></codeline>
<codeline lineno="8150"><highlight class="normal"></highlight></codeline>
<codeline lineno="8151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ItemAdd(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="8152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(want_clip_rect)</highlight></codeline>
<codeline lineno="8154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopClipRect();</highlight></codeline>
<codeline lineno="8155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>backup_main_cursor_pos;</highlight></codeline>
<codeline lineno="8156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tab_contents_visible;</highlight></codeline>
<codeline lineno="8157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8158"><highlight class="normal"></highlight></codeline>
<codeline lineno="8159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Click<sp/>to<sp/>Select<sp/>a<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8160"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags<sp/>button_flags<sp/>=<sp/>((is_tab_button<sp/>?<sp/>ImGuiButtonFlags_PressedOnClickRelease<sp/>:<sp/>ImGuiButtonFlags_PressedOnClick)<sp/>|<sp/>ImGuiButtonFlags_AllowItemOverlap);</highlight></codeline>
<codeline lineno="8161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.DragDropActive<sp/>&amp;&amp;<sp/>!g.DragDropPayload.IsDataType(IMGUI_PAYLOAD_TYPE_WINDOW))<sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>May<sp/>be<sp/>an<sp/>opt-in<sp/>property<sp/>of<sp/>the<sp/>payload<sp/>to<sp/>disable<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnDragDropHold;</highlight></codeline>
<codeline lineno="8163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held;</highlight></codeline>
<codeline lineno="8164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pressed<sp/>=<sp/>ButtonBehavior(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held,<sp/>button_flags);</highlight></codeline>
<codeline lineno="8165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed<sp/>&amp;&amp;<sp/>!is_tab_button)</highlight></codeline>
<codeline lineno="8166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;NextSelectedTabId<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="8167"><highlight class="normal"></highlight></codeline>
<codeline lineno="8168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transfer<sp/>active<sp/>id<sp/>window<sp/>so<sp/>the<sp/>active<sp/>id<sp/>is<sp/>not<sp/>owned<sp/>by<sp/>the<sp/>dock<sp/>host<sp/>(as<sp/>StartMouseMovingWindow()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>only<sp/>do<sp/>it<sp/>on<sp/>the<sp/>drag).<sp/>This<sp/>allows<sp/>FocusWindow()<sp/>to<sp/>be<sp/>more<sp/>conservative<sp/>in<sp/>how<sp/>it<sp/>clears<sp/>active<sp/>id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(held<sp/>&amp;&amp;<sp/>docked_window<sp/>&amp;&amp;<sp/>g.ActiveId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.ActiveIdIsJustActivated)</highlight></codeline>
<codeline lineno="8171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdWindow<sp/>=<sp/>docked_window;</highlight></codeline>
<codeline lineno="8172"><highlight class="normal"></highlight></codeline>
<codeline lineno="8173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>the<sp/>close<sp/>button<sp/>to<sp/>overlap<sp/>unless<sp/>we<sp/>are<sp/>dragging<sp/>(in<sp/>which<sp/>case<sp/>we<sp/>don&apos;t<sp/>want<sp/>any<sp/>overlapping<sp/>tabs<sp/>to<sp/>be<sp/>hovered)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.ActiveId<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetItemAllowOverlap();</highlight></codeline>
<codeline lineno="8176"><highlight class="normal"></highlight></codeline>
<codeline lineno="8177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drag<sp/>and<sp/>drop<sp/>a<sp/>single<sp/>floating<sp/>window<sp/>node<sp/>moves<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node<sp/>=<sp/>docked_window<sp/>?<sp/>docked_window-&gt;DockNode<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="8179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>single_floating_window_node<sp/>=<sp/>node<sp/>&amp;&amp;<sp/>node-&gt;IsFloatingNode()<sp/>&amp;&amp;<sp/>(node-&gt;Windows.Size<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="8180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(held<sp/>&amp;&amp;<sp/>single_floating_window_node<sp/>&amp;&amp;<sp/>IsMouseDragging(0,<sp/>0.0f))</highlight></codeline>
<codeline lineno="8181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartMouseMovingWindow(docked_window);</highlight></codeline>
<codeline lineno="8184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(held<sp/>&amp;&amp;<sp/>!tab_appearing<sp/>&amp;&amp;<sp/>IsMouseDragging(0))</highlight></codeline>
<codeline lineno="8186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drag<sp/>and<sp/>drop:<sp/>re-order<sp/>tabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>drag_dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drag_distance_from_edge_x<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="8190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g.DragDropActive<sp/>&amp;&amp;<sp/>((tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_Reorderable)<sp/>||<sp/>(docked_window<sp/>!=<sp/>NULL)))</highlight></codeline>
<codeline lineno="8191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>While<sp/>moving<sp/>a<sp/>tab<sp/>it<sp/>will<sp/>jump<sp/>on<sp/>the<sp/>other<sp/>side<sp/>of<sp/>the<sp/>mouse,<sp/>so<sp/>we<sp/>also<sp/>test<sp/>for<sp/>MouseDelta.x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.IO.MouseDelta.x<sp/>&lt;<sp/>0.0f<sp/>&amp;&amp;<sp/>g.IO.MousePos.x<sp/>&lt;<sp/>bb.Min.x)</highlight></codeline>
<codeline lineno="8194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drag_dir<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="8196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drag_distance_from_edge_x<sp/>=<sp/>bb.Min.x<sp/>-<sp/>g.IO.MousePos.x;</highlight></codeline>
<codeline lineno="8197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarQueueReorderFromMousePos(tab_bar,<sp/>tab,<sp/>g.IO.MousePos);</highlight></codeline>
<codeline lineno="8198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.IO.MouseDelta.x<sp/>&gt;<sp/>0.0f<sp/>&amp;&amp;<sp/>g.IO.MousePos.x<sp/>&gt;<sp/>bb.Max.x)</highlight></codeline>
<codeline lineno="8200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drag_dir<sp/>=<sp/>+1;</highlight></codeline>
<codeline lineno="8202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drag_distance_from_edge_x<sp/>=<sp/>g.IO.MousePos.x<sp/>-<sp/>bb.Max.x;</highlight></codeline>
<codeline lineno="8203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarQueueReorderFromMousePos(tab_bar,<sp/>tab,<sp/>g.IO.MousePos);</highlight></codeline>
<codeline lineno="8204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8206"><highlight class="normal"></highlight></codeline>
<codeline lineno="8207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>a<sp/>Dockable<sp/>window<sp/>out<sp/>of<sp/>it&apos;s<sp/>tab<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(docked_window<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>!(docked_window-&gt;Flags<sp/>&amp;<sp/>ImGuiWindowFlags_NoMove))</highlight></codeline>
<codeline lineno="8209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>a<sp/>variable<sp/>threshold<sp/>to<sp/>distinguish<sp/>dragging<sp/>tabs<sp/>within<sp/>a<sp/>tab<sp/>bar<sp/>and<sp/>extracting<sp/>them<sp/>out<sp/>of<sp/>the<sp/>tab<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>undocking_tab<sp/>=<sp/>(g.DragDropActive<sp/>&amp;&amp;<sp/>g.DragDropPayload.SourceId<sp/>==<sp/>id);</highlight></codeline>
<codeline lineno="8212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!undocking_tab)<sp/></highlight><highlight class="comment">//&amp;&amp;<sp/>(!g.IO.ConfigDockingWithShift<sp/>||<sp/>g.IO.KeyShift)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>threshold_base<sp/>=<sp/>g.FontSize;</highlight></codeline>
<codeline lineno="8215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>threshold_x<sp/>=<sp/>(threshold_base<sp/>*<sp/>2.2f);</highlight></codeline>
<codeline lineno="8216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>threshold_y<sp/>=<sp/>(threshold_base<sp/>*<sp/>1.5f)<sp/>+<sp/>ImClamp((ImFabs(g.IO.MouseDragMaxDistanceAbs[0].x)<sp/>-<sp/>threshold_base<sp/>*<sp/>2.0f)<sp/>*<sp/>0.20f,<sp/>0.0f,<sp/>threshold_base<sp/>*<sp/>4.0f);</highlight></codeline>
<codeline lineno="8217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GetForegroundDrawList()-&gt;AddRect(ImVec2(bb.Min.x<sp/>-<sp/>threshold_x,<sp/>bb.Min.y<sp/>-<sp/>threshold_y),<sp/>ImVec2(bb.Max.x<sp/>+<sp/>threshold_x,<sp/>bb.Max.y<sp/>+<sp/>threshold_y),<sp/>IM_COL32_WHITE);<sp/>//<sp/>[DEBUG]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8218"><highlight class="normal"></highlight></codeline>
<codeline lineno="8219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance_from_edge_y<sp/>=<sp/>ImMax(bb.Min.y<sp/>-<sp/>g.IO.MousePos.y,<sp/>g.IO.MousePos.y<sp/>-<sp/>bb.Max.y);</highlight></codeline>
<codeline lineno="8220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance_from_edge_y<sp/>&gt;=<sp/>threshold_y)</highlight></codeline>
<codeline lineno="8221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocking_tab<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drag_distance_from_edge_x<sp/>&gt;<sp/>threshold_x)</highlight></codeline>
<codeline lineno="8223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((drag_dir<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>tab_bar-&gt;GetTabOrder(tab)<sp/>==<sp/>0)<sp/>||<sp/>(drag_dir<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>tab_bar-&gt;GetTabOrder(tab)<sp/>==<sp/>tab_bar-&gt;Tabs.Size<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="8224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocking_tab<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8226"><highlight class="normal"></highlight></codeline>
<codeline lineno="8227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(undocking_tab)</highlight></codeline>
<codeline lineno="8228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Undock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>refactor<sp/>to<sp/>share<sp/>more<sp/>code<sp/>with<sp/>e.g.<sp/>StartMouseMovingWindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DockContextQueueUndockWindow(&amp;g,<sp/>docked_window);</highlight></codeline>
<codeline lineno="8232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.MovingWindow<sp/>=<sp/>docked_window;</highlight></codeline>
<codeline lineno="8233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveID(g.MovingWindow-&gt;MoveId,<sp/>g.MovingWindow);</highlight></codeline>
<codeline lineno="8234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdClickOffset<sp/>-=<sp/>g.MovingWindow-&gt;Pos<sp/>-<sp/>bb.Min;</highlight></codeline>
<codeline lineno="8235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.ActiveIdNoClearOnFocusLoss<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveIdUsingNavAndKeys();</highlight></codeline>
<codeline lineno="8237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8240"><highlight class="normal"></highlight></codeline>
<codeline lineno="8241"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered<sp/>&amp;&amp;<sp/>g.HoveredIdNotActiveTimer<sp/>&gt;<sp/>TOOLTIP_DELAY<sp/>&amp;&amp;<sp/>bb.GetWidth()<sp/>&lt;<sp/>tab-&gt;ContentWidth)</highlight></codeline>
<codeline lineno="8243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enlarge<sp/>tab<sp/>display<sp/>when<sp/>hovering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.Max.x<sp/>=<sp/>bb.Min.x<sp/>+<sp/>IM_FLOOR(ImLerp(bb.GetWidth(),<sp/>tab-&gt;ContentWidth,<sp/>ImSaturate((g.HoveredIdNotActiveTimer<sp/>-<sp/>0.40f)<sp/>*<sp/>6.0f)));</highlight></codeline>
<codeline lineno="8246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display_draw_list<sp/>=<sp/>GetForegroundDrawList(window);</highlight></codeline>
<codeline lineno="8247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabItemBackground(display_draw_list,<sp/>bb,<sp/>flags,<sp/>GetColorU32(ImGuiCol_TitleBgActive));</highlight></codeline>
<codeline lineno="8248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8250"><highlight class="normal"></highlight></codeline>
<codeline lineno="8251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>tab<sp/>shape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>display_draw_list<sp/>=<sp/>window-&gt;DrawList;</highlight></codeline>
<codeline lineno="8253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>tab_col<sp/>=<sp/>GetColorU32((held<sp/>||<sp/>hovered)<sp/>?<sp/>ImGuiCol_TabHovered<sp/>:<sp/>tab_contents_visible<sp/>?<sp/>(tab_bar_focused<sp/>?<sp/>ImGuiCol_TabActive<sp/>:<sp/>ImGuiCol_TabUnfocusedActive)<sp/>:<sp/>(tab_bar_focused<sp/>?<sp/>ImGuiCol_Tab<sp/>:<sp/>ImGuiCol_TabUnfocused));</highlight></codeline>
<codeline lineno="8254"><highlight class="normal"><sp/><sp/><sp/><sp/>TabItemBackground(display_draw_list,<sp/>bb,<sp/>flags,<sp/>tab_col);</highlight></codeline>
<codeline lineno="8255"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderNavHighlight(bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8256"><highlight class="normal"></highlight></codeline>
<codeline lineno="8257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>with<sp/>right<sp/>mouse<sp/>button.<sp/>This<sp/>is<sp/>so<sp/>the<sp/>common<sp/>idiom<sp/>for<sp/>context<sp/>menu<sp/>automatically<sp/>highlight<sp/>the<sp/>current<sp/>widget.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered_unblocked<sp/>=<sp/>IsItemHovered(ImGuiHoveredFlags_AllowWhenBlockedByPopup);</highlight></codeline>
<codeline lineno="8259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered_unblocked<sp/>&amp;&amp;<sp/>(IsMouseClicked(1)<sp/>||<sp/>IsMouseReleased(1)))</highlight></codeline>
<codeline lineno="8260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_tab_button)</highlight></codeline>
<codeline lineno="8261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_bar-&gt;NextSelectedTabId<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="8262"><highlight class="normal"></highlight></codeline>
<codeline lineno="8263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_NoCloseWithMiddleMouseButton)</highlight></codeline>
<codeline lineno="8264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>ImGuiTabItemFlags_NoCloseWithMiddleMouseButton;</highlight></codeline>
<codeline lineno="8265"><highlight class="normal"></highlight></codeline>
<codeline lineno="8266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>tab<sp/>label,<sp/>process<sp/>close<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiID<sp/>close_button_id<sp/>=<sp/>p_open<sp/>?<sp/>GetIDWithSeed(</highlight><highlight class="stringliteral">&quot;#CLOSE&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="8268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>just_closed;</highlight></codeline>
<codeline lineno="8269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>text_clipped;</highlight></codeline>
<codeline lineno="8270"><highlight class="normal"><sp/><sp/><sp/><sp/>TabItemLabelAndCloseButton(display_draw_list,<sp/>bb,<sp/>flags,<sp/>tab_bar-&gt;FramePadding,<sp/>label,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>close_button_id,<sp/>tab_contents_visible,<sp/>&amp;just_closed,<sp/>&amp;text_clipped);</highlight></codeline>
<codeline lineno="8271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(just_closed<sp/>&amp;&amp;<sp/>p_open<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="8272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_open<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarCloseTab(tab_bar,<sp/>tab);</highlight></codeline>
<codeline lineno="8275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8276"><highlight class="normal"></highlight></codeline>
<codeline lineno="8277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>Hovered<sp/>state<sp/>so<sp/>IsItemHovered()<sp/>after<sp/>Begin()<sp/>can<sp/>work<sp/>(even<sp/>though<sp/>we<sp/>are<sp/>technically<sp/>hovering<sp/>our<sp/>parent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>state<sp/>is<sp/>copied<sp/>to<sp/>window-&gt;DockTabItemStatusFlags<sp/>by<sp/>our<sp/>caller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(docked_window<sp/>&amp;&amp;<sp/>(hovered<sp/>||<sp/>g.HoveredId<sp/>==<sp/>close_button_id))</highlight></codeline>
<codeline lineno="8280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData.StatusFlags<sp/>|=<sp/>ImGuiItemStatusFlags_HoveredWindow;</highlight></codeline>
<codeline lineno="8281"><highlight class="normal"></highlight></codeline>
<codeline lineno="8282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>main<sp/>window<sp/>position<sp/>so<sp/>user<sp/>can<sp/>draw<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(want_clip_rect)</highlight></codeline>
<codeline lineno="8284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopClipRect();</highlight></codeline>
<codeline lineno="8285"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>backup_main_cursor_pos;</highlight></codeline>
<codeline lineno="8286"><highlight class="normal"></highlight></codeline>
<codeline lineno="8287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tooltip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Won&apos;t<sp/>work<sp/>over<sp/>the<sp/>close<sp/>button<sp/>because<sp/>ItemOverlap<sp/>systems<sp/>messes<sp/>up<sp/>with<sp/>HoveredIdTimer-&gt;<sp/>seems<sp/>ok)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(We<sp/>test<sp/>IsItemHovered()<sp/>to<sp/>discard<sp/>e.g.<sp/>when<sp/>another<sp/>item<sp/>is<sp/>active<sp/>or<sp/>drag<sp/>and<sp/>drop<sp/>over<sp/>the<sp/>tab<sp/>bar,<sp/>which<sp/>g.HoveredId<sp/>ignores)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>is<sp/>a<sp/>mess.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>may<sp/>want<sp/>disabled<sp/>tab<sp/>to<sp/>still<sp/>display<sp/>the<sp/>tooltip?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_clipped<sp/>&amp;&amp;<sp/>g.HoveredId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!held<sp/>&amp;&amp;<sp/>g.HoveredIdNotActiveTimer<sp/>&gt;<sp/>g.TooltipSlowDelay<sp/>&amp;&amp;<sp/>IsItemHovered())</highlight></codeline>
<codeline lineno="8293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(tab_bar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_NoTooltip)<sp/>&amp;&amp;<sp/>!(tab-&gt;Flags<sp/>&amp;<sp/>ImGuiTabItemFlags_NoTooltip))</highlight></codeline>
<codeline lineno="8294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetTooltip(</highlight><highlight class="stringliteral">&quot;%.*s&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(FindRenderedTextEnd(label)<sp/>-<sp/>label),<sp/>label);</highlight></codeline>
<codeline lineno="8295"><highlight class="normal"></highlight></codeline>
<codeline lineno="8296"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(!is_tab_button<sp/>||<sp/>!(tab_bar-&gt;SelectedTabId<sp/>==<sp/>tab-&gt;ID<sp/>&amp;&amp;<sp/>is_tab_button));<sp/></highlight><highlight class="comment">//<sp/>TabItemButton<sp/>should<sp/>not<sp/>be<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_tab_button)</highlight></codeline>
<codeline lineno="8298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pressed;</highlight></codeline>
<codeline lineno="8299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tab_contents_visible;</highlight></codeline>
<codeline lineno="8300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8301"><highlight class="normal"></highlight></codeline>
<codeline lineno="8302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Public]<sp/>This<sp/>is<sp/>call<sp/>is<sp/>100%<sp/>optional<sp/>but<sp/>it<sp/>allows<sp/>to<sp/>remove<sp/>some<sp/>one-frame<sp/>glitches<sp/>when<sp/>a<sp/>tab<sp/>has<sp/>been<sp/>unexpectedly<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>it<sp/>to<sp/>need<sp/>to<sp/>call<sp/>the<sp/>function<sp/>SetTabItemClosed()<sp/>between<sp/>BeginTabBar()<sp/>and<sp/>EndTabBar().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tabs<sp/>closed<sp/>by<sp/>the<sp/>close<sp/>button<sp/>will<sp/>automatically<sp/>be<sp/>flagged<sp/>to<sp/>avoid<sp/>this<sp/>issue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::SetTabItemClosed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label)</highlight></codeline>
<codeline lineno="8306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="8308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_within_manual_tab_bar<sp/>=<sp/>g.CurrentTabBar<sp/>&amp;&amp;<sp/>!(g.CurrentTabBar-&gt;Flags<sp/>&amp;<sp/>ImGuiTabBarFlags_DockNode);</highlight></codeline>
<codeline lineno="8309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_within_manual_tab_bar)</highlight></codeline>
<codeline lineno="8310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_tab_bar" kindref="compound">ImGuiTabBar</ref>*<sp/>tab_bar<sp/>=<sp/>g.CurrentTabBar;</highlight></codeline>
<codeline lineno="8312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiID<sp/>tab_id<sp/>=<sp/>TabBarCalcTabID(tab_bar,<sp/>label,<sp/>NULL);</highlight></codeline>
<codeline lineno="8313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_tab_item" kindref="compound">ImGuiTabItem</ref>*<sp/>tab<sp/>=<sp/>TabBarFindTabByID(tab_bar,<sp/>tab_id))</highlight></codeline>
<codeline lineno="8314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;WantClose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Will<sp/>be<sp/>processed<sp/>by<sp/>next<sp/>call<sp/>to<sp/>TabBarLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_window" kindref="compound">ImGuiWindow</ref>*<sp/>window<sp/>=<sp/>FindWindowByName(label))</highlight></codeline>
<codeline lineno="8317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;DockIsActive)</highlight></codeline>
<codeline lineno="8319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_gui_dock_node" kindref="compound">ImGuiDockNode</ref>*<sp/>node<sp/>=<sp/>window-&gt;DockNode)</highlight></codeline>
<codeline lineno="8320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiID<sp/>tab_id<sp/>=<sp/>TabBarCalcTabID(node-&gt;TabBar,<sp/>label,<sp/>window);</highlight></codeline>
<codeline lineno="8322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabBarRemoveTab(node-&gt;TabBar,<sp/>tab_id);</highlight></codeline>
<codeline lineno="8323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DockTabWantClose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8327"><highlight class="normal"></highlight></codeline>
<codeline lineno="8328"><highlight class="normal"><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>ImGui::TabItemCalcSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_close_button)</highlight></codeline>
<codeline lineno="8329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="8331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(label_size.x<sp/>+<sp/>g.Style.FramePadding.x,<sp/>label_size.y<sp/>+<sp/>g.Style.FramePadding.y<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="8333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_close_button)</highlight></codeline>
<codeline lineno="8334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.x<sp/>+=<sp/>g.Style.FramePadding.x<sp/>+<sp/>(g.Style.ItemInnerSpacing.x<sp/>+<sp/>g.FontSize);<sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>Y<sp/>intentionally<sp/>to<sp/>fit<sp/>the<sp/>close<sp/>button<sp/>circle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.x<sp/>+=<sp/>g.Style.FramePadding.x<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="8337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(ImMin(size.x,<sp/>TabBarCalcMaxTabWidth()),<sp/>size.y);</highlight></codeline>
<codeline lineno="8338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8339"><highlight class="normal"></highlight></codeline>
<codeline lineno="8340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TabItemBackground(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiTabItemFlags<sp/>flags,<sp/>ImU32<sp/>col)</highlight></codeline>
<codeline lineno="8341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>While<sp/>rendering<sp/>tabs,<sp/>we<sp/>trim<sp/>1<sp/>pixel<sp/>off<sp/>the<sp/>top<sp/>of<sp/>our<sp/>bounding<sp/>box<sp/>so<sp/>they<sp/>can<sp/>fit<sp/>within<sp/>a<sp/>regular<sp/>frame<sp/>height<sp/>while<sp/>looking<sp/>&quot;detached&quot;<sp/>from<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="8344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>bb.GetWidth();</highlight></codeline>
<codeline lineno="8345"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_UNUSED(flags);</highlight></codeline>
<codeline lineno="8346"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_ASSERT(width<sp/>&gt;<sp/>0.0f);</highlight></codeline>
<codeline lineno="8347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding<sp/>=<sp/>ImMax(0.0f,<sp/>ImMin((flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Button)<sp/>?<sp/>g.Style.FrameRounding<sp/>:<sp/>g.Style.TabRounding,<sp/>width<sp/>*<sp/>0.5f<sp/>-<sp/>1.0f));</highlight></codeline>
<codeline lineno="8348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>bb.Min.y<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="8349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/>bb.Max.y<sp/>+<sp/>((flags<sp/>&amp;<sp/>ImGuiTabItemFlags_Preview)<sp/>?<sp/>0.0f<sp/>:<sp/>-1.0f);</highlight></codeline>
<codeline lineno="8350"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;PathLineTo(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Min.x,<sp/>y2));</highlight></codeline>
<codeline lineno="8351"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;PathArcToFast(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Min.x<sp/>+<sp/>rounding,<sp/>y1<sp/>+<sp/>rounding),<sp/>rounding,<sp/>6,<sp/>9);</highlight></codeline>
<codeline lineno="8352"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;PathArcToFast(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Max.x<sp/>-<sp/>rounding,<sp/>y1<sp/>+<sp/>rounding),<sp/>rounding,<sp/>9,<sp/>12);</highlight></codeline>
<codeline lineno="8353"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;PathLineTo(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Max.x,<sp/>y2));</highlight></codeline>
<codeline lineno="8354"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;PathFillConvex(col);</highlight></codeline>
<codeline lineno="8355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.Style.TabBorderSize<sp/>&gt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="8356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PathLineTo(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Min.x<sp/>+<sp/>0.5f,<sp/>y2));</highlight></codeline>
<codeline lineno="8358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PathArcToFast(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Min.x<sp/>+<sp/>rounding<sp/>+<sp/>0.5f,<sp/>y1<sp/>+<sp/>rounding<sp/>+<sp/>0.5f),<sp/>rounding,<sp/>6,<sp/>9);</highlight></codeline>
<codeline lineno="8359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PathArcToFast(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Max.x<sp/>-<sp/>rounding<sp/>-<sp/>0.5f,<sp/>y1<sp/>+<sp/>rounding<sp/>+<sp/>0.5f),<sp/>rounding,<sp/>9,<sp/>12);</highlight></codeline>
<codeline lineno="8360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PathLineTo(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bb.Max.x<sp/>-<sp/>0.5f,<sp/>y2));</highlight></codeline>
<codeline lineno="8361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;PathStroke(GetColorU32(ImGuiCol_Border),<sp/>0,<sp/>g.Style.TabBorderSize);</highlight></codeline>
<codeline lineno="8362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8364"><highlight class="normal"></highlight></codeline>
<codeline lineno="8365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Render<sp/>text<sp/>label<sp/>(with<sp/>custom<sp/>clipping)<sp/>+<sp/>Unsaved<sp/>Document<sp/>marker<sp/>+<sp/>Close<sp/>Button<sp/>logic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>tend<sp/>to<sp/>lock<sp/>style.FramePadding<sp/>for<sp/>a<sp/>given<sp/>tab-bar,<sp/>hence<sp/>the<sp/>&apos;frame_padding&apos;<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8367"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui::TabItemLabelAndCloseButton(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>bb,<sp/>ImGuiTabItemFlags<sp/>flags,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>frame_padding,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/>ImGuiID<sp/>tab_id,<sp/>ImGuiID<sp/>close_button_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_contents_visible,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>out_just_closed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>out_text_clipped)</highlight></codeline>
<codeline lineno="8368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="8370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>label_size<sp/>=<sp/>CalcTextSize(label,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8371"><highlight class="normal"></highlight></codeline>
<codeline lineno="8372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_just_closed)</highlight></codeline>
<codeline lineno="8373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_just_closed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_text_clipped)</highlight></codeline>
<codeline lineno="8375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_text_clipped<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8376"><highlight class="normal"></highlight></codeline>
<codeline lineno="8377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bb.GetWidth()<sp/>&lt;=<sp/>1.0f)</highlight></codeline>
<codeline lineno="8378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8379"><highlight class="normal"></highlight></codeline>
<codeline lineno="8380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>Style<sp/>V2<sp/>we&apos;ll<sp/>have<sp/>full<sp/>override<sp/>of<sp/>all<sp/>colors<sp/>per<sp/>state<sp/>(e.g.<sp/>focused,<sp/>selected)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>right<sp/>now<sp/>if<sp/>you<sp/>want<sp/>to<sp/>alter<sp/>text<sp/>color<sp/>of<sp/>tabs<sp/>this<sp/>is<sp/>what<sp/>you<sp/>need<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8382"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>backup_alpha<sp/>=<sp/>g.Style.Alpha;</highlight></codeline>
<codeline lineno="8384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_contents_visible)</highlight></codeline>
<codeline lineno="8385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.Style.Alpha<sp/>*=<sp/>0.7f;</highlight></codeline>
<codeline lineno="8386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8387"><highlight class="normal"></highlight></codeline>
<codeline lineno="8388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>text<sp/>label<sp/>(with<sp/>clipping<sp/>+<sp/>alpha<sp/>gradient)<sp/>+<sp/>unsaved<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>text_pixel_clip_bb(bb.Min.x<sp/>+<sp/>frame_padding.x,<sp/>bb.Min.y<sp/>+<sp/>frame_padding.y,<sp/>bb.Max.x<sp/>-<sp/>frame_padding.x,<sp/>bb.Max.y);</highlight></codeline>
<codeline lineno="8390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>text_ellipsis_clip_bb<sp/>=<sp/>text_pixel_clip_bb;</highlight></codeline>
<codeline lineno="8391"><highlight class="normal"></highlight></codeline>
<codeline lineno="8392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>clipped<sp/>state<sp/>ignoring<sp/>the<sp/>close<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_text_clipped)</highlight></codeline>
<codeline lineno="8394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_text_clipped<sp/>=<sp/>(text_ellipsis_clip_bb.Min.x<sp/>+<sp/>label_size.x)<sp/>&gt;<sp/>text_pixel_clip_bb.Max.x;</highlight></codeline>
<codeline lineno="8396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//draw_list-&gt;AddCircle(text_ellipsis_clip_bb.Min,<sp/>3.0f,<sp/>*out_text_clipped<sp/>?<sp/>IM_COL32(255,<sp/>0,<sp/>0,<sp/>255)<sp/>:<sp/>IM_COL32(0,<sp/>255,<sp/>0,<sp/>255));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8398"><highlight class="normal"></highlight></codeline>
<codeline lineno="8399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>button_sz<sp/>=<sp/>g.FontSize;</highlight></codeline>
<codeline lineno="8400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>button_pos(ImMax(bb.Min.x,<sp/>bb.Max.x<sp/>-<sp/>frame_padding.x<sp/>*<sp/>2.0f<sp/>-<sp/>button_sz),<sp/>bb.Min.y);</highlight></codeline>
<codeline lineno="8401"><highlight class="normal"></highlight></codeline>
<codeline lineno="8402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>Button<sp/>&amp;<sp/>Unsaved<sp/>Marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>relying<sp/>on<sp/>a<sp/>subtle<sp/>and<sp/>confusing<sp/>distinction<sp/>between<sp/>&apos;hovered&apos;<sp/>and<sp/>&apos;g.HoveredId&apos;<sp/>which<sp/>happens<sp/>because<sp/>we<sp/>are<sp/>using<sp/>ImGuiButtonFlags_AllowOverlapMode<sp/>+<sp/>SetItemAllowOverlap()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&apos;hovered&apos;<sp/>will<sp/>be<sp/>true<sp/>when<sp/>hovering<sp/>the<sp/>Tab<sp/>but<sp/>NOT<sp/>when<sp/>hovering<sp/>the<sp/>close<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&apos;g.HoveredId==id&apos;<sp/>will<sp/>be<sp/>true<sp/>when<sp/>hovering<sp/>the<sp/>Tab<sp/>including<sp/>when<sp/>hovering<sp/>the<sp/>close<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&apos;g.ActiveId==close_button_id&apos;<sp/>will<sp/>be<sp/>true<sp/>when<sp/>we<sp/>are<sp/>holding<sp/>on<sp/>the<sp/>close<sp/>button,<sp/>in<sp/>which<sp/>case<sp/>both<sp/>hovered<sp/>booleans<sp/>are<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>close_button_pressed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>close_button_visible<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(close_button_id<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_contents_visible<sp/>||<sp/>bb.GetWidth()<sp/>&gt;=<sp/>ImMax(button_sz,<sp/>g.Style.TabMinWidthForCloseButton))</highlight></codeline>
<codeline lineno="8411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.HoveredId<sp/>==<sp/>tab_id<sp/>||<sp/>g.HoveredId<sp/>==<sp/>close_button_id<sp/>||<sp/>g.ActiveId<sp/>==<sp/>tab_id<sp/>||<sp/>g.ActiveId<sp/>==<sp/>close_button_id)</highlight></codeline>
<codeline lineno="8412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_button_visible<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unsaved_marker_visible<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiTabItemFlags_UnsavedDocument)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(button_pos.x<sp/>+<sp/>button_sz<sp/>&lt;=<sp/>bb.Max.x);</highlight></codeline>
<codeline lineno="8414"><highlight class="normal"></highlight></codeline>
<codeline lineno="8415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(close_button_visible)</highlight></codeline>
<codeline lineno="8416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_last_item_data" kindref="compound">ImGuiLastItemData</ref><sp/>last_item_backup<sp/>=<sp/>g.LastItemData;</highlight></codeline>
<codeline lineno="8418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushStyleVar(ImGuiStyleVar_FramePadding,<sp/>frame_padding);</highlight></codeline>
<codeline lineno="8419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CloseButton(close_button_id,<sp/>button_pos))</highlight></codeline>
<codeline lineno="8420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_button_pressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopStyleVar();</highlight></codeline>
<codeline lineno="8422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.LastItemData<sp/>=<sp/>last_item_backup;</highlight></codeline>
<codeline lineno="8423"><highlight class="normal"></highlight></codeline>
<codeline lineno="8424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>with<sp/>middle<sp/>mouse<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiTabItemFlags_NoCloseWithMiddleMouseButton)<sp/>&amp;&amp;<sp/>IsMouseClicked(2))</highlight></codeline>
<codeline lineno="8426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_button_pressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unsaved_marker_visible)</highlight></codeline>
<codeline lineno="8429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref><sp/>bullet_bb(button_pos,<sp/>button_pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(button_sz,<sp/>button_sz)<sp/>+<sp/>g.Style.FramePadding<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="8431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderBullet(draw_list,<sp/>bullet_bb.GetCenter(),<sp/>GetColorU32(ImGuiCol_Text));</highlight></codeline>
<codeline lineno="8432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8433"><highlight class="normal"></highlight></codeline>
<codeline lineno="8434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>all<sp/>rather<sp/>complicated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(the<sp/>main<sp/>idea<sp/>is<sp/>that<sp/>because<sp/>the<sp/>close<sp/>button<sp/>only<sp/>appears<sp/>on<sp/>hover,<sp/>we<sp/>don&apos;t<sp/>want<sp/>it<sp/>to<sp/>alter<sp/>the<sp/>ellipsis<sp/>position)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>if<sp/>FramePadding<sp/>is<sp/>noticeably<sp/>large,<sp/>ellipsis_max_x<sp/>will<sp/>be<sp/>wrong<sp/>here<sp/>(e.g.<sp/>#3497),<sp/>maybe<sp/>for<sp/>consistency<sp/>that<sp/>parameter<sp/>of<sp/>RenderTextEllipsis()<sp/>shouldn&apos;t<sp/>exist..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ellipsis_max_x<sp/>=<sp/>close_button_visible<sp/>?<sp/>text_pixel_clip_bb.Max.x<sp/>:<sp/>bb.Max.x<sp/>-<sp/>1.0f;</highlight></codeline>
<codeline lineno="8438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(close_button_visible<sp/>||<sp/>unsaved_marker_visible)</highlight></codeline>
<codeline lineno="8439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_pixel_clip_bb.Max.x<sp/>-=<sp/>close_button_visible<sp/>?<sp/>(button_sz)<sp/>:<sp/>(button_sz<sp/>*<sp/>0.80f);</highlight></codeline>
<codeline lineno="8441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_ellipsis_clip_bb.Max.x<sp/>-=<sp/>unsaved_marker_visible<sp/>?<sp/>(button_sz<sp/>*<sp/>0.80f)<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="8442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ellipsis_max_x<sp/>=<sp/>text_pixel_clip_bb.Max.x;</highlight></codeline>
<codeline lineno="8443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8444"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderTextEllipsis(draw_list,<sp/>text_ellipsis_clip_bb.Min,<sp/>text_ellipsis_clip_bb.Max,<sp/>text_pixel_clip_bb.Max.x,<sp/>ellipsis_max_x,<sp/>label,<sp/>NULL,<sp/>&amp;label_size);</highlight></codeline>
<codeline lineno="8445"><highlight class="normal"></highlight></codeline>
<codeline lineno="8446"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_contents_visible)</highlight></codeline>
<codeline lineno="8448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.Style.Alpha<sp/>=<sp/>backup_alpha;</highlight></codeline>
<codeline lineno="8449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8450"><highlight class="normal"></highlight></codeline>
<codeline lineno="8451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_just_closed)</highlight></codeline>
<codeline lineno="8452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_just_closed<sp/>=<sp/>close_button_pressed;</highlight></codeline>
<codeline lineno="8453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8454"><highlight class="normal"></highlight></codeline>
<codeline lineno="8455"><highlight class="normal"></highlight></codeline>
<codeline lineno="8456"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifndef<sp/>IMGUI_DISABLE</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/imgui_widgets.cpp"/>
  </compounddef>
</doxygen>
