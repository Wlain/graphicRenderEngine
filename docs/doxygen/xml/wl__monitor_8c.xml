<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="wl__monitor_8c" kind="file" language="C++">
    <compoundname>wl_monitor.c</compoundname>
    <includes refid="internal_8h" local="yes">internal.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../include/GLFW/glfw3.h</label>
        <link refid="glfw_2include_2_g_l_f_w_2glfw3_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>egl_context.h</label>
        <link refid="egl__context_8h_source"/>
      </node>
      <node id="2">
        <label>internal.h</label>
        <link refid="internal_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>osmesa_context.h</label>
        <link refid="osmesa__context_8h_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c</label>
        <link refid="wl__monitor_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>GL/gl.h</label>
      </node>
      <node id="14">
        <label>errno.h</label>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="15">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
      <node id="12">
        <label>stdlib.h</label>
      </node>
      <node id="13">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="wl__monitor_8c_1a97234ff5f05a5741b4f84d44fa9b7fcc" prot="public" static="yes" mutable="no">
        <type>const struct wl_output_listener</type>
        <definition>const struct wl_output_listener outputListener</definition>
        <argsstring></argsstring>
        <name>outputListener</name>
        <initializer>= {
    outputHandleGeometry,
    outputHandleMode,
    outputHandleDone,
    outputHandleScale,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="111" column="38" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wl__monitor_8c_1a646b932634d63c9322e5319a0a3bbf7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void outputHandleGeometry</definition>
        <argsstring>(void *data, struct wl_output *output, int32_t x, int32_t y, int32_t physicalWidth, int32_t physicalHeight, int32_t subpixel, const char *make, const char *model, int32_t transform)</argsstring>
        <name>outputHandleGeometry</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_output *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>physicalWidth</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>physicalHeight</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>subpixel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>make</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="38" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="38" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1a6ca7b1f8968a26f7d38ba27c0408b737" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void outputHandleMode</definition>
        <argsstring>(void *data, struct wl_output *output, uint32_t flags, int32_t width, int32_t height, int32_t refresh)</argsstring>
        <name>outputHandleMode</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_output *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>refresh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="61" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="61" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1a9684e2cc842137226ad906cb0e204825" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void outputHandleDone</definition>
        <argsstring>(void *data, struct wl_output *output)</argsstring>
        <name>outputHandleDone</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_output *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="87" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="87" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1aaf5ea17cc0c852402ac6077bdb286e87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void outputHandleScale</definition>
        <argsstring>(void *data, struct wl_output *output, int32_t factor)</argsstring>
        <name>outputHandleScale</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct wl_output *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="102" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="102" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1a4061b6ec759c796455591e25a0de8c4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _glfwAddOutputWayland</definition>
        <argsstring>(uint32_t name, uint32_t version)</argsstring>
        <name>_glfwAddOutputWayland</name>
        <param>
          <type>uint32_t</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="123" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="123" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1a0dcf01b53eb877c4e823ba63fe8ecbca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _glfwPlatformFreeMonitor</definition>
        <argsstring>(_GLFWmonitor *monitor)</argsstring>
        <name>_glfwPlatformFreeMonitor</name>
        <param>
          <type><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="160" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1ac3047b94f0248b06b160f08992939796" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _glfwPlatformGetMonitorPos</definition>
        <argsstring>(_GLFWmonitor *monitor, int *xpos, int *ypos)</argsstring>
        <name>_glfwPlatformGetMonitorPos</name>
        <param>
          <type><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="166" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="166" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1acaffbb192928a16cf1742151757a867c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _glfwPlatformGetMonitorContentScale</definition>
        <argsstring>(_GLFWmonitor *monitor, float *xscale, float *yscale)</argsstring>
        <name>_glfwPlatformGetMonitorContentScale</name>
        <param>
          <type><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xscale</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>yscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="174" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="174" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1ad3bed68d40919e525ddd445bcde90b2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _glfwPlatformGetMonitorWorkarea</definition>
        <argsstring>(_GLFWmonitor *monitor, int *xpos, int *ypos, int *width, int *height)</argsstring>
        <name>_glfwPlatformGetMonitorWorkarea</name>
        <param>
          <type><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ypos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="183" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="183" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1a73fdd392c9c021474747f2a663600cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref> *</type>
        <definition>GLFWvidmode * _glfwPlatformGetVideoModes</definition>
        <argsstring>(_GLFWmonitor *monitor, int *found)</argsstring>
        <name>_glfwPlatformGetVideoModes</name>
        <param>
          <type><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>found</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="197" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1ab8336e546a783459b673772b591ffacd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _glfwPlatformGetVideoMode</definition>
        <argsstring>(_GLFWmonitor *monitor, GLFWvidmode *mode)</argsstring>
        <name>_glfwPlatformGetVideoMode</name>
        <param>
          <type><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref> *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="203" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1ac4bf2f5025cc6800bbe44615e5404c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWbool</type>
        <definition>GLFWbool _glfwPlatformGetGammaRamp</definition>
        <argsstring>(_GLFWmonitor *monitor, GLFWgammaramp *ramp)</argsstring>
        <name>_glfwPlatformGetGammaRamp</name>
        <param>
          <type><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type><ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref> *</type>
          <declname>ramp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="208" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="208" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1abcaf1fc34700bd62b558caccce3ab45b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _glfwPlatformSetGammaRamp</definition>
        <argsstring>(_GLFWmonitor *monitor, const GLFWgammaramp *ramp)</argsstring>
        <name>_glfwPlatformSetGammaRamp</name>
        <param>
          <type><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref> *</type>
          <declname>ramp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="215" column="6" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="215" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="wl__monitor_8c_1a5de8580bdf5ffe5c70c329eefb54198a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLFWAPI struct wl_output *</type>
        <definition>GLFWAPI struct wl_output * glfwGetWaylandMonitor</definition>
        <argsstring>(GLFWmonitor *handle)</argsstring>
        <name>glfwGetWaylandMonitor</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" line="227" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c" bodystart="227" bodyend="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GLFW<sp/>3.4<sp/>Wayland<sp/>-<sp/>www.glfw.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014<sp/>Jonas<sp/>Ådahl<sp/>&lt;jadahl@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>be<sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>be<sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>fine<sp/>to<sp/>use<sp/>C99<sp/>in<sp/>this<sp/>file<sp/>because<sp/>it<sp/>will<sp/>not<sp/>be<sp/>built<sp/>with<sp/>VS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>outputHandleGeometry(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_output*<sp/><ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>x,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>y,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>physicalWidth,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>physicalHeight,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>subpixel,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>make,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>model,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>transform)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref><sp/>*monitor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[1024];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;wl.x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;wl.y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;widthMM<sp/>=<sp/>physicalWidth;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;heightMM<sp/>=<sp/>physicalHeight;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(name),<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>make,<sp/>model);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;name<sp/>=<sp/>_glfw_strdup(name);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>outputHandleMode(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_output*<sp/><ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>width,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>height,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>refresh)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref><sp/>*monitor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref><sp/>mode;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>mode.<ref refid="struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d" kindref="member">width</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>mode.height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>mode.redBits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>mode.greenBits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>mode.blueBits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>mode.refreshRate<sp/>=<sp/>(int)<sp/><ref refid="group__core__func__common_1gaa81940d45558cd2ae07fe135e653bcfa" kindref="member">round</ref>(refresh<sp/>/<sp/>1000.0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;modeCount++;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;modes<sp/>=</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realloc(monitor-&gt;modes,<sp/>monitor-&gt;modeCount<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref>));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;modes[monitor-&gt;modeCount<sp/>-<sp/>1]<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>WL_OUTPUT_MODE_CURRENT)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor-&gt;wl.currentMode<sp/>=<sp/>monitor-&gt;modeCount<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>outputHandleDone(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_output*<sp/><ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref><sp/>*monitor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monitor-&gt;widthMM<sp/>&lt;=<sp/>0<sp/>||<sp/>monitor-&gt;heightMM<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>Wayland<sp/>does<sp/>not<sp/>provide<sp/>a<sp/>physical<sp/>size,<sp/>assume<sp/>the<sp/>default<sp/>96<sp/>DPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref>*<sp/>mode<sp/>=<sp/>&amp;monitor-&gt;modes[monitor-&gt;wl.currentMode];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor-&gt;widthMM<sp/><sp/>=<sp/>(int)<sp/>(mode-&gt;width<sp/>*<sp/>25.4f<sp/>/<sp/>96.f);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitor-&gt;heightMM<sp/>=<sp/>(int)<sp/>(mode-&gt;height<sp/>*<sp/>25.4f<sp/>/<sp/>96.f);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>_glfwInputMonitor(monitor,<sp/>GLFW_CONNECTED,<sp/>_GLFW_INSERT_LAST);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>outputHandleScale(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_output*<sp/><ref refid="structoutput" kindref="compound">output</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>factor)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref><sp/>*monitor<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;wl.scale<sp/>=<sp/>factor;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_output_listener<sp/>outputListener<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>outputHandleGeometry,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>outputHandleMode,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>outputHandleDone,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>outputHandleScale,</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_glfwAddOutputWayland(uint32_t<sp/>name,<sp/>uint32_t<sp/>version)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref><sp/>*monitor;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_output<sp/>*<ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_glfwInputError(<ref refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" kindref="member">GLFW_PLATFORM_ERROR</ref>,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Wayland:<sp/>Unsupported<sp/>output<sp/>interface<sp/>version&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>actual<sp/>name<sp/>of<sp/>this<sp/>output<sp/>will<sp/>be<sp/>set<sp/>in<sp/>the<sp/>geometry<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor<sp/>=<sp/>_glfwAllocMonitor(NULL,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structoutput" kindref="compound">output</ref><sp/>=<sp/>wl_registry_bind(_glfw.wl.registry,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wl_output_interface,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structoutput" kindref="compound">output</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_glfwFreeMonitor(monitor);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;wl.scale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;wl.output<sp/>=<sp/><ref refid="structoutput" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>monitor-&gt;wl.name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_output_add_listener(<ref refid="structoutput" kindref="compound">output</ref>,<sp/>&amp;outputListener,<sp/>monitor);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_glfwPlatformFreeMonitor(<ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref>*<sp/>monitor)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monitor-&gt;wl.output)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_output_destroy(monitor-&gt;wl.output);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_glfwPlatformGetMonitorPos(<ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ypos)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpos)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xpos<sp/>=<sp/>monitor-&gt;wl.x;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ypos)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ypos<sp/>=<sp/>monitor-&gt;wl.y;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_glfwPlatformGetMonitorContentScale(<ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref>*<sp/>monitor,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>xscale,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>yscale)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xscale)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xscale<sp/>=<sp/>(float)<sp/>monitor-&gt;wl.scale;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(yscale)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yscale<sp/>=<sp/>(float)<sp/>monitor-&gt;wl.scale;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_glfwPlatformGetMonitorWorkarea(<ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref>*<sp/>monitor,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ypos,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpos)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xpos<sp/>=<sp/>monitor-&gt;wl.x;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ypos)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ypos<sp/>=<sp/>monitor-&gt;wl.y;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*width<sp/>=<sp/>monitor-&gt;modes[monitor-&gt;wl.currentMode].<ref refid="struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*height<sp/>=<sp/>monitor-&gt;modes[monitor-&gt;wl.currentMode].<ref refid="struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref>*<sp/>_glfwPlatformGetVideoModes(<ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref>*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>found)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>*found<sp/>=<sp/>monitor-&gt;modeCount;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>monitor-&gt;modes;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_glfwPlatformGetVideoMode(<ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref>*<sp/>monitor,<sp/><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref>*<sp/>mode)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/>=<sp/>monitor-&gt;modes[monitor-&gt;wl.currentMode];</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">GLFWbool<sp/>_glfwPlatformGetGammaRamp(<ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref>*<sp/>monitor,<sp/><ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref>*<sp/>ramp)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>_glfwInputError(<ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref>,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Wayland:<sp/>Gamma<sp/>ramp<sp/>access<sp/>is<sp/>not<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5" kindref="member">GLFW_FALSE</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_glfwPlatformSetGammaRamp(<ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref>*<sp/>monitor,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref>*<sp/>ramp)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>_glfwInputError(<ref refid="group__errors_1ga526fba20a01504a8086c763b6ca53ce5" kindref="member">GLFW_FEATURE_UNAVAILABLE</ref>,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Wayland:<sp/>Gamma<sp/>ramp<sp/>access<sp/>is<sp/>not<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">GLFWAPI<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_output*<sp/>glfwGetWaylandMonitor(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*<sp/>handle)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref>*<sp/>monitor<sp/>=<sp/>(<ref refid="struct___g_l_f_wmonitor" kindref="compound">_GLFWmonitor</ref>*)<sp/>handle;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>_GLFW_REQUIRE_INIT_OR_RETURN(NULL);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>monitor-&gt;wl.output;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glfw/src/wl_monitor.c"/>
  </compounddef>
</doxygen>
