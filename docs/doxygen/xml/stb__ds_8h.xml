<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="stb__ds_8h" kind="file" language="C++">
    <compoundname>stb_ds.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includedby refid="stretch__test_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretch_test.c</includedby>
    <includedby refid="test__c__compilation_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_c_compilation.c</includedby>
    <includedby refid="test__cpp__compilation_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_cpp_compilation.cpp</includedby>
    <includedby refid="test__ds_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_ds.c</includedby>
    <includedby refid="test__ds__cpp_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_ds_cpp.cpp</includedby>
    <includedby refid="test__siphash_8c" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_siphash.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h</label>
        <link refid="stb__ds_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/deprecated/stretch_test.c</label>
        <link refid="stretch__test_8c_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h</label>
        <link refid="stb__ds_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_c_compilation.c</label>
        <link refid="test__c__compilation_8c_source"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_cpp_compilation.cpp</label>
        <link refid="test__cpp__compilation_8cpp_source"/>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_ds.c</label>
        <link refid="test__ds_8c_source"/>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_ds_cpp.cpp</label>
        <link refid="test__ds__cpp_8cpp_source"/>
      </node>
      <node id="7">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/tests/test_siphash.c</label>
        <link refid="test__siphash_8c_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structstbds__array__header" prot="public">stbds_array_header</innerclass>
    <innerclass refid="structstbds__string__block" prot="public">stbds_string_block</innerclass>
    <innerclass refid="structstbds__string__arena" prot="public">stbds_string_arena</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="stb__ds_8h_1a005229891dcb4e63a9b78a838c5c3385" prot="public" static="no">
        <name>INCLUDE_STB_DS_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="392" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a6006d5fa7873ec8e31aa8a799c369fed" prot="public" static="no">
        <name>arrlen</name>
        <initializer>stbds_arrlen</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="398" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a2f49aaeaf50bdc6cfe07206c347ead4e" prot="public" static="no">
        <name>arrlenu</name>
        <initializer>stbds_arrlenu</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="399" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a35cee0dc293ded5a0f13d233e0175cd8" prot="public" static="no">
        <name>arrput</name>
        <initializer>stbds_arrput</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="400" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a8ab72b9c25194dbc1c5b1671d0d89795" prot="public" static="no">
        <name>arrpush</name>
        <initializer>stbds_arrput</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="401" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a5f57bff7c340bd061f51adccf12e296f" prot="public" static="no">
        <name>arrpop</name>
        <initializer>stbds_arrpop</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="402" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1af26ca4dedd7d5c12e417770e3b6c0e70" prot="public" static="no">
        <name>arrfree</name>
        <initializer>stbds_arrfree</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="403" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ab63178a9f67a5454082873310698a99b" prot="public" static="no">
        <name>arraddn</name>
        <initializer>stbds_arraddn</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="404" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a0f75eeb3756128eab9c8ec4d0b4b9dae" prot="public" static="no">
        <name>arraddnptr</name>
        <initializer>stbds_arraddnptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="405" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a255bd07d36607ca6301faacd6c4ca9f7" prot="public" static="no">
        <name>arraddnindex</name>
        <initializer>stbds_arraddnindex</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="406" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ab6cd09066e63e2f62fd48bbc6aefc9d7" prot="public" static="no">
        <name>arrsetlen</name>
        <initializer>stbds_arrsetlen</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="407" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a217e3edbea1525e78ed8fb63809db80e" prot="public" static="no">
        <name>arrlast</name>
        <initializer>stbds_arrlast</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="408" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a0f32c7c5ed6f589d6d78286307dce41b" prot="public" static="no">
        <name>arrins</name>
        <initializer>stbds_arrins</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="409" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a5de357424d4bf828abe802187777c2cc" prot="public" static="no">
        <name>arrinsn</name>
        <initializer>stbds_arrinsn</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="410" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a7976b74022d70a8980b53a0dc181916a" prot="public" static="no">
        <name>arrdel</name>
        <initializer>stbds_arrdel</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="411" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a3111e774036cb3bf39da4d229a1b285a" prot="public" static="no">
        <name>arrdeln</name>
        <initializer>stbds_arrdeln</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="412" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a08fde1c543880882121668bb58d67a03" prot="public" static="no">
        <name>arrdelswap</name>
        <initializer>stbds_arrdelswap</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="413" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a9f2bf46d6f4d9a9df21714efd60b0dae" prot="public" static="no">
        <name>arrcap</name>
        <initializer>stbds_arrcap</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="414" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aacfab99eba54fff26ca5d48c821f737c" prot="public" static="no">
        <name>arrsetcap</name>
        <initializer>stbds_arrsetcap</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="415" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a599cd223310076d8098ae95fc0a46b4d" prot="public" static="no">
        <name>hmput</name>
        <initializer>stbds_hmput</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="417" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ad687321043a6b1c83bdee35ea64c39b5" prot="public" static="no">
        <name>hmputs</name>
        <initializer>stbds_hmputs</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="418" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a574c1b9fe7c348e78be5fc055e591b60" prot="public" static="no">
        <name>hmget</name>
        <initializer>stbds_hmget</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="419" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a16a61ae559134affd08570e351c1c373" prot="public" static="no">
        <name>hmget_ts</name>
        <initializer>stbds_hmget_ts</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="420" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a092d2ad1fe8aa14d27f918e814ba7232" prot="public" static="no">
        <name>hmgets</name>
        <initializer>stbds_hmgets</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="421" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a56fc531574fdbc98089100fb0691b3bb" prot="public" static="no">
        <name>hmgetp</name>
        <initializer>stbds_hmgetp</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="422" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a470a10d81efe3847ca4d9d52e881fc65" prot="public" static="no">
        <name>hmgetp_ts</name>
        <initializer>stbds_hmgetp_ts</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="423" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ad18195626f39a64d59222f1776a9c27a" prot="public" static="no">
        <name>hmgetp_null</name>
        <initializer>stbds_hmgetp_null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="424" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1af8bede80b85f779b8ad4e6bf0f7946a1" prot="public" static="no">
        <name>hmgeti</name>
        <initializer>stbds_hmgeti</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="425" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a70f68c43e2af33433a9ebfb5708b31c1" prot="public" static="no">
        <name>hmgeti_ts</name>
        <initializer>stbds_hmgeti_ts</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="426" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ad17f0e9223e1c026ab2d2533d2aa716a" prot="public" static="no">
        <name>hmdel</name>
        <initializer>stbds_hmdel</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="427" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aab2e1fb67ec791f1a580215a179d9774" prot="public" static="no">
        <name>hmlen</name>
        <initializer>stbds_hmlen</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="428" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a2567e23a6327d217d8cef5c192f68ea2" prot="public" static="no">
        <name>hmlenu</name>
        <initializer>stbds_hmlenu</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="429" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a3d9fab8acddba0a51ca0c4f411099f35" prot="public" static="no">
        <name>hmfree</name>
        <initializer>stbds_hmfree</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="430" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aa9041238f6b64d511c10836feb9c15ac" prot="public" static="no">
        <name>hmdefault</name>
        <initializer>stbds_hmdefault</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="431" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a659f06b845e0cd9d74924cf8ea797b45" prot="public" static="no">
        <name>hmdefaults</name>
        <initializer>stbds_hmdefaults</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="432" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a520d67cdf3ae53cdebb4284dc98fd754" prot="public" static="no">
        <name>shput</name>
        <initializer>stbds_shput</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="434" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a01c2736fa476bb40acdb44bff2b0132e" prot="public" static="no">
        <name>shputi</name>
        <initializer>stbds_shputi</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="435" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ad7484f5f81c01ad70b230554274c305f" prot="public" static="no">
        <name>shputs</name>
        <initializer>stbds_shputs</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="436" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a537827ebf7307de0563d5f613fb69f54" prot="public" static="no">
        <name>shget</name>
        <initializer>stbds_shget</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="437" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a8c6322a082cdae5c913e294f280cad7e" prot="public" static="no">
        <name>shgeti</name>
        <initializer>stbds_shgeti</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="438" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aa4180ad3379c603b80a0af6edeb1b4e5" prot="public" static="no">
        <name>shgets</name>
        <initializer>stbds_shgets</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="439" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a683b7b1fbcf2e830f52ca5653daf032a" prot="public" static="no">
        <name>shgetp</name>
        <initializer>stbds_shgetp</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="440" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1af5dd47c93fe5ba0f7c1e43eb642ea8f1" prot="public" static="no">
        <name>shgetp_null</name>
        <initializer>stbds_shgetp_null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="441" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aafacfcc6b39756f1a98b9a6a827d1e8f" prot="public" static="no">
        <name>shdel</name>
        <initializer>stbds_shdel</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="442" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a240f09bec6bc0014e97db3f5bac6918a" prot="public" static="no">
        <name>shlen</name>
        <initializer>stbds_shlen</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="443" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aaaecd3e5206fc2e04de712eb86cc92c5" prot="public" static="no">
        <name>shlenu</name>
        <initializer>stbds_shlenu</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="444" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ad883fc8ac77bb29cd2a7cff61f108da9" prot="public" static="no">
        <name>shfree</name>
        <initializer>stbds_shfree</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="445" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a63c48e54311df3607e8dba6a05fba756" prot="public" static="no">
        <name>shdefault</name>
        <initializer>stbds_shdefault</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="446" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ada84424786875e6c3c5bed8def764fde" prot="public" static="no">
        <name>shdefaults</name>
        <initializer>stbds_shdefaults</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="447" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a5097a8bac668e156f8a48861cfbf02ee" prot="public" static="no">
        <name>sh_new_arena</name>
        <initializer>stbds_sh_new_arena</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="448" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ac5049c4c01a6891dea305fcc966cf9ec" prot="public" static="no">
        <name>sh_new_strdup</name>
        <initializer>stbds_sh_new_strdup</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="449" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a0d3ff929004a3c3bfcf5624755465cb5" prot="public" static="no">
        <name>stralloc</name>
        <initializer>stbds_stralloc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="451" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a4e83b7e3dc6bfbc7c6bf591d2d6e1bc5" prot="public" static="no">
        <name>strreset</name>
        <initializer>stbds_strreset</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="452" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a4d0e2a79dcdf98adf02e1a129eee1437" prot="public" static="no">
        <name>STBDS_REALLOC</name>
        <param><defname>c</defname></param>
        <param><defname>p</defname></param>
        <param><defname>s</defname></param>
        <initializer>realloc(p,s)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="460" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1adeb6c0077e0a300aaedd5b46d83ed581" prot="public" static="no">
        <name>STBDS_FREE</name>
        <param><defname>c</defname></param>
        <param><defname>p</defname></param>
        <initializer>free(p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="461" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ac82316f8bb67d2bb448feb78ca75077f" prot="public" static="no">
        <name>STBDS_NOTUSED</name>
        <param><defname>v</defname></param>
        <initializer>(void)sizeof(v)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="467" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a6a098ee21797f2ffc0a693384b9ced13" prot="public" static="no">
        <name>STBDS_ADDRESSOF</name>
        <param><defname>typevar</defname></param>
        <param><defname>value</defname></param>
        <initializer>&amp;(<ref refid="classvalue" kindref="compound">value</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="529" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a926f2f73e16c4bb2e9bc305b1e36be84" prot="public" static="no">
        <name>STBDS_OFFSETOF</name>
        <param><defname>var</defname></param>
        <param><defname>field</defname></param>
        <initializer>((char *) &amp;(var)-&gt;field - (char *) (var))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="532" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aff076153151e6729b90f4b8571b135cb" prot="public" static="no">
        <name>stbds_header</name>
        <param><defname>t</defname></param>
        <initializer>((<ref refid="structstbds__array__header" kindref="compound">stbds_array_header</ref> *) (t) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="534" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a0340efaacfbd9d7ed4c8ce779870476b" prot="public" static="no">
        <name>stbds_temp</name>
        <param><defname>t</defname></param>
        <initializer>stbds_header(t)-&gt;temp</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="535" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a814a1510a6e179c8f18518a395c72994" prot="public" static="no">
        <name>stbds_temp_key</name>
        <param><defname>t</defname></param>
        <initializer>(*(char **) stbds_header(t)-&gt;hash_table)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="536" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a4c6143575bc729b694b04ea8106dbaca" prot="public" static="no">
        <name>stbds_arrsetcap</name>
        <param><defname>a</defname></param>
        <param><defname>n</defname></param>
        <initializer>(stbds_arrgrow(a,0,n))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="538" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ae33d8678ddffb811847ed6a882ffe35c" prot="public" static="no">
        <name>stbds_arrsetlen</name>
        <param><defname>a</defname></param>
        <param><defname>n</defname></param>
        <initializer>((stbds_arrcap(a) &lt; (size_t) (n) ? stbds_arrsetcap((a),(size_t)(n)),0 : 0), (a) ? stbds_header(a)-&gt;length = (size_t) (n) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="539" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ac648048388dd0736fdc811736ff60360" prot="public" static="no">
        <name>stbds_arrcap</name>
        <param><defname>a</defname></param>
        <initializer>((a) ? stbds_header(a)-&gt;capacity : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="540" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a29d60e1613f5ba773e4f4ae38000c1d2" prot="public" static="no">
        <name>stbds_arrlen</name>
        <param><defname>a</defname></param>
        <initializer>((a) ? (ptrdiff_t) stbds_header(a)-&gt;length : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="541" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a02a65471a7569166e79decc09ce7b287" prot="public" static="no">
        <name>stbds_arrlenu</name>
        <param><defname>a</defname></param>
        <initializer>((a) ?             stbds_header(a)-&gt;length : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="542" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1adfcd6a7fa7b22cd319c5fb880eaec8d7" prot="public" static="no">
        <name>stbds_arrput</name>
        <param><defname>a</defname></param>
        <param><defname>v</defname></param>
        <initializer>(stbds_arrmaybegrow(a,1), (a)[stbds_header(a)-&gt;length++] = (v))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="543" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1afbbace97069a8e743b7914bbb497f484" prot="public" static="no">
        <name>stbds_arrpush</name>
        <initializer>stbds_arrput</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="544" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a7d3d72b12b6cc959960a4b227081de95" prot="public" static="no">
        <name>stbds_arrpop</name>
        <param><defname>a</defname></param>
        <initializer>(stbds_header(a)-&gt;length--, (a)[stbds_header(a)-&gt;length])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="545" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1afaf71db1e7ad309874c330ad3dfe11ed" prot="public" static="no">
        <name>stbds_arraddn</name>
        <param><defname>a</defname></param>
        <param><defname>n</defname></param>
        <initializer>((void)(stbds_arraddnindex(a, n)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="546" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a0fd753219a1b8960a3cbd0a3b3e5c39f" prot="public" static="no">
        <name>stbds_arraddnptr</name>
        <param><defname>a</defname></param>
        <param><defname>n</defname></param>
        <initializer>(stbds_arrmaybegrow(a,n), (n) ? (stbds_header(a)-&gt;length += (n), &amp;(a)[stbds_header(a)-&gt;length-(n)]) : (a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="547" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a32864514d6fbadaf9e3a5d7f2653cefb" prot="public" static="no">
        <name>stbds_arraddnindex</name>
        <param><defname>a</defname></param>
        <param><defname>n</defname></param>
        <initializer>(stbds_arrmaybegrow(a,n), (n) ? (stbds_header(a)-&gt;length += (n), stbds_header(a)-&gt;length-(n)) : stbds_arrlen(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="548" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a2e68dee79be3824bcbb2a694e7beb2e5" prot="public" static="no">
        <name>stbds_arraddnoff</name>
        <initializer>stbds_arraddnindex</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="549" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aa4f05c0d57ba8fe4c81a8ae0dfc17973" prot="public" static="no">
        <name>stbds_arrlast</name>
        <param><defname>a</defname></param>
        <initializer>((a)[stbds_header(a)-&gt;length-1])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="550" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aef9ae2aeacbf49bfed9f505b311d892a" prot="public" static="no">
        <name>stbds_arrfree</name>
        <param><defname>a</defname></param>
        <initializer>((void) ((a) ? STBDS_FREE(NULL,stbds_header(a)) : (void)0), (a)=NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="551" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1afd40e7f1ca6bdae32e32e1ff8c3086fd" prot="public" static="no">
        <name>stbds_arrdel</name>
        <param><defname>a</defname></param>
        <param><defname>i</defname></param>
        <initializer>stbds_arrdeln(a,i,1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="552" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aad7f00fc1446f66b1f4103df3310dad4" prot="public" static="no">
        <name>stbds_arrdeln</name>
        <param><defname>a</defname></param>
        <param><defname>i</defname></param>
        <param><defname>n</defname></param>
        <initializer>(memmove(&amp;(a)[i], &amp;(a)[(i)+(n)], sizeof *(a) * (stbds_header(a)-&gt;length-(n)-(i))), stbds_header(a)-&gt;length -= (n))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="553" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a4bb4f85567d8d5bf85ccb7c33be31dc3" prot="public" static="no">
        <name>stbds_arrdelswap</name>
        <param><defname>a</defname></param>
        <param><defname>i</defname></param>
        <initializer>((a)[i] = stbds_arrlast(a), stbds_header(a)-&gt;length -= 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="554" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a6eefa6f35bc9841caced58a23fe0c71b" prot="public" static="no">
        <name>stbds_arrinsn</name>
        <param><defname>a</defname></param>
        <param><defname>i</defname></param>
        <param><defname>n</defname></param>
        <initializer>(stbds_arraddn((a),(n)), memmove(&amp;(a)[(i)+(n)], &amp;(a)[i], sizeof *(a) * (stbds_header(a)-&gt;length-(n)-(i))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="555" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a9685be9e2940d16f306b61961b064f20" prot="public" static="no">
        <name>stbds_arrins</name>
        <param><defname>a</defname></param>
        <param><defname>i</defname></param>
        <param><defname>v</defname></param>
        <initializer>(stbds_arrinsn((a),(i),1), (a)[i]=(v))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="556" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a9fcbb9b7c45dd16034e07c87a1561048" prot="public" static="no">
        <name>stbds_arrmaybegrow</name>
        <param><defname>a</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                  ((!(a) || stbds_header(a)-&gt;length + (n) &gt; stbds_header(a)-&gt;capacity) \
                                  ? (stbds_arrgrow(a,n,0),0) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="558" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="558" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a8862d93971a1d0d90f25f02e14def4ea" prot="public" static="no">
        <name>stbds_arrgrow</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>((a) = stbds_arrgrowf_wrapper((a), sizeof *(a), (b), (c)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="561" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a0431be937983bc2fb05139f4f21eb712" prot="public" static="no">
        <name>stbds_hmput</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <param><defname>v</defname></param>
        <initializer>    ((t) = stbds_hmput_key_wrapper((t), sizeof *(t), (void*) STBDS_ADDRESSOF((t)-&gt;key, (k)), sizeof (t)-&gt;key, 0),   \
     (t)[stbds_temp((t)-1)].key = (k),    \
     (t)[stbds_temp((t)-1)].<ref refid="classvalue" kindref="compound">value</ref> = (v))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="563" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a483931ea9fbccf2bfa412539a6fbc2b8" prot="public" static="no">
        <name>stbds_hmputs</name>
        <param><defname>t</defname></param>
        <param><defname>s</defname></param>
        <initializer>    ((t) = stbds_hmput_key_wrapper((t), sizeof *(t), &amp;(s).key, sizeof (s).key, STBDS_HM_BINARY), \
     (t)[stbds_temp((t)-1)] = (s))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="568" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a4174f9f19d5173afa701ae060fc71daf" prot="public" static="no">
        <name>stbds_hmgeti</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>    ((t) = stbds_hmget_key_wrapper((t), sizeof *(t), (void*) STBDS_ADDRESSOF((t)-&gt;key, (k)), sizeof (t)-&gt;key, STBDS_HM_BINARY), \
      stbds_temp((t)-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="572" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1af37c52c4240cb6ceea8f9c85cc0c9c15" prot="public" static="no">
        <name>stbds_hmgeti_ts</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <param><defname>temp</defname></param>
        <initializer>    ((t) = stbds_hmget_key_ts_wrapper((t), sizeof *(t), (void*) STBDS_ADDRESSOF((t)-&gt;key, (k)), sizeof (t)-&gt;key, &amp;(temp), STBDS_HM_BINARY), \
      (temp))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="576" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ae9f1f9ba57e4fbfb147b85e86f5cbaea" prot="public" static="no">
        <name>stbds_hmgetp</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>    ((void) stbds_hmgeti(t,k), &amp;(t)[stbds_temp((t)-1)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="580" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1abc197b50afbc754acaaf38b64051c85c" prot="public" static="no">
        <name>stbds_hmgetp_ts</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <param><defname>temp</defname></param>
        <initializer>    ((void) stbds_hmgeti_ts(t,k,temp), &amp;(t)[temp])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="583" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aa01cef15ae2018f06ef24ea259c46aa0" prot="public" static="no">
        <name>stbds_hmdel</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>    (((t) = stbds_hmdel_key_wrapper((t),sizeof *(t), (void*) STBDS_ADDRESSOF((t)-&gt;key, (k)), sizeof (t)-&gt;key, STBDS_OFFSETOF((t),key), STBDS_HM_BINARY)),(t)?stbds_temp((t)-1):0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="586" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a459525fd9cfbbba8c275a58229e1e35b" prot="public" static="no">
        <name>stbds_hmdefault</name>
        <param><defname>t</defname></param>
        <param><defname>v</defname></param>
        <initializer>    ((t) = stbds_hmput_default_wrapper((t), sizeof *(t)), (t)[-1].<ref refid="classvalue" kindref="compound">value</ref> = (v))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="589" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a4bc8ceeaf0f48e47583dccc142ccc936" prot="public" static="no">
        <name>stbds_hmdefaults</name>
        <param><defname>t</defname></param>
        <param><defname>s</defname></param>
        <initializer>    ((t) = stbds_hmput_default_wrapper((t), sizeof *(t)), (t)[-1] = (s))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="592" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a3ffa943d15cc554571ca6c8d248c2045" prot="public" static="no">
        <name>stbds_hmfree</name>
        <param><defname>p</defname></param>
        <initializer>    ((void) ((p) != NULL ? stbds_hmfree_func((p)-1,sizeof*(p)),0 : 0),(p)=NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="595" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ad25de6cd2d6ff71dd8e4117a5a8424ee" prot="public" static="no">
        <name>stbds_hmgets</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>(*stbds_hmgetp(t,k))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="598" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ac39cc237da31913eacdaf9837d5dc117" prot="public" static="no">
        <name>stbds_hmget</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>(stbds_hmgetp(t,k)-&gt;<ref refid="classvalue" kindref="compound">value</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="599" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="599" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a2f2f8515c52f62b47db1a665f67c7224" prot="public" static="no">
        <name>stbds_hmget_ts</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <param><defname>temp</defname></param>
        <initializer>(stbds_hmgetp_ts(t,k,temp)-&gt;<ref refid="classvalue" kindref="compound">value</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="600" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a14662814775053cf791ed0df011e1c84" prot="public" static="no">
        <name>stbds_hmlen</name>
        <param><defname>t</defname></param>
        <initializer>((t) ? (ptrdiff_t) stbds_header((t)-1)-&gt;length-1 : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="601" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a013ee6350dfb8569b262110fc137014b" prot="public" static="no">
        <name>stbds_hmlenu</name>
        <param><defname>t</defname></param>
        <initializer>((t) ?             stbds_header((t)-1)-&gt;length-1 : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="602" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a91dce366112730e727e45c4ddff1a2d5" prot="public" static="no">
        <name>stbds_hmgetp_null</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>(stbds_hmgeti(t,k) == -1 ? NULL : &amp;(t)[stbds_temp((t)-1)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="603" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a937f3efcd5d094a5a402dfb2215998c4" prot="public" static="no">
        <name>stbds_shput</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <param><defname>v</defname></param>
        <initializer>    ((t) = stbds_hmput_key_wrapper((t), sizeof *(t), (void*) (k), sizeof (t)-&gt;key, STBDS_HM_STRING),   \
     (t)[stbds_temp((t)-1)].<ref refid="classvalue" kindref="compound">value</ref> = (v))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="605" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a9afaf35dcbedb613870465ff75842188" prot="public" static="no">
        <name>stbds_shputi</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <param><defname>v</defname></param>
        <initializer>    ((t) = stbds_hmput_key_wrapper((t), sizeof *(t), (void*) (k), sizeof (t)-&gt;key, STBDS_HM_STRING),   \
     (t)[stbds_temp((t)-1)].<ref refid="classvalue" kindref="compound">value</ref> = (v), stbds_temp((t)-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="609" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a6a1659aca3c9af731900ab656a2b989d" prot="public" static="no">
        <name>stbds_shputs</name>
        <param><defname>t</defname></param>
        <param><defname>s</defname></param>
        <initializer>    ((t) = stbds_hmput_key_wrapper((t), sizeof *(t), (void*) (s).key, sizeof (s).key, STBDS_HM_STRING), \
     (t)[stbds_temp((t)-1)] = (s), \
     (t)[stbds_temp((t)-1)].key = stbds_temp_key((t)-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="613" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1abfcdaa5eebe06f467237b77f205df8cb" prot="public" static="no">
        <name>stbds_pshput</name>
        <param><defname>t</defname></param>
        <param><defname>p</defname></param>
        <initializer>    ((t) = stbds_hmput_key_wrapper((t), sizeof *(t), (void*) (p)-&gt;key, sizeof (p)-&gt;key, STBDS_HM_PTR_TO_STRING), \
     (t)[stbds_temp((t)-1)] = (p))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="618" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a50f6f2ed3d189116a704d0e188eccc77" prot="public" static="no">
        <name>stbds_shgeti</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>     ((t) = stbds_hmget_key_wrapper((t), sizeof *(t), (void*) (k), sizeof (t)-&gt;key, STBDS_HM_STRING), \
      stbds_temp((t)-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="622" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ae77dedf1fbbad3934e81dfb0a90ef0b2" prot="public" static="no">
        <name>stbds_pshgeti</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>     ((t) = stbds_hmget_key_wrapper((t), sizeof *(t), (void*) (k), sizeof (*(t))-&gt;key, STBDS_HM_PTR_TO_STRING), \
      stbds_temp((t)-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="626" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a1398d87a32fd93f70d24752db19b1a26" prot="public" static="no">
        <name>stbds_shgetp</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>    ((void) stbds_shgeti(t,k), &amp;(t)[stbds_temp((t)-1)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="630" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a9e44d4f0c62388b8e6cf29f1b5e6fc08" prot="public" static="no">
        <name>stbds_pshget</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>    ((void) stbds_pshgeti(t,k), (t)[stbds_temp((t)-1)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="633" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a0c457e9e33529d122edf6eb9696dd688" prot="public" static="no">
        <name>stbds_shdel</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>    (((t) = stbds_hmdel_key_wrapper((t),sizeof *(t), (void*) (k), sizeof (t)-&gt;key, STBDS_OFFSETOF((t),key), STBDS_HM_STRING)),(t)?stbds_temp((t)-1):0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="636" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a405088e5be97f1b3966a140e80842b42" prot="public" static="no">
        <name>stbds_pshdel</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>    (((t) = stbds_hmdel_key_wrapper((t),sizeof *(t), (void*) (k), sizeof (*(t))-&gt;key, STBDS_OFFSETOF(*(t),key), STBDS_HM_PTR_TO_STRING)),(t)?stbds_temp((t)-1):0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="638" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="638" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a0818e59dc8e28eb52d2c00a956fa7e14" prot="public" static="no">
        <name>stbds_sh_new_arena</name>
        <param><defname>t</defname></param>
        <initializer>    ((t) = stbds_shmode_func_wrapper(t, sizeof *(t), STBDS_SH_ARENA))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="641" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="641" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a733a5432300b2ae1eb61a9ece509b214" prot="public" static="no">
        <name>stbds_sh_new_strdup</name>
        <param><defname>t</defname></param>
        <initializer>    ((t) = stbds_shmode_func_wrapper(t, sizeof *(t), STBDS_SH_STRDUP))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="643" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ac6e0c3c67fb5f4b25f01fa6d881d3c73" prot="public" static="no">
        <name>stbds_shdefault</name>
        <param><defname>t</defname></param>
        <param><defname>v</defname></param>
        <initializer>stbds_hmdefault(t,v)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="646" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a672f037878a3f4cca5b94191b9817b62" prot="public" static="no">
        <name>stbds_shdefaults</name>
        <param><defname>t</defname></param>
        <param><defname>s</defname></param>
        <initializer>stbds_hmdefaults(t,s)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="647" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a13b5f3a829070afbda358d225bad64ea" prot="public" static="no">
        <name>stbds_shfree</name>
        <initializer>stbds_hmfree</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="649" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ad8d806d2db325e649b7840d85c441a48" prot="public" static="no">
        <name>stbds_shlenu</name>
        <initializer>stbds_hmlenu</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="650" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a9f08947f0e4fcf007e8250bff0a40082" prot="public" static="no">
        <name>stbds_shgets</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>(*stbds_shgetp(t,k))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="652" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a57fe6d75faf9b1e88ecb35583186b10c" prot="public" static="no">
        <name>stbds_shget</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>(stbds_shgetp(t,k)-&gt;<ref refid="classvalue" kindref="compound">value</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="653" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a909bb6cda9baf39910b6bd03151182e1" prot="public" static="no">
        <name>stbds_shgetp_null</name>
        <param><defname>t</defname></param>
        <param><defname>k</defname></param>
        <initializer>(stbds_shgeti(t,k) == -1 ? NULL : &amp;(t)[stbds_temp((t)-1)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="654" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aee9b26e333bbe56daf64330134403744" prot="public" static="no">
        <name>stbds_shlen</name>
        <initializer>stbds_hmlen</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="655" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1abf319e09f0e4cf741c59eb7bb5a5bf63" prot="public" static="no">
        <name>STBDS_HM_BINARY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="679" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a950b570ef617f9219a1a38a97c2b8fe5" prot="public" static="no">
        <name>STBDS_HM_STRING</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="680" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="680" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ab8816db6fcc864f96feecef663d04ea5" prot="public" static="no">
        <name>stbds_arrgrowf_wrapper</name>
        <initializer>stbds_arrgrowf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="715" column="10" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="715" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1ac01ca609da10050e301112406bcbc6dd" prot="public" static="no">
        <name>stbds_hmget_key_wrapper</name>
        <initializer>stbds_hmget_key</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="716" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="716" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1aa3d6df209c1944a164efb61e3e9943fe" prot="public" static="no">
        <name>stbds_hmget_key_ts_wrapper</name>
        <initializer>stbds_hmget_key_ts</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="717" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a835cc977126ed0d17ed03abc9e066a9e" prot="public" static="no">
        <name>stbds_hmput_default_wrapper</name>
        <initializer>stbds_hmput_default</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="718" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="718" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1abb9a19c79be4bb045ee344a269130946" prot="public" static="no">
        <name>stbds_hmput_key_wrapper</name>
        <initializer>stbds_hmput_key</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="719" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a388c44ff27851ac0dbab40d741085207" prot="public" static="no">
        <name>stbds_hmdel_key_wrapper</name>
        <initializer>stbds_hmdel_key</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="720" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__ds_8h_1a569a8cf4741be33207e2fc5b22c10c7c" prot="public" static="no">
        <name>stbds_shmode_func_wrapper</name>
        <param><defname>t</defname></param>
        <param><defname>e</defname></param>
        <param><defname>m</defname></param>
        <initializer>stbds_shmode_func(e,m)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="721" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="stb__ds_8h_1a15b3bbe041870ee299f7e042b0305e3c" prot="public" static="no" strong="no">
        <type></type>
        <name>@119</name>
        <enumvalue id="stb__ds_8h_1a15b3bbe041870ee299f7e042b0305e3ca59182471de92e24b86ffad093024442a" prot="public">
          <name>STBDS_SH_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__ds_8h_1a15b3bbe041870ee299f7e042b0305e3ca8e3b6ebef25ad0cd1671d1907f674b33" prot="public">
          <name>STBDS_SH_DEFAULT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__ds_8h_1a15b3bbe041870ee299f7e042b0305e3ca0f3b4e19006b798f5f57bb959fa436a7" prot="public">
          <name>STBDS_SH_STRDUP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__ds_8h_1a15b3bbe041870ee299f7e042b0305e3cacc00a7d3e35d4cf49876ccd28090d822" prot="public">
          <name>STBDS_SH_ARENA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="682" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="683" bodyend="688"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="stb__ds_8h_1a66906ee0ec21690aeafa7f8b6b33d74c" prot="public" static="no">
        <type>struct <ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref></type>
        <definition>typedef struct stbds_string_arena stbds_string_arena</definition>
        <argsstring></argsstring>
        <name>stbds_string_arena</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="482" column="33" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stb__ds_8h_1a757d0d5895b4a571711c02462bc02e97" prot="public" static="no">
        <type>struct <ref refid="structstbds__string__block" kindref="compound">stbds_string_block</ref></type>
        <definition>typedef struct stbds_string_block stbds_string_block</definition>
        <argsstring></argsstring>
        <name>stbds_string_block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="669" column="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stb__ds_8h_1a37de1a4342984a3eae09289c02af6b38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbds_rand_seed</definition>
        <argsstring>(size_t seed)</argsstring>
        <name>stbds_rand_seed</name>
        <param>
          <type>size_t</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="475" column="13" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="475" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1afb89b237bcea77a24187b7941d3645f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t stbds_hash_bytes</definition>
        <argsstring>(void *p, size_t len, size_t seed)</argsstring>
        <name>stbds_hash_bytes</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="478" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="478" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1a7bc6b1aa4bb01306243978cbfc005136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t stbds_hash_string</definition>
        <argsstring>(char *str, size_t seed)</argsstring>
        <name>stbds_hash_string</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="479" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="479" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1a02f5efe23718509313401f189ca12923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * stbds_stralloc</definition>
        <argsstring>(stbds_string_arena *a, char *str)</argsstring>
        <name>stbds_stralloc</name>
        <param>
          <type><ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="483" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="483" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1a5a6bb1bb5d0f443bd6c86de698d99673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbds_strreset</definition>
        <argsstring>(stbds_string_arena *a)</argsstring>
        <name>stbds_strreset</name>
        <param>
          <type><ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="484" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="484" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1a321e1e10bca1c1b69a1fe59459606207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbds_unit_tests</definition>
        <argsstring>(void)</argsstring>
        <name>stbds_unit_tests</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="487" column="13" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="487" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1aa83497c7428b1c66b94eb65cc42ad9d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * stbds_arrgrowf</definition>
        <argsstring>(void *a, size_t elemsize, size_t addlen, size_t min_cap)</argsstring>
        <name>stbds_arrgrowf</name>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elemsize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>addlen</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>min_cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="494" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="494" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1a9e7f986f1be3d2c13c1a52b0e28e490e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbds_arrfreef</definition>
        <argsstring>(void *a)</argsstring>
        <name>stbds_arrfreef</name>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="495" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="495" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1a97323b7b041c9c7b4497bbe78822abb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stbds_hmfree_func</definition>
        <argsstring>(void *p, size_t elemsize)</argsstring>
        <name>stbds_hmfree_func</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elemsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="496" column="15" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="496" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1a7f0e7c35907617d9992047de1d38bddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * stbds_hmget_key</definition>
        <argsstring>(void *a, size_t elemsize, void *key, size_t keysize, int mode)</argsstring>
        <name>stbds_hmget_key</name>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elemsize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keysize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="497" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="497" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1ab9c0d26802b6fd0d2a889aebf0236dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * stbds_hmget_key_ts</definition>
        <argsstring>(void *a, size_t elemsize, void *key, size_t keysize, ptrdiff_t *temp, int mode)</argsstring>
        <name>stbds_hmget_key_ts</name>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elemsize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keysize</declname>
        </param>
        <param>
          <type>ptrdiff_t *</type>
          <declname>temp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="498" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="498" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1a9b06a64fcbaa547fa66193c00fa310e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * stbds_hmput_default</definition>
        <argsstring>(void *a, size_t elemsize)</argsstring>
        <name>stbds_hmput_default</name>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elemsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="499" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="499" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1a309065348bf3106d85946e363e594de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * stbds_hmput_key</definition>
        <argsstring>(void *a, size_t elemsize, void *key, size_t keysize, int mode)</argsstring>
        <name>stbds_hmput_key</name>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elemsize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keysize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="500" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="500" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1aa78cf18fba4b867530afc30da4c0b43d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * stbds_hmdel_key</definition>
        <argsstring>(void *a, size_t elemsize, void *key, size_t keysize, size_t keyoffset, int mode)</argsstring>
        <name>stbds_hmdel_key</name>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elemsize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keysize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keyoffset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="501" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="501" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__ds_8h_1aa7d6cb150203d8909779f52ff3357822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * stbds_shmode_func</definition>
        <argsstring>(size_t elemsize, int mode)</argsstring>
        <name>stbds_shmode_func</name>
        <param>
          <type>size_t</type>
          <declname>elemsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" line="502" column="14" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h" declline="502" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>stb_ds.h<sp/>-<sp/>v0.67<sp/>-<sp/>public<sp/>domain<sp/>data<sp/>structures<sp/>-<sp/>Sean<sp/>Barrett<sp/>2019</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>single-header-file<sp/>library<sp/>that<sp/>provides<sp/>easy-to-use</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>dynamic<sp/>arrays<sp/>and<sp/>hash<sp/>tables<sp/>for<sp/>C<sp/>(also<sp/>works<sp/>in<sp/>C++).</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>For<sp/>a<sp/>gentle<sp/>introduction:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>http://nothings.org/stb_ds</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>To<sp/>use<sp/>this<sp/>library,<sp/>do<sp/>this<sp/>in<sp/>*one*<sp/>C<sp/>or<sp/>C++<sp/>file:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STB_DS_IMPLEMENTATION</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&quot;stb_ds.h&quot;</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">TABLE<sp/>OF<sp/>CONTENTS</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>Table<sp/>of<sp/>Contents</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>Compile-time<sp/>options</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>Documentation</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>Notes<sp/>-<sp/>Dynamic<sp/>arrays</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>Notes<sp/>-<sp/>Hash<sp/>maps</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>Credits</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">COMPILE-TIME<sp/>OPTIONS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>#define<sp/>STBDS_NO_SHORT_NAMES</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>This<sp/>flag<sp/>needs<sp/>to<sp/>be<sp/>set<sp/>globally.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>By<sp/>default<sp/>stb_ds<sp/>exposes<sp/>shorter<sp/>function<sp/>names<sp/>that<sp/>are<sp/>not<sp/>qualified</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>&quot;stbds_&quot;<sp/>prefix.<sp/>If<sp/>these<sp/>names<sp/>conflict<sp/>with<sp/>the<sp/>names<sp/>in<sp/>your</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>code,<sp/>define<sp/>this<sp/>flag.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/>#define<sp/>STBDS_SIPHASH_2_4</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>This<sp/>flag<sp/>only<sp/>needs<sp/>to<sp/>be<sp/>set<sp/>in<sp/>the<sp/>file<sp/>containing<sp/>#define<sp/>STB_DS_IMPLEMENTATION.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>By<sp/>default<sp/>stb_ds.h<sp/>hashes<sp/>using<sp/>a<sp/>weaker<sp/>variant<sp/>of<sp/>SipHash<sp/>and<sp/>a<sp/>custom<sp/>hash<sp/>for</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>4-<sp/>and<sp/>8-byte<sp/>keys.<sp/>On<sp/>64-bit<sp/>platforms,<sp/>you<sp/>can<sp/>define<sp/>the<sp/>above<sp/>flag<sp/>to<sp/>force</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>stb_ds.h<sp/>to<sp/>use<sp/>specification-compliant<sp/>SipHash-2-4<sp/>for<sp/>all<sp/>keys.<sp/>Doing<sp/>so<sp/>makes</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>hash<sp/>table<sp/>insertion<sp/>about<sp/>20%<sp/>slower<sp/>on<sp/>4-<sp/>and<sp/>8-byte<sp/>keys,<sp/>5%<sp/>slower<sp/>on</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>64-byte<sp/>keys,<sp/>and<sp/>10%<sp/>slower<sp/>on<sp/>256-byte<sp/>keys<sp/>on<sp/>my<sp/>test<sp/>computer.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/>#define<sp/>STBDS_REALLOC(context,ptr,size)<sp/>better_realloc</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/>#define<sp/>STBDS_FREE(context,ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>better_free</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>These<sp/>defines<sp/>only<sp/>need<sp/>to<sp/>be<sp/>set<sp/>in<sp/>the<sp/>file<sp/>containing<sp/>#define<sp/>STB_DS_IMPLEMENTATION.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>By<sp/>default<sp/>stb_ds<sp/>uses<sp/>stdlib<sp/>realloc()<sp/>and<sp/>free()<sp/>for<sp/>memory<sp/>management.<sp/>You<sp/>can</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>substitute<sp/>your<sp/>own<sp/>functions<sp/>instead<sp/>by<sp/>defining<sp/>these<sp/>symbols.<sp/>You<sp/>must<sp/>either</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>define<sp/>both,<sp/>or<sp/>neither.<sp/>Note<sp/>that<sp/>at<sp/>the<sp/>moment,<sp/>&apos;context&apos;<sp/>will<sp/>always<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>@TODO<sp/>add<sp/>an<sp/>array/hash<sp/>initialization<sp/>function<sp/>that<sp/>takes<sp/>a<sp/>memory<sp/>context<sp/>pointer.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>#define<sp/>STBDS_UNIT_TESTS</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Defines<sp/>a<sp/>function<sp/>stbds_unit_tests()<sp/>that<sp/>checks<sp/>the<sp/>functioning<sp/>of<sp/>the<sp/>data<sp/>structures.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/>Note<sp/>that<sp/>on<sp/>older<sp/>versions<sp/>of<sp/>gcc<sp/>(e.g.<sp/>5.x.x)<sp/>you<sp/>may<sp/>need<sp/>to<sp/>build<sp/>with<sp/>&apos;-std=c++0x&apos;</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>(or<sp/>equivalentally<sp/>&apos;-std=c++11&apos;)<sp/>when<sp/>using<sp/>anonymous<sp/>structures<sp/>as<sp/>seen<sp/>on<sp/>the<sp/>web</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>page<sp/>or<sp/>in<sp/>STBDS_UNIT_TESTS.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">LICENSE</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/>Placed<sp/>in<sp/>the<sp/>public<sp/>domain<sp/>and<sp/>also<sp/>MIT<sp/>licensed.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/>See<sp/>end<sp/>of<sp/>file<sp/>for<sp/>detailed<sp/>license<sp/>information.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">DOCUMENTATION</highlight></codeline>
<codeline lineno="68"><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/>Dynamic<sp/>Arrays</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>Non-function<sp/>interface:</highlight></codeline>
<codeline lineno="72"><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Declare<sp/>an<sp/>empty<sp/>dynamic<sp/>array<sp/>of<sp/>type<sp/>T</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>foo<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Access<sp/>the<sp/>i&apos;th<sp/>item<sp/>of<sp/>a<sp/>dynamic<sp/>array<sp/>&apos;foo&apos;<sp/>of<sp/>type<sp/>T,<sp/>T*<sp/>foo:</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foo[i]</highlight></codeline>
<codeline lineno="78"><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/>Functions<sp/>(actually<sp/>macros)</highlight></codeline>
<codeline lineno="80"><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrfree:</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>arrfree(T*);</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frees<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrlen:</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>arrlen(T*);</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrlenu:</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>arrlenu(T*);</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>array<sp/>as<sp/>an<sp/>unsigned<sp/>type.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrpop:</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>arrpop(T*<sp/>a)</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Removes<sp/>the<sp/>final<sp/>element<sp/>of<sp/>the<sp/>array<sp/>and<sp/>returns<sp/>it.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrput:</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>arrput(T*<sp/>a,<sp/>T<sp/>b);</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Appends<sp/>the<sp/>item<sp/>b<sp/>to<sp/>the<sp/>end<sp/>of<sp/>array<sp/>a.<sp/>Returns<sp/>b.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrins:</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>arrins(T*<sp/>a,<sp/>int<sp/>p,<sp/>T<sp/>b);</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Inserts<sp/>the<sp/>item<sp/>b<sp/>into<sp/>the<sp/>middle<sp/>of<sp/>array<sp/>a,<sp/>into<sp/>a[p],</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moving<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>array<sp/>over.<sp/>Returns<sp/>b.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrinsn:</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>arrinsn(T*<sp/>a,<sp/>int<sp/>p,<sp/>int<sp/>n);</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Inserts<sp/>n<sp/>uninitialized<sp/>items<sp/>into<sp/>array<sp/>a<sp/>starting<sp/>at<sp/>a[p],</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moving<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>array<sp/>over.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arraddnptr:</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>arraddnptr(T*<sp/>a,<sp/>int<sp/>n)</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Appends<sp/>n<sp/>uninitialized<sp/>items<sp/>onto<sp/>array<sp/>at<sp/>the<sp/>end.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>first<sp/>uninitialized<sp/>item<sp/>added.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"></highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arraddnindex:</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>arraddnindex(T*<sp/>a,<sp/>int<sp/>n)</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Appends<sp/>n<sp/>uninitialized<sp/>items<sp/>onto<sp/>array<sp/>at<sp/>the<sp/>end.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>index<sp/>of<sp/>the<sp/>first<sp/>uninitialized<sp/>item<sp/>added.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrdel:</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>arrdel(T*<sp/>a,<sp/>int<sp/>p);</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deletes<sp/>the<sp/>element<sp/>at<sp/>a[p],<sp/>moving<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>array<sp/>over.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"></highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrdeln:</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>arrdeln(T*<sp/>a,<sp/>int<sp/>p,<sp/>int<sp/>n);</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deletes<sp/>n<sp/>elements<sp/>starting<sp/>at<sp/>a[p],<sp/>moving<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>array<sp/>over.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"></highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrdelswap:</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>arrdelswap(T*<sp/>a,<sp/>int<sp/>p);</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deletes<sp/>the<sp/>element<sp/>at<sp/>a[p],<sp/>replacing<sp/>it<sp/>with<sp/>the<sp/>element<sp/>from</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>end<sp/>of<sp/>the<sp/>array.<sp/>O(1)<sp/>performance.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrsetlen:</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>arrsetlen(T*<sp/>a,<sp/>int<sp/>n);</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Changes<sp/>the<sp/>length<sp/>of<sp/>the<sp/>array<sp/>to<sp/>n.<sp/>Allocates<sp/>uninitialized</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slots<sp/>at<sp/>the<sp/>end<sp/>if<sp/>necessary.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"></highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrsetcap:</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>arrsetcap(T*<sp/>a,<sp/>int<sp/>n);</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sets<sp/>the<sp/>length<sp/>of<sp/>allocated<sp/>storage<sp/>to<sp/>at<sp/>least<sp/>n.<sp/>It<sp/>will<sp/>not</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change<sp/>the<sp/>length<sp/>of<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"></highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>arrcap:</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>arrcap(T*<sp/>a);</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>total<sp/>elements<sp/>the<sp/>array<sp/>can<sp/>contain<sp/>without</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needing<sp/>to<sp/>be<sp/>reallocated.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/>Hash<sp/>maps<sp/>&amp;<sp/>String<sp/>hash<sp/>maps</highlight></codeline>
<codeline lineno="150"><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/>Given<sp/>T<sp/>is<sp/>a<sp/>structure<sp/>type:<sp/>struct<sp/>{<sp/>TK<sp/>key;<sp/>TV<sp/>value;<sp/>}.<sp/>Note<sp/>that<sp/>some</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/>functions<sp/>do<sp/>not<sp/>require<sp/>TV<sp/>value<sp/>and<sp/>can<sp/>have<sp/>other<sp/>fields.<sp/>For<sp/>string</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/>hash<sp/>maps,<sp/>TK<sp/>must<sp/>be<sp/>&apos;char<sp/>*&apos;.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"></highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>Special<sp/>interface:</highlight></codeline>
<codeline lineno="156"><highlight class="comment"></highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>stbds_rand_seed:</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>stbds_rand_seed(size_t<sp/>seed);</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>security<sp/>against<sp/>adversarially<sp/>chosen<sp/>data,<sp/>you<sp/>should<sp/>seed<sp/>the</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>library<sp/>with<sp/>a<sp/>strong<sp/>random<sp/>number.<sp/>Or<sp/>at<sp/>least<sp/>seed<sp/>it<sp/>with<sp/>time().</highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hash_string:</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>stbds_hash_string(char<sp/>*str,<sp/>size_t<sp/>seed);</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>hash<sp/>value<sp/>for<sp/>a<sp/>string.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hash_bytes:</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>stbds_hash_bytes(void<sp/>*p,<sp/>size_t<sp/>len,<sp/>size_t<sp/>seed);</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>These<sp/>functions<sp/>hash<sp/>an<sp/>arbitrary<sp/>number<sp/>of<sp/>bytes.<sp/>The<sp/>function</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uses<sp/>a<sp/>custom<sp/>hash<sp/>for<sp/>4-<sp/>and<sp/>8-byte<sp/>data,<sp/>and<sp/>a<sp/>weakened<sp/>version</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>SipHash<sp/>for<sp/>everything<sp/>else.<sp/>On<sp/>64-bit<sp/>platforms<sp/>you<sp/>can<sp/>get</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specification-compliant<sp/>SipHash-2-4<sp/>on<sp/>all<sp/>data<sp/>by<sp/>defining</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_SIPHASH_2_4,<sp/>at<sp/>a<sp/>significant<sp/>cost<sp/>in<sp/>speed.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>Non-function<sp/>interface:</highlight></codeline>
<codeline lineno="175"><highlight class="comment"></highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Declare<sp/>an<sp/>empty<sp/>hash<sp/>map<sp/>of<sp/>type<sp/>T</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>foo<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="178"><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Access<sp/>the<sp/>i&apos;th<sp/>entry<sp/>in<sp/>a<sp/>hash<sp/>table<sp/>T*<sp/>foo:</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foo[i]</highlight></codeline>
<codeline lineno="181"><highlight class="comment"></highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/>Function<sp/>interface<sp/>(actually<sp/>macros):</highlight></codeline>
<codeline lineno="183"><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmfree</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shfree</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>hmfree(T*);</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>shfree(T*);</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Frees<sp/>the<sp/>hashmap<sp/>and<sp/>sets<sp/>the<sp/>pointer<sp/>to<sp/>NULL.</highlight></codeline>
<codeline lineno="189"><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmlen</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shlen</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>hmlen(T*)</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>shlen(T*)</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>hashmap.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmlenu</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shlenu</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>hmlenu(T*)</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>shlenu(T*)</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>hashmap.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmgeti</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shgeti</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmgeti_ts</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>hmgeti(T*,<sp/>TK<sp/>key)</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>shgeti(T*,<sp/>char*<sp/>key)</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>hmgeti_ts(T*,<sp/>TK<sp/>key,<sp/>ptrdiff_t<sp/>tempvar)</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>index<sp/>in<sp/>the<sp/>hashmap<sp/>which<sp/>has<sp/>the<sp/>key<sp/>&apos;key&apos;,<sp/>or<sp/>-1</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>key<sp/>is<sp/>not<sp/>present.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmget</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmget_ts</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shget</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TV<sp/>hmget(T*,<sp/>TK<sp/>key)</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TV<sp/>shget(T*,<sp/>char*<sp/>key)</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TV<sp/>hmget_ts(T*,<sp/>TK<sp/>key,<sp/>ptrdiff_t<sp/>tempvar)</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>corresponding<sp/>to<sp/>&apos;key&apos;<sp/>in<sp/>the<sp/>hashmap.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>structure<sp/>must<sp/>have<sp/>a<sp/>&apos;value&apos;<sp/>field</highlight></codeline>
<codeline lineno="219"><highlight class="comment"></highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmgets</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shgets</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>hmgets(T*,<sp/>TK<sp/>key)</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>shgets(T*,<sp/>char*<sp/>key)</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>structure<sp/>corresponding<sp/>to<sp/>&apos;key&apos;<sp/>in<sp/>the<sp/>hashmap.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"></highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmgetp</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shgetp</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmgetp_ts</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmgetp_null</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shgetp_null</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>hmgetp(T*,<sp/>TK<sp/>key)</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>shgetp(T*,<sp/>char*<sp/>key)</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>hmgetp_ts(T*,<sp/>TK<sp/>key,<sp/>ptrdiff_t<sp/>tempvar)</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>hmgetp_null(T*,<sp/>TK<sp/>key)</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>shgetp_null(T*,<sp/>char<sp/>*key)</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>structure<sp/>corresponding<sp/>to<sp/>&apos;key&apos;<sp/>in</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>hashmap.<sp/>Functions<sp/>ending<sp/>in<sp/>&quot;_null&quot;<sp/>return<sp/>NULL<sp/>if<sp/>the<sp/>key</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>not<sp/>present<sp/>in<sp/>the<sp/>hashmap;<sp/>the<sp/>others<sp/>return<sp/>a<sp/>pointer<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>structure<sp/>holding<sp/>the<sp/>default<sp/>value<sp/>(but<sp/>not<sp/>the<sp/>searched-for<sp/>key).</highlight></codeline>
<codeline lineno="240"><highlight class="comment"></highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmdefault</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shdefault</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TV<sp/>hmdefault(T*,<sp/>TV<sp/>value)</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TV<sp/>shdefault(T*,<sp/>TV<sp/>value)</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sets<sp/>the<sp/>default<sp/>value<sp/>for<sp/>the<sp/>hashmap,<sp/>the<sp/>value<sp/>which<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returned<sp/>by<sp/>hmget/shget<sp/>if<sp/>the<sp/>key<sp/>is<sp/>not<sp/>present.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"></highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmdefaults</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shdefaults</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TV<sp/>hmdefaults(T*,<sp/>T<sp/>item)</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TV<sp/>shdefaults(T*,<sp/>T<sp/>item)</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sets<sp/>the<sp/>default<sp/>struct<sp/>for<sp/>the<sp/>hashmap,<sp/>the<sp/>contents<sp/>which<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returned<sp/>by<sp/>hmgets/shgets<sp/>if<sp/>the<sp/>key<sp/>is<sp/>not<sp/>present.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmput</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shput</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TV<sp/>hmput(T*,<sp/>TK<sp/>key,<sp/>TV<sp/>value)</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TV<sp/>shput(T*,<sp/>char*<sp/>key,<sp/>TV<sp/>value)</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Inserts<sp/>a<sp/>&lt;key,value&gt;<sp/>pair<sp/>into<sp/>the<sp/>hashmap.<sp/>If<sp/>the<sp/>key<sp/>is<sp/>already</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>present<sp/>in<sp/>the<sp/>hashmap,<sp/>updates<sp/>its<sp/>value.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmputs</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shputs</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>hmputs(T*,<sp/>T<sp/>item)</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>shputs(T*,<sp/>T<sp/>item)</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Inserts<sp/>a<sp/>struct<sp/>with<sp/>T.key<sp/>into<sp/>the<sp/>hashmap.<sp/>If<sp/>the<sp/>struct<sp/>is<sp/>already</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>present<sp/>in<sp/>the<sp/>hashmap,<sp/>updates<sp/>it.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"></highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hmdel</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>shdel</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>hmdel(T*,<sp/>TK<sp/>key)</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>shdel(T*,<sp/>char*<sp/>key)</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>&apos;key&apos;<sp/>is<sp/>in<sp/>the<sp/>hashmap,<sp/>deletes<sp/>its<sp/>entry<sp/>and<sp/>returns<sp/>1.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Otherwise<sp/>returns<sp/>0.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"></highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>Function<sp/>interface<sp/>(actually<sp/>macros)<sp/>for<sp/>strings<sp/>only:</highlight></codeline>
<codeline lineno="277"><highlight class="comment"></highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>sh_new_strdup</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>sh_new_strdup(T*);</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Overwrites<sp/>the<sp/>existing<sp/>pointer<sp/>with<sp/>a<sp/>newly<sp/>allocated</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>hashmap<sp/>which<sp/>will<sp/>automatically<sp/>allocate<sp/>and<sp/>free</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>string<sp/>key<sp/>using<sp/>realloc/free</highlight></codeline>
<codeline lineno="283"><highlight class="comment"></highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>sh_new_arena</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>sh_new_arena(T*);</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Overwrites<sp/>the<sp/>existing<sp/>pointer<sp/>with<sp/>a<sp/>newly<sp/>allocated</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>hashmap<sp/>which<sp/>will<sp/>automatically<sp/>allocate<sp/>each<sp/>string</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>to<sp/>a<sp/>string<sp/>arena.<sp/>Every<sp/>string<sp/>key<sp/>ever<sp/>used<sp/>by<sp/>this</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash<sp/>table<sp/>remains<sp/>in<sp/>the<sp/>arena<sp/>until<sp/>the<sp/>arena<sp/>is<sp/>freed.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Additionally,<sp/>any<sp/>key<sp/>which<sp/>is<sp/>deleted<sp/>and<sp/>reinserted<sp/>will</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>allocated<sp/>multiple<sp/>times<sp/>in<sp/>the<sp/>string<sp/>arena.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"></highlight></codeline>
<codeline lineno="293"><highlight class="comment">NOTES</highlight></codeline>
<codeline lineno="294"><highlight class="comment"></highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/>*<sp/>These<sp/>data<sp/>structures<sp/>are<sp/>realloc&apos;d<sp/>when<sp/>they<sp/>grow,<sp/>and<sp/>the<sp/>macro</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;functions&quot;<sp/>write<sp/>to<sp/>the<sp/>provided<sp/>pointer.<sp/>This<sp/>means:<sp/>(a)<sp/>the<sp/>pointer</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/>must<sp/>be<sp/>an<sp/>lvalue,<sp/>and<sp/>(b)<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>data<sp/>structure<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/>stable,<sp/>and<sp/>you<sp/>must<sp/>maintain<sp/>it<sp/>the<sp/>same<sp/>as<sp/>you<sp/>would<sp/>a<sp/>realloc&apos;d</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/>pointer.<sp/>For<sp/>example,<sp/>if<sp/>you<sp/>pass<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>dynamic<sp/>array<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/>function<sp/>which<sp/>updates<sp/>it,<sp/>the<sp/>function<sp/>must<sp/>return<sp/>back<sp/>the<sp/>new</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>caller.<sp/>This<sp/>is<sp/>the<sp/>price<sp/>of<sp/>trying<sp/>to<sp/>do<sp/>this<sp/>in<sp/>C.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"></highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/>*<sp/>The<sp/>following<sp/>are<sp/>the<sp/>only<sp/>functions<sp/>that<sp/>are<sp/>thread-safe<sp/>on<sp/>a<sp/>single<sp/>data</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>structure,<sp/>i.e.<sp/>can<sp/>be<sp/>run<sp/>in<sp/>multiple<sp/>threads<sp/>simultaneously<sp/>on<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/>data<sp/>structure</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmlen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shlen</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmlenu<sp/><sp/><sp/><sp/><sp/><sp/><sp/>shlenu</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmget_ts<sp/><sp/><sp/><sp/><sp/>shget_ts</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmgeti_ts<sp/><sp/><sp/><sp/>shgeti_ts</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmgets_ts<sp/><sp/><sp/><sp/>shgets_ts</highlight></codeline>
<codeline lineno="311"><highlight class="comment"></highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/>*<sp/>You<sp/>iterate<sp/>over<sp/>the<sp/>contents<sp/>of<sp/>a<sp/>dynamic<sp/>array<sp/>and<sp/>a<sp/>hashmap<sp/>in<sp/>exactly</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>same<sp/>way,<sp/>using<sp/>arrlen/hmlen/shlen:</highlight></codeline>
<codeline lineno="314"><highlight class="comment"></highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i=0;<sp/>i<sp/>&lt;<sp/>arrlen(foo);<sp/>++i)</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>foo[i]<sp/>...</highlight></codeline>
<codeline lineno="317"><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/>*<sp/>All<sp/>operations<sp/>except<sp/>arrins/arrdel<sp/>are<sp/>O(1)<sp/>amortized,<sp/>but<sp/>individual</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/>operations<sp/>can<sp/>be<sp/>slow,<sp/>so<sp/>these<sp/>data<sp/>structures<sp/>may<sp/>not<sp/>be<sp/>suitable</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>real<sp/>time<sp/>use.<sp/>Dynamic<sp/>arrays<sp/>double<sp/>in<sp/>capacity<sp/>as<sp/>needed,<sp/>so</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/>elements<sp/>are<sp/>copied<sp/>an<sp/>average<sp/>of<sp/>once.<sp/>Hash<sp/>tables<sp/>double/halve</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/>their<sp/>size<sp/>as<sp/>needed,<sp/>with<sp/>appropriate<sp/>hysteresis<sp/>to<sp/>maintain<sp/>O(1)</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/>performance.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"></highlight></codeline>
<codeline lineno="325"><highlight class="comment">NOTES<sp/>-<sp/>DYNAMIC<sp/>ARRAY</highlight></codeline>
<codeline lineno="326"><highlight class="comment"></highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/>*<sp/>If<sp/>you<sp/>know<sp/>how<sp/>long<sp/>a<sp/>dynamic<sp/>array<sp/>is<sp/>going<sp/>to<sp/>be<sp/>in<sp/>advance,<sp/>you<sp/>can<sp/>avoid</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/>extra<sp/>memory<sp/>allocations<sp/>by<sp/>using<sp/>arrsetlen<sp/>to<sp/>allocate<sp/>it<sp/>to<sp/>that<sp/>length<sp/>in</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/>advance<sp/>and<sp/>use<sp/>foo[n]<sp/>while<sp/>filling<sp/>it<sp/>out,<sp/>or<sp/>arrsetcap<sp/>to<sp/>allocate<sp/>the<sp/>memory</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>that<sp/>length<sp/>and<sp/>use<sp/>arrput/arrpush<sp/>as<sp/>normal.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"></highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/>*<sp/>Unlike<sp/>some<sp/>other<sp/>versions<sp/>of<sp/>the<sp/>dynamic<sp/>array,<sp/>this<sp/>version<sp/>should</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/>be<sp/>safe<sp/>to<sp/>use<sp/>with<sp/>strict-aliasing<sp/>optimizations.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"></highlight></codeline>
<codeline lineno="335"><highlight class="comment">NOTES<sp/>-<sp/>HASH<sp/>MAP</highlight></codeline>
<codeline lineno="336"><highlight class="comment"></highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/>*<sp/>For<sp/>compilers<sp/>other<sp/>than<sp/>GCC<sp/>and<sp/>clang<sp/>(e.g.<sp/>Visual<sp/>Studio),<sp/>for<sp/>hmput/hmget/hmdel</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>variants,<sp/>the<sp/>key<sp/>must<sp/>be<sp/>an<sp/>lvalue<sp/>(so<sp/>the<sp/>macro<sp/>can<sp/>take<sp/>the<sp/>address<sp/>of<sp/>it).</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/>Extensions<sp/>are<sp/>used<sp/>that<sp/>eliminate<sp/>this<sp/>requirement<sp/>if<sp/>you&apos;re<sp/>using<sp/>C99<sp/>and<sp/>later</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>GCC<sp/>or<sp/>clang,<sp/>or<sp/>if<sp/>you&apos;re<sp/>using<sp/>C++<sp/>in<sp/>GCC.<sp/>But<sp/>note<sp/>that<sp/>this<sp/>can<sp/>make<sp/>your</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/>code<sp/>less<sp/>portable.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/>*<sp/>To<sp/>test<sp/>for<sp/>presence<sp/>of<sp/>a<sp/>key<sp/>in<sp/>a<sp/>hashmap,<sp/>just<sp/>do<sp/>&apos;hmgeti(foo,key)<sp/>&gt;=<sp/>0&apos;.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"></highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/>*<sp/>The<sp/>iteration<sp/>order<sp/>of<sp/>your<sp/>data<sp/>in<sp/>the<sp/>hashmap<sp/>is<sp/>determined<sp/>solely<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/>order<sp/>of<sp/>insertions<sp/>and<sp/>deletions.<sp/>In<sp/>particular,<sp/>if<sp/>you<sp/>never<sp/>delete,<sp/>new</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/>keys<sp/>are<sp/>always<sp/>added<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>array.<sp/>This<sp/>will<sp/>be<sp/>consistent</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/>across<sp/>all<sp/>platforms<sp/>and<sp/>versions<sp/>of<sp/>the<sp/>library.<sp/>However,<sp/>you<sp/>should<sp/>not</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/>attempt<sp/>to<sp/>serialize<sp/>the<sp/>internal<sp/>hash<sp/>table,<sp/>as<sp/>the<sp/>hash<sp/>is<sp/>not<sp/>consistent</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/>between<sp/>different<sp/>platforms,<sp/>and<sp/>may<sp/>change<sp/>with<sp/>future<sp/>versions<sp/>of<sp/>the<sp/>library.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"></highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/>*<sp/>Use<sp/>sh_new_arena()<sp/>for<sp/>string<sp/>hashmaps<sp/>that<sp/>you<sp/>never<sp/>delete<sp/>from.<sp/>Initialize</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>NULL<sp/>if<sp/>you&apos;re<sp/>managing<sp/>the<sp/>memory<sp/>for<sp/>your<sp/>strings,<sp/>or<sp/>your<sp/>strings<sp/>are</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/>never<sp/>freed<sp/>(at<sp/>least<sp/>until<sp/>the<sp/>hashmap<sp/>is<sp/>freed).<sp/>Otherwise,<sp/>use<sp/>sh_new_strdup().</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/>@TODO:<sp/>make<sp/>an<sp/>arena<sp/>variant<sp/>that<sp/>garbage<sp/>collects<sp/>the<sp/>strings<sp/>with<sp/>a<sp/>trivial</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/>copy<sp/>collector<sp/>into<sp/>a<sp/>new<sp/>arena<sp/>whenever<sp/>the<sp/>table<sp/>shrinks<sp/>/<sp/>rebuilds.<sp/>Since</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/>current<sp/>arena<sp/>recommendation<sp/>is<sp/>to<sp/>only<sp/>use<sp/>arena<sp/>if<sp/>it<sp/>never<sp/>deletes,<sp/>then</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/>this<sp/>can<sp/>just<sp/>replace<sp/>current<sp/>arena<sp/>implementation.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"></highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/>*<sp/>If<sp/>adversarial<sp/>input<sp/>is<sp/>a<sp/>serious<sp/>concern<sp/>and<sp/>you&apos;re<sp/>on<sp/>a<sp/>64-bit<sp/>platform,</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/>enable<sp/>STBDS_SIPHASH_2_4<sp/>(see<sp/>the<sp/>&apos;Compile-time<sp/>options&apos;<sp/>section),<sp/>and<sp/>pass</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>strong<sp/>random<sp/>number<sp/>to<sp/>stbds_rand_seed.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"></highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/>*<sp/>The<sp/>default<sp/>value<sp/>for<sp/>the<sp/>hash<sp/>table<sp/>is<sp/>stored<sp/>in<sp/>foo[-1],<sp/>so<sp/>if<sp/>you</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>code<sp/>like<sp/>&apos;hmget(T,k)-&gt;value<sp/>=<sp/>5&apos;<sp/>you<sp/>can<sp/>accidentally<sp/>overwrite</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>value<sp/>stored<sp/>by<sp/>hmdefault<sp/>if<sp/>&apos;k&apos;<sp/>is<sp/>not<sp/>present.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"></highlight></codeline>
<codeline lineno="368"><highlight class="comment">CREDITS</highlight></codeline>
<codeline lineno="369"><highlight class="comment"></highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/>Sean<sp/>Barrett<sp/>--<sp/>library,<sp/>idea<sp/>for<sp/>dynamic<sp/>array<sp/>API/implementation</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/>Per<sp/>Vognsen<sp/><sp/>--<sp/>idea<sp/>for<sp/>hash<sp/>table<sp/>API/implementation</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/>Rafael<sp/>Sachetto<sp/>--<sp/>arrpop()</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/>github:HeroicKatora<sp/>--<sp/>arraddn()<sp/>reworking</highlight></codeline>
<codeline lineno="374"><highlight class="comment"></highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/>Bugfixes:</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/>Andy<sp/>Durdin</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/>Shane<sp/>Liesegang</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/>Vinh<sp/>Truong</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/>Andreas<sp/>Molzer</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/>github:hashitaku</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/>github:srdjanstipic</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/>Macoy<sp/>Madson</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/>Andreas<sp/>Vennstrom</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/>Tobias<sp/>Mansfield-Williams</highlight></codeline>
<codeline lineno="385"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBDS_UNIT_TESTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CRT_SECURE_NO_WARNINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_STB_DS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_STB_DS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBDS_NO_SHORT_NAMES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrlen<sp/><sp/><sp/><sp/><sp/><sp/>stbds_arrlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrlenu<sp/><sp/><sp/><sp/><sp/>stbds_arrlenu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrput<sp/><sp/><sp/><sp/><sp/><sp/>stbds_arrput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrpush<sp/><sp/><sp/><sp/><sp/>stbds_arrput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrpop<sp/><sp/><sp/><sp/><sp/><sp/>stbds_arrpop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrfree<sp/><sp/><sp/><sp/><sp/>stbds_arrfree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arraddn<sp/><sp/><sp/><sp/><sp/>stbds_arraddn<sp/></highlight><highlight class="comment">//<sp/>deprecated,<sp/>use<sp/>one<sp/>of<sp/>the<sp/>following<sp/>instead:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arraddnptr<sp/><sp/>stbds_arraddnptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arraddnindex<sp/>stbds_arraddnindex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrsetlen<sp/><sp/><sp/>stbds_arrsetlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrlast<sp/><sp/><sp/><sp/><sp/>stbds_arrlast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrins<sp/><sp/><sp/><sp/><sp/><sp/>stbds_arrins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrinsn<sp/><sp/><sp/><sp/><sp/>stbds_arrinsn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrdel<sp/><sp/><sp/><sp/><sp/><sp/>stbds_arrdel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrdeln<sp/><sp/><sp/><sp/><sp/>stbds_arrdeln</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrdelswap<sp/><sp/>stbds_arrdelswap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrcap<sp/><sp/><sp/><sp/><sp/><sp/>stbds_arrcap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arrsetcap<sp/><sp/><sp/>stbds_arrsetcap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmput<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmputs<sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmget<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmget_ts<sp/><sp/><sp/><sp/>stbds_hmget_ts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmgets<sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmgetp<sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmgetp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmgetp_ts<sp/><sp/><sp/>stbds_hmgetp_ts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmgetp_null<sp/>stbds_hmgetp_null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmgeti<sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmgeti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmgeti_ts<sp/><sp/><sp/>stbds_hmgeti_ts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmdel<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmdel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmlen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmlenu<sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmlenu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmfree<sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmfree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmdefault<sp/><sp/><sp/>stbds_hmdefault</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>hmdefaults<sp/><sp/>stbds_hmdefaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shput<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_shput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shputi<sp/><sp/><sp/><sp/><sp/><sp/>stbds_shputi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shputs<sp/><sp/><sp/><sp/><sp/><sp/>stbds_shputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shget<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_shget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shgeti<sp/><sp/><sp/><sp/><sp/><sp/>stbds_shgeti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shgets<sp/><sp/><sp/><sp/><sp/><sp/>stbds_shgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shgetp<sp/><sp/><sp/><sp/><sp/><sp/>stbds_shgetp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shgetp_null<sp/>stbds_shgetp_null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shdel<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_shdel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shlen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_shlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shlenu<sp/><sp/><sp/><sp/><sp/><sp/>stbds_shlenu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shfree<sp/><sp/><sp/><sp/><sp/><sp/>stbds_shfree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shdefault<sp/><sp/><sp/>stbds_shdefault</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shdefaults<sp/><sp/>stbds_shdefaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sh_new_arena<sp/><sp/>stbds_sh_new_arena</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sh_new_strdup<sp/>stbds_sh_new_strdup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stralloc<sp/><sp/><sp/><sp/>stbds_stralloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>strreset<sp/><sp/><sp/><sp/>stbds_strreset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBDS_REALLOC)<sp/>&amp;&amp;<sp/>!defined(STBDS_FREE)<sp/>||<sp/>!defined(STBDS_REALLOC)<sp/>&amp;&amp;<sp/>defined(STBDS_FREE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;You<sp/>must<sp/>define<sp/>both<sp/>STBDS_REALLOC<sp/>and<sp/>STBDS_FREE,<sp/>or<sp/>neither.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(STBDS_REALLOC)<sp/>&amp;&amp;<sp/>!defined(STBDS_FREE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_REALLOC(c,p,s)<sp/>realloc(p,s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_FREE(c,p)<sp/><sp/><sp/><sp/><sp/><sp/>free(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_NOTUSED(v)<sp/><sp/>(void)(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_NOTUSED(v)<sp/><sp/>(void)sizeof(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>security<sp/>against<sp/>attackers,<sp/>seed<sp/>the<sp/>library<sp/>with<sp/>a<sp/>random<sp/>number,<sp/>at<sp/>least<sp/>time()<sp/>but<sp/>stronger<sp/>is<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbds_rand_seed(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>hash<sp/>functions<sp/>used<sp/>internally<sp/>if<sp/>you<sp/>want<sp/>to<sp/>test<sp/>them<sp/>or<sp/>use<sp/>them<sp/>for<sp/>other<sp/>purposes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_hash_bytes(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_hash_string(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>simple<sp/>string<sp/>arena<sp/>allocator,<sp/>initialize<sp/>with<sp/>e.g.<sp/>&apos;stbds_string_arena<sp/>my_arena={0}&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref><sp/><ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>stbds_stralloc(<ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/>stbds_strreset(<ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref><sp/>*a);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/>have<sp/>to<sp/>#define<sp/>STBDS_UNIT_TESTS<sp/>to<sp/>call<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbds_unit_tests(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Everything<sp/>below<sp/>here<sp/>is<sp/>implementation<sp/>details</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_arrgrowf(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>addlen,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>min_cap);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/>stbds_arrfreef(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/>stbds_hmfree_func(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_hmget_key(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_hmget_key_ts(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/>ptrdiff_t<sp/>*temp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_hmput_default(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_hmput_key(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_hmdel_key(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyoffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_shmode_func(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>||<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_HAS_TYPEOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>STBDS_HAS_LITERAL_ARRAY<sp/><sp/>//<sp/>this<sp/>is<sp/>currently<sp/>broken<sp/>for<sp/>clang</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_HAS_LITERAL_ARRAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>macro<sp/>takes<sp/>the<sp/>address<sp/>of<sp/>the<sp/>argument,<sp/>but<sp/>on<sp/>gcc/clang<sp/>can<sp/>accept<sp/>rvalues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBDS_HAS_LITERAL_ARRAY)<sp/>&amp;&amp;<sp/>defined(STBDS_HAS_TYPEOF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>STBDS_ADDRESSOF(typevar,<sp/>value)<sp/><sp/><sp/><sp/><sp/>((__typeof__(typevar)[1]){value})<sp/></highlight><highlight class="comment">//<sp/>literal<sp/>array<sp/>decays<sp/>to<sp/>pointer<sp/>to<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>STBDS_ADDRESSOF(typevar,<sp/>value)<sp/><sp/><sp/><sp/><sp/>((typeof(typevar)[1]){value})<sp/></highlight><highlight class="comment">//<sp/>literal<sp/>array<sp/>decays<sp/>to<sp/>pointer<sp/>to<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_ADDRESSOF(typevar,<sp/>value)<sp/><sp/><sp/><sp/><sp/>&amp;(value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_OFFSETOF(var,field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((char<sp/>*)<sp/>&amp;(var)-&gt;field<sp/>-<sp/>(char<sp/>*)<sp/>(var))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_header(t)<sp/><sp/>((stbds_array_header<sp/>*)<sp/>(t)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_temp(t)<sp/><sp/><sp/><sp/>stbds_header(t)-&gt;temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_temp_key(t)<sp/>(*(char<sp/>**)<sp/>stbds_header(t)-&gt;hash_table)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrsetcap(a,n)<sp/><sp/><sp/>(stbds_arrgrow(a,0,n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrsetlen(a,n)<sp/><sp/><sp/>((stbds_arrcap(a)<sp/>&lt;<sp/>(size_t)<sp/>(n)<sp/>?<sp/>stbds_arrsetcap((a),(size_t)(n)),0<sp/>:<sp/>0),<sp/>(a)<sp/>?<sp/>stbds_header(a)-&gt;length<sp/>=<sp/>(size_t)<sp/>(n)<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrcap(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((a)<sp/>?<sp/>stbds_header(a)-&gt;capacity<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrlen(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((a)<sp/>?<sp/>(ptrdiff_t)<sp/>stbds_header(a)-&gt;length<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrlenu(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((a)<sp/>?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_header(a)-&gt;length<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrput(a,v)<sp/><sp/><sp/><sp/><sp/><sp/>(stbds_arrmaybegrow(a,1),<sp/>(a)[stbds_header(a)-&gt;length++]<sp/>=<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrpush<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_arrput<sp/><sp/></highlight><highlight class="comment">//<sp/>synonym</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrpop(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stbds_header(a)-&gt;length--,<sp/>(a)[stbds_header(a)-&gt;length])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arraddn(a,n)<sp/><sp/><sp/><sp/><sp/>((void)(stbds_arraddnindex(a,<sp/>n)))<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deprecated,<sp/>use<sp/>one<sp/>of<sp/>the<sp/>following<sp/>instead:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arraddnptr(a,n)<sp/><sp/>(stbds_arrmaybegrow(a,n),<sp/>(n)<sp/>?<sp/>(stbds_header(a)-&gt;length<sp/>+=<sp/>(n),<sp/>&amp;(a)[stbds_header(a)-&gt;length-(n)])<sp/>:<sp/>(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arraddnindex(a,n)(stbds_arrmaybegrow(a,n),<sp/>(n)<sp/>?<sp/>(stbds_header(a)-&gt;length<sp/>+=<sp/>(n),<sp/>stbds_header(a)-&gt;length-(n))<sp/>:<sp/>stbds_arrlen(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arraddnoff<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_arraddnindex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrlast(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((a)[stbds_header(a)-&gt;length-1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrfree(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void)<sp/>((a)<sp/>?<sp/>STBDS_FREE(NULL,stbds_header(a))<sp/>:<sp/>(void)0),<sp/>(a)=NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrdel(a,i)<sp/><sp/><sp/><sp/><sp/><sp/>stbds_arrdeln(a,i,1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrdeln(a,i,n)<sp/><sp/><sp/>(memmove(&amp;(a)[i],<sp/>&amp;(a)[(i)+(n)],<sp/>sizeof<sp/>*(a)<sp/>*<sp/>(stbds_header(a)-&gt;length-(n)-(i))),<sp/>stbds_header(a)-&gt;length<sp/>-=<sp/>(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrdelswap(a,i)<sp/><sp/>((a)[i]<sp/>=<sp/>stbds_arrlast(a),<sp/>stbds_header(a)-&gt;length<sp/>-=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrinsn(a,i,n)<sp/><sp/><sp/>(stbds_arraddn((a),(n)),<sp/>memmove(&amp;(a)[(i)+(n)],<sp/>&amp;(a)[i],<sp/>sizeof<sp/>*(a)<sp/>*<sp/>(stbds_header(a)-&gt;length-(n)-(i))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrins(a,i,v)<sp/><sp/><sp/><sp/>(stbds_arrinsn((a),(i),1),<sp/>(a)[i]=(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrmaybegrow(a,n)<sp/><sp/>((!(a)<sp/>||<sp/>stbds_header(a)-&gt;length<sp/>+<sp/>(n)<sp/>&gt;<sp/>stbds_header(a)-&gt;capacity)<sp/>\</highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(stbds_arrgrow(a,n,0),0)<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrgrow(a,b,c)<sp/><sp/><sp/>((a)<sp/>=<sp/>stbds_arrgrowf_wrapper((a),<sp/>sizeof<sp/>*(a),<sp/>(b),<sp/>(c)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmput(t,<sp/>k,<sp/>v)<sp/>\</highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmput_key_wrapper((t),<sp/>sizeof<sp/>*(t),<sp/>(void*)<sp/>STBDS_ADDRESSOF((t)-&gt;key,<sp/>(k)),<sp/>sizeof<sp/>(t)-&gt;key,<sp/>0),<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="565"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(t)[stbds_temp((t)-1)].key<sp/>=<sp/>(k),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="566"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(t)[stbds_temp((t)-1)].value<sp/>=<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmputs(t,<sp/>s)<sp/>\</highlight></codeline>
<codeline lineno="569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmput_key_wrapper((t),<sp/>sizeof<sp/>*(t),<sp/>&amp;(s).key,<sp/>sizeof<sp/>(s).key,<sp/>STBDS_HM_BINARY),<sp/>\</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(t)[stbds_temp((t)-1)]<sp/>=<sp/>(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmgeti(t,k)<sp/>\</highlight></codeline>
<codeline lineno="573"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmget_key_wrapper((t),<sp/>sizeof<sp/>*(t),<sp/>(void*)<sp/>STBDS_ADDRESSOF((t)-&gt;key,<sp/>(k)),<sp/>sizeof<sp/>(t)-&gt;key,<sp/>STBDS_HM_BINARY),<sp/>\</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>stbds_temp((t)-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmgeti_ts(t,k,temp)<sp/>\</highlight></codeline>
<codeline lineno="577"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmget_key_ts_wrapper((t),<sp/>sizeof<sp/>*(t),<sp/>(void*)<sp/>STBDS_ADDRESSOF((t)-&gt;key,<sp/>(k)),<sp/>sizeof<sp/>(t)-&gt;key,<sp/>&amp;(temp),<sp/>STBDS_HM_BINARY),<sp/>\</highlight></codeline>
<codeline lineno="578"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(temp))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmgetp(t,<sp/>k)<sp/>\</highlight></codeline>
<codeline lineno="581"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((void)<sp/>stbds_hmgeti(t,k),<sp/>&amp;(t)[stbds_temp((t)-1)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmgetp_ts(t,<sp/>k,<sp/>temp)<sp/>\</highlight></codeline>
<codeline lineno="584"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((void)<sp/>stbds_hmgeti_ts(t,k,temp),<sp/>&amp;(t)[temp])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmdel(t,k)<sp/>\</highlight></codeline>
<codeline lineno="587"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((t)<sp/>=<sp/>stbds_hmdel_key_wrapper((t),sizeof<sp/>*(t),<sp/>(void*)<sp/>STBDS_ADDRESSOF((t)-&gt;key,<sp/>(k)),<sp/>sizeof<sp/>(t)-&gt;key,<sp/>STBDS_OFFSETOF((t),key),<sp/>STBDS_HM_BINARY)),(t)?stbds_temp((t)-1):0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmdefault(t,<sp/>v)<sp/>\</highlight></codeline>
<codeline lineno="590"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmput_default_wrapper((t),<sp/>sizeof<sp/>*(t)),<sp/>(t)[-1].value<sp/>=<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmdefaults(t,<sp/>s)<sp/>\</highlight></codeline>
<codeline lineno="593"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmput_default_wrapper((t),<sp/>sizeof<sp/>*(t)),<sp/>(t)[-1]<sp/>=<sp/>(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmfree(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="596"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((void)<sp/>((p)<sp/>!=<sp/>NULL<sp/>?<sp/>stbds_hmfree_func((p)-1,sizeof*(p)),0<sp/>:<sp/>0),(p)=NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmgets(t,<sp/>k)<sp/><sp/><sp/><sp/>(*stbds_hmgetp(t,k))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmget(t,<sp/>k)<sp/><sp/><sp/><sp/><sp/>(stbds_hmgetp(t,k)-&gt;value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmget_ts(t,<sp/>k,<sp/>temp)<sp/><sp/>(stbds_hmgetp_ts(t,k,temp)-&gt;value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmlen(t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((t)<sp/>?<sp/>(ptrdiff_t)<sp/>stbds_header((t)-1)-&gt;length-1<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmlenu(t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((t)<sp/>?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_header((t)-1)-&gt;length-1<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmgetp_null(t,k)<sp/><sp/>(stbds_hmgeti(t,k)<sp/>==<sp/>-1<sp/>?<sp/>NULL<sp/>:<sp/>&amp;(t)[stbds_temp((t)-1)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shput(t,<sp/>k,<sp/>v)<sp/>\</highlight></codeline>
<codeline lineno="606"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmput_key_wrapper((t),<sp/>sizeof<sp/>*(t),<sp/>(void*)<sp/>(k),<sp/>sizeof<sp/>(t)-&gt;key,<sp/>STBDS_HM_STRING),<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="607"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(t)[stbds_temp((t)-1)].value<sp/>=<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shputi(t,<sp/>k,<sp/>v)<sp/>\</highlight></codeline>
<codeline lineno="610"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmput_key_wrapper((t),<sp/>sizeof<sp/>*(t),<sp/>(void*)<sp/>(k),<sp/>sizeof<sp/>(t)-&gt;key,<sp/>STBDS_HM_STRING),<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="611"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(t)[stbds_temp((t)-1)].value<sp/>=<sp/>(v),<sp/>stbds_temp((t)-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shputs(t,<sp/>s)<sp/>\</highlight></codeline>
<codeline lineno="614"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmput_key_wrapper((t),<sp/>sizeof<sp/>*(t),<sp/>(void*)<sp/>(s).key,<sp/>sizeof<sp/>(s).key,<sp/>STBDS_HM_STRING),<sp/>\</highlight></codeline>
<codeline lineno="615"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(t)[stbds_temp((t)-1)]<sp/>=<sp/>(s),<sp/>\</highlight></codeline>
<codeline lineno="616"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(t)[stbds_temp((t)-1)].key<sp/>=<sp/>stbds_temp_key((t)-1))<sp/></highlight><highlight class="comment">//<sp/>above<sp/>line<sp/>overwrites<sp/>whole<sp/>structure,<sp/>so<sp/>must<sp/>rewrite<sp/>key<sp/>here<sp/>if<sp/>it<sp/>was<sp/>allocated<sp/>internally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_pshput(t,<sp/>p)<sp/>\</highlight></codeline>
<codeline lineno="619"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmput_key_wrapper((t),<sp/>sizeof<sp/>*(t),<sp/>(void*)<sp/>(p)-&gt;key,<sp/>sizeof<sp/>(p)-&gt;key,<sp/>STBDS_HM_PTR_TO_STRING),<sp/>\</highlight></codeline>
<codeline lineno="620"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(t)[stbds_temp((t)-1)]<sp/>=<sp/>(p))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shgeti(t,k)<sp/>\</highlight></codeline>
<codeline lineno="623"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmget_key_wrapper((t),<sp/>sizeof<sp/>*(t),<sp/>(void*)<sp/>(k),<sp/>sizeof<sp/>(t)-&gt;key,<sp/>STBDS_HM_STRING),<sp/>\</highlight></codeline>
<codeline lineno="624"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>stbds_temp((t)-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_pshgeti(t,k)<sp/>\</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_hmget_key_wrapper((t),<sp/>sizeof<sp/>*(t),<sp/>(void*)<sp/>(k),<sp/>sizeof<sp/>(*(t))-&gt;key,<sp/>STBDS_HM_PTR_TO_STRING),<sp/>\</highlight></codeline>
<codeline lineno="628"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>stbds_temp((t)-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shgetp(t,<sp/>k)<sp/>\</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((void)<sp/>stbds_shgeti(t,k),<sp/>&amp;(t)[stbds_temp((t)-1)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_pshget(t,<sp/>k)<sp/>\</highlight></codeline>
<codeline lineno="634"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((void)<sp/>stbds_pshgeti(t,k),<sp/>(t)[stbds_temp((t)-1)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shdel(t,k)<sp/>\</highlight></codeline>
<codeline lineno="637"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((t)<sp/>=<sp/>stbds_hmdel_key_wrapper((t),sizeof<sp/>*(t),<sp/>(void*)<sp/>(k),<sp/>sizeof<sp/>(t)-&gt;key,<sp/>STBDS_OFFSETOF((t),key),<sp/>STBDS_HM_STRING)),(t)?stbds_temp((t)-1):0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_pshdel(t,k)<sp/>\</highlight></codeline>
<codeline lineno="639"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((t)<sp/>=<sp/>stbds_hmdel_key_wrapper((t),sizeof<sp/>*(t),<sp/>(void*)<sp/>(k),<sp/>sizeof<sp/>(*(t))-&gt;key,<sp/>STBDS_OFFSETOF(*(t),key),<sp/>STBDS_HM_PTR_TO_STRING)),(t)?stbds_temp((t)-1):0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_sh_new_arena(t)<sp/><sp/>\</highlight></codeline>
<codeline lineno="642"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_shmode_func_wrapper(t,<sp/>sizeof<sp/>*(t),<sp/>STBDS_SH_ARENA))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_sh_new_strdup(t)<sp/>\</highlight></codeline>
<codeline lineno="644"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((t)<sp/>=<sp/>stbds_shmode_func_wrapper(t,<sp/>sizeof<sp/>*(t),<sp/>STBDS_SH_STRDUP))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shdefault(t,<sp/>v)<sp/><sp/>stbds_hmdefault(t,v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shdefaults(t,<sp/>s)<sp/>stbds_hmdefaults(t,s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shfree<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmfree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shlenu<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmlenu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shgets(t,<sp/>k)<sp/>(*stbds_shgetp(t,k))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shget(t,<sp/>k)<sp/><sp/>(stbds_shgetp(t,k)-&gt;value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shgetp_null(t,k)<sp/><sp/>(stbds_shgeti(t,k)<sp/>==<sp/>-1<sp/>?<sp/>NULL<sp/>:<sp/>&amp;(t)[stbds_temp((t)-1)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shlen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657" refid="structstbds__array__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>capacity;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>hash_table;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>ptrdiff_t<sp/><sp/><sp/>temp;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}<sp/><ref refid="structstbds__array__header" kindref="compound">stbds_array_header</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="structstbds__string__block" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbds__string__block" kindref="compound">stbds_string_block</ref></highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbds__string__block" kindref="compound">stbds_string_block</ref><sp/>*next;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>storage[8];</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}<sp/><ref refid="structstbds__string__block" kindref="compound">stbds_string_block</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="structstbds__string__arena" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref></highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><ref refid="structstbds__string__block" kindref="compound">stbds_string_block</ref><sp/>*storage;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>remaining;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>block;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mode;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>isn&apos;t<sp/>used<sp/>by<sp/>the<sp/>string<sp/>arena<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal">};</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_HM_BINARY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_HM_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/>STBDS_SH_NONE,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/>STBDS_SH_DEFAULT,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/>STBDS_SH_STRDUP,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/>STBDS_SH_ARENA</highlight></codeline>
<codeline lineno="688"><highlight class="normal">};</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>C<sp/>we<sp/>use<sp/>implicit<sp/>assignment<sp/>from<sp/>these<sp/>void*-returning<sp/>functions<sp/>to<sp/>T*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>C++<sp/>these<sp/>templates<sp/>make<sp/>the<sp/>same<sp/>code<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>*<sp/>stbds_arrgrowf_wrapper(T<sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>addlen,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>min_cap)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)stbds_arrgrowf((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)a,<sp/>elemsize,<sp/>addlen,<sp/>min_cap);</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>*<sp/>stbds_hmget_key_wrapper(T<sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)stbds_hmget_key((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>mode);</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>*<sp/>stbds_hmget_key_ts_wrapper(T<sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/>ptrdiff_t<sp/>*temp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)stbds_hmget_key_ts((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>temp,<sp/>mode);</highlight></codeline>
<codeline lineno="701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>*<sp/>stbds_hmput_default_wrapper(T<sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)stbds_hmput_default((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)a,<sp/>elemsize);</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>*<sp/>stbds_hmput_key_wrapper(T<sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)stbds_hmput_key((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>mode);</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>*<sp/>stbds_hmdel_key_wrapper(T<sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyoffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode){</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)stbds_hmdel_key((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>keyoffset,<sp/>mode);</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>*<sp/>stbds_shmode_func_wrapper(T<sp/>*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T*)stbds_shmode_func(elemsize,<sp/>mode);</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_arrgrowf_wrapper<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_arrgrowf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmget_key_wrapper<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmget_key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmget_key_ts_wrapper<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmget_key_ts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmput_default_wrapper<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmput_default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmput_key_wrapper<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmput_key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hmdel_key_wrapper<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hmdel_key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_shmode_func_wrapper(t,e,m)<sp/><sp/>stbds_shmode_func(e,m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>INCLUDE_STB_DS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_DS_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBDS_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_ASSERT_WAS_UNDEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_ASSERT(x)<sp/><sp/><sp/>((void)<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBDS_STATISTICS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_STATS(x)<sp/><sp/><sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_array_grow;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_hash_grow;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_hash_shrink;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_hash_rebuild;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_hash_probes;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_hash_alloc;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_rehash_probes;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_rehash_items;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_STATS(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbds_arr<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>*prev_allocs[65536];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>num_prev;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbds_arrgrowf(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>addlen,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>min_cap)</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><ref refid="structstbds__array__header" kindref="compound">stbds_array_header</ref><sp/>temp={0};<sp/></highlight><highlight class="comment">//<sp/>force<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>min_len<sp/>=<sp/>stbds_arrlen(a)<sp/>+<sp/>addlen;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>(void)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(temp);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>minimum<sp/>capacity<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_len<sp/>&gt;<sp/>min_cap)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>min_cap<sp/>=<sp/>min_len;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_cap<sp/>&lt;=<sp/>stbds_arrcap(a))</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>increase<sp/>needed<sp/>capacity<sp/>to<sp/>guarantee<sp/>O(1)<sp/>amortized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_cap<sp/>&lt;<sp/>2<sp/>*<sp/>stbds_arrcap(a))</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>min_cap<sp/>=<sp/>2<sp/>*<sp/>stbds_arrcap(a);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_cap<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>min_cap<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(num_prev<sp/>&lt;<sp/>65536)<sp/>if<sp/>(a)<sp/>prev_allocs[num_prev++]<sp/>=<sp/>(int<sp/>*)<sp/>((char<sp/>*)<sp/>a+1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(num_prev<sp/>==<sp/>2201)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>num_prev<sp/>=<sp/>num_prev;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>STBDS_REALLOC(NULL,<sp/>(a)<sp/>?<sp/>stbds_header(a)<sp/>:<sp/>0,<sp/>elemsize<sp/>*<sp/>min_cap<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstbds__array__header" kindref="compound">stbds_array_header</ref>));</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(num_prev<sp/>&lt;<sp/>65536)<sp/>prev_allocs[num_prev++]<sp/>=<sp/>(int<sp/>*)<sp/>(char<sp/>*)<sp/>b;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>b<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstbds__array__header" kindref="compound">stbds_array_header</ref>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_header(b)-&gt;length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_header(b)-&gt;hash_table<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_header(b)-&gt;temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_STATS(++stbds_array_grow);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>stbds_header(b)-&gt;capacity<sp/>=<sp/>min_cap;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbds_arrfreef(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a)</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>STBDS_FREE(NULL,<sp/>stbds_header(a));</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbds_hm<sp/>hash<sp/>table<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBDS_INTERNAL_SMALL_BUCKET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_BUCKET_LENGTH<sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_BUCKET_LENGTH<sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_BUCKET_SHIFT<sp/><sp/><sp/><sp/><sp/><sp/>(STBDS_BUCKET_LENGTH<sp/>==<sp/>8<sp/>?<sp/>3<sp/>:<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_BUCKET_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(STBDS_BUCKET_LENGTH-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_CACHE_LINE_SIZE<sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_ALIGN_FWD(n,a)<sp/><sp/><sp/>(((n)<sp/>+<sp/>(a)<sp/>-<sp/>1)<sp/>&amp;<sp/>~((a)-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>[STBDS_BUCKET_LENGTH];</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/>ptrdiff_t<sp/>index[STBDS_BUCKET_LENGTH];</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}<sp/>stbds_hash_bucket;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>32-bit,<sp/>this<sp/>is<sp/>one<sp/>64-byte<sp/>cache<sp/>line;<sp/>in<sp/>64-bit,<sp/>each<sp/>array<sp/>is<sp/>one<sp/>64-byte<sp/>cache<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>temp_key;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>MUST<sp/>be<sp/>the<sp/>first<sp/>field<sp/>of<sp/>the<sp/>hash<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slot_count;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>used_count;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>used_count_threshold;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>used_count_shrink_threshold;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tombstone_count;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tombstone_count_threshold;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>seed;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slot_count_log2;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref><sp/>string;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>stbds_hash_bucket<sp/>*storage;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>a<sp/>separate<sp/>allocation,<sp/>just<sp/>64-byte<sp/>aligned<sp/>storage<sp/>after<sp/>this<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal">}<sp/>stbds_hash_index;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_INDEX_EMPTY<sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_INDEX_DELETED<sp/><sp/>-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_INDEX_IN_USE(x)<sp/><sp/>((x)<sp/>&gt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_HASH_EMPTY<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_HASH_DELETED<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_hash_seed=0x31415926;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbds_rand_seed(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>seed)</highlight></codeline>
<codeline lineno="852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>stbds_hash_seed<sp/>=<sp/>seed;</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_load_32_or_64(var,<sp/>temp,<sp/>v32,<sp/>v64_hi,<sp/>v64_lo)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="857"><highlight class="preprocessor"><sp/><sp/>temp<sp/>=<sp/>v64_lo<sp/>^<sp/>v32,<sp/>temp<sp/>&lt;&lt;=<sp/>16,<sp/>temp<sp/>&lt;&lt;=<sp/>16,<sp/>temp<sp/>&gt;&gt;=<sp/>16,<sp/>temp<sp/>&gt;&gt;=<sp/>16,<sp/></highlight><highlight class="comment">/*<sp/>discard<sp/>if<sp/>32-bit<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="858"><highlight class="preprocessor"><sp/><sp/>var<sp/>=<sp/>v64_hi,<sp/>var<sp/>&lt;&lt;=<sp/>16,<sp/>var<sp/>&lt;&lt;=<sp/>16,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>discard<sp/>if<sp/>32-bit<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="859"><highlight class="preprocessor"><sp/><sp/>var<sp/>^=<sp/>temp<sp/>^<sp/>v32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_SIZE_T_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof<sp/>(size_t))<sp/>*<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_probe_position(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slot_count,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slot_log2)</highlight></codeline>
<codeline lineno="864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>STBDS_NOTUSED(slot_log2);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/>hash<sp/>&amp;<sp/>(slot_count-1);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>STBDS_INTERNAL_BUCKET_START</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>pos<sp/>&amp;=<sp/>~STBDS_BUCKET_MASK;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_log2(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slot_count)</highlight></codeline>
<codeline lineno="875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n=0;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(slot_count<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>slot_count<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbds_hash_index<sp/>*stbds_make_hash_index(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slot_count,<sp/>stbds_hash_index<sp/>*ot)</highlight></codeline>
<codeline lineno="885"><highlight class="normal">{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>stbds_hash_index<sp/>*t;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/>(stbds_hash_index<sp/>*)<sp/>STBDS_REALLOC(NULL,0,(slot_count<sp/>&gt;&gt;<sp/>STBDS_BUCKET_SHIFT)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbds_hash_bucket)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbds_hash_index)<sp/>+<sp/>STBDS_CACHE_LINE_SIZE-1);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>t-&gt;storage<sp/>=<sp/>(stbds_hash_bucket<sp/>*)<sp/>STBDS_ALIGN_FWD((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>(t+1),<sp/>STBDS_CACHE_LINE_SIZE);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>t-&gt;slot_count<sp/>=<sp/>slot_count;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>t-&gt;slot_count_log2<sp/>=<sp/>stbds_log2(slot_count);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>t-&gt;tombstone_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>t-&gt;used_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>0<sp/></highlight><highlight class="comment">//<sp/>A1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>t-&gt;used_count_threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>slot_count*12/16;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>12/16th<sp/>of<sp/>table<sp/>is<sp/>occupied,<sp/>grow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>t-&gt;tombstone_count_threshold<sp/><sp/><sp/>=<sp/>slot_count*<sp/>2/16;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>tombstones<sp/>are<sp/>2/16th<sp/>of<sp/>table,<sp/>rebuild</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>t-&gt;used_count_shrink_threshold<sp/>=<sp/>slot_count*<sp/>4/16;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>table<sp/>is<sp/>only<sp/>4/16th<sp/>full,<sp/>shrink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>1<sp/></highlight><highlight class="comment">//<sp/>A2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//t-&gt;used_count_threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>slot_count*12/16;<sp/>//<sp/>if<sp/>12/16th<sp/>of<sp/>table<sp/>is<sp/>occupied,<sp/>grow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//t-&gt;tombstone_count_threshold<sp/><sp/><sp/>=<sp/>slot_count*<sp/>3/16;<sp/>//<sp/>if<sp/>tombstones<sp/>are<sp/>3/16th<sp/>of<sp/>table,<sp/>rebuild</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//t-&gt;used_count_shrink_threshold<sp/>=<sp/>slot_count*<sp/>4/16;<sp/>//<sp/>if<sp/>table<sp/>is<sp/>only<sp/>4/16th<sp/>full,<sp/>shrink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>without<sp/>overflowing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>t-&gt;used_count_threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>slot_count<sp/>-<sp/>(slot_count&gt;&gt;2);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>t-&gt;tombstone_count_threshold<sp/><sp/><sp/>=<sp/>(slot_count&gt;&gt;3)<sp/>+<sp/>(slot_count&gt;&gt;4);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>t-&gt;used_count_shrink_threshold<sp/>=<sp/>slot_count<sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>0<sp/></highlight><highlight class="comment">//<sp/>B1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>t-&gt;used_count_threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>slot_count*13/16;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>13/16th<sp/>of<sp/>table<sp/>is<sp/>occupied,<sp/>grow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>t-&gt;tombstone_count_threshold<sp/><sp/><sp/>=<sp/>slot_count*<sp/>2/16;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>tombstones<sp/>are<sp/>2/16th<sp/>of<sp/>table,<sp/>rebuild</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>t-&gt;used_count_shrink_threshold<sp/>=<sp/>slot_count*<sp/>5/16;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>table<sp/>is<sp/>only<sp/>5/16th<sp/>full,<sp/>shrink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else<sp/></highlight><highlight class="comment">//<sp/>C1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>t-&gt;used_count_threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>slot_count*14/16;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>14/16th<sp/>of<sp/>table<sp/>is<sp/>occupied,<sp/>grow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>t-&gt;tombstone_count_threshold<sp/><sp/><sp/>=<sp/>slot_count*<sp/>2/16;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>tombstones<sp/>are<sp/>2/16th<sp/>of<sp/>table,<sp/>rebuild</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>t-&gt;used_count_shrink_threshold<sp/>=<sp/>slot_count*<sp/>6/16;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>table<sp/>is<sp/>only<sp/>6/16th<sp/>full,<sp/>shrink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Following<sp/>statistics<sp/>were<sp/>measured<sp/>on<sp/>a<sp/>Core<sp/>i7-6700<sp/>@<sp/>4.00Ghz,<sp/>compiled<sp/>with<sp/>clang<sp/>7.0.1<sp/>-O2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>larger<sp/>tables<sp/>have<sp/>high<sp/>variance<sp/>as<sp/>they<sp/>were<sp/>run<sp/>fewer<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>A1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>0.10ms<sp/>:<sp/><sp/><sp/><sp/><sp/>0.10ms<sp/>:<sp/><sp/><sp/><sp/><sp/>0.10ms<sp/>:<sp/><sp/><sp/><sp/><sp/>0.11ms<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/>2,000<sp/>inserts<sp/>creating<sp/>2K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>0.96ms<sp/>:<sp/><sp/><sp/><sp/><sp/>0.95ms<sp/>:<sp/><sp/><sp/><sp/><sp/>0.97ms<sp/>:<sp/><sp/><sp/><sp/><sp/>1.04ms<sp/>:<sp/><sp/><sp/><sp/><sp/>20,000<sp/>inserts<sp/>creating<sp/>20K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>14.48ms<sp/>:<sp/><sp/><sp/><sp/>14.46ms<sp/>:<sp/><sp/><sp/><sp/>10.63ms<sp/>:<sp/><sp/><sp/><sp/>11.00ms<sp/>:<sp/><sp/><sp/><sp/>200,000<sp/>inserts<sp/>creating<sp/>200K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>195.74ms<sp/>:<sp/><sp/><sp/>196.35ms<sp/>:<sp/><sp/><sp/>203.69ms<sp/>:<sp/><sp/><sp/>214.92ms<sp/>:<sp/><sp/>2,000,000<sp/>inserts<sp/>creating<sp/>2M<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2193.88ms<sp/>:<sp/><sp/>2209.22ms<sp/>:<sp/><sp/>2285.54ms<sp/>:<sp/><sp/>2437.17ms<sp/>:<sp/>20,000,000<sp/>inserts<sp/>creating<sp/>20M<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>65.27ms<sp/>:<sp/><sp/><sp/><sp/>53.77ms<sp/>:<sp/><sp/><sp/><sp/>65.33ms<sp/>:<sp/><sp/><sp/><sp/>65.47ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>2K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>72.78ms<sp/>:<sp/><sp/><sp/><sp/>62.45ms<sp/>:<sp/><sp/><sp/><sp/>71.95ms<sp/>:<sp/><sp/><sp/><sp/>72.85ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>20K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>89.47ms<sp/>:<sp/><sp/><sp/><sp/>77.72ms<sp/>:<sp/><sp/><sp/><sp/>96.49ms<sp/>:<sp/><sp/><sp/><sp/>96.75ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>200K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>97.58ms<sp/>:<sp/><sp/><sp/><sp/>98.14ms<sp/>:<sp/><sp/><sp/><sp/>97.18ms<sp/>:<sp/><sp/><sp/><sp/>97.53ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>2M<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>118.61ms<sp/>:<sp/><sp/><sp/>119.62ms<sp/>:<sp/><sp/><sp/>120.16ms<sp/>:<sp/><sp/><sp/>118.86ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>20M<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>192.11ms<sp/>:<sp/><sp/><sp/>194.39ms<sp/>:<sp/><sp/><sp/>196.38ms<sp/>:<sp/><sp/><sp/>195.73ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>200M<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slot_count<sp/>&lt;=<sp/>STBDS_BUCKET_LENGTH)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;used_count_shrink_threshold<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>infinite<sp/>loop,<sp/>we<sp/>need<sp/>to<sp/>guarantee<sp/>that<sp/>at<sp/>least<sp/>one<sp/>slot<sp/>is<sp/>empty<sp/>and<sp/>will<sp/>terminate<sp/>probes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>STBDS_ASSERT(t-&gt;used_count_threshold<sp/>+<sp/>t-&gt;tombstone_count_threshold<sp/>&lt;<sp/>t-&gt;slot_count);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>STBDS_STATS(++stbds_hash_alloc);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ot)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;string<sp/>=<sp/>ot-&gt;string;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reuse<sp/>old<sp/>seed<sp/>so<sp/>we<sp/>can<sp/>reuse<sp/>old<sp/>hashes<sp/>so<sp/>below<sp/>&quot;copy<sp/>out<sp/>old<sp/>data&quot;<sp/>doesn&apos;t<sp/>do<sp/>any<sp/>hashing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;seed<sp/>=<sp/>ot-&gt;seed;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a,b,temp;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;t-&gt;string,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(t-&gt;string));</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;seed<sp/>=<sp/>stbds_hash_seed;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LCG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>32-bit,<sp/>a<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2147001325<sp/><sp/><sp/>b<sp/>=<sp/><sp/>715136305</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>64-bit,<sp/>a<sp/>=<sp/>2862933555777941757<sp/><sp/><sp/>b<sp/>=<sp/>3037000493</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_load_32_or_64(a,temp,<sp/>2147001325,<sp/>0x27bb2ee6,<sp/>0x87b0b0fd);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_load_32_or_64(b,temp,<sp/><sp/>715136305,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0xb504f32d);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_hash_seed<sp/>=<sp/>stbds_hash_seed<sp/><sp/>*<sp/>a<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>slot_count<sp/>&gt;&gt;<sp/>STBDS_BUCKET_SHIFT;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hash_bucket<sp/>*b<sp/>=<sp/>&amp;t-&gt;storage[i];</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>STBDS_BUCKET_LENGTH;<sp/>++j)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;hash[j]<sp/>=<sp/>STBDS_HASH_EMPTY;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(j=0;<sp/>j<sp/>&lt;<sp/>STBDS_BUCKET_LENGTH;<sp/>++j)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;index[j]<sp/>=<sp/>STBDS_INDEX_EMPTY;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>out<sp/>the<sp/>old<sp/>data,<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ot)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;used_count<sp/>=<sp/>ot-&gt;used_count;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>ot-&gt;slot_count<sp/>&gt;&gt;<sp/>STBDS_BUCKET_SHIFT;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hash_bucket<sp/>*ob<sp/>=<sp/>&amp;ot-&gt;storage[i];</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>STBDS_BUCKET_LENGTH;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(STBDS_INDEX_IN_USE(ob-&gt;index[j]))<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>ob-&gt;hash[j];</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>stbds_probe_position(hash,<sp/>t-&gt;slot_count,<sp/>t-&gt;slot_count_log2);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>=<sp/>STBDS_BUCKET_LENGTH;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_STATS(++stbds_rehash_items);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>limit,z;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hash_bucket<sp/>*bucket;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bucket<sp/>=<sp/>&amp;t-&gt;storage[pos<sp/>&gt;&gt;<sp/>STBDS_BUCKET_SHIFT];</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_STATS(++stbds_rehash_probes);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z=pos<sp/>&amp;<sp/>STBDS_BUCKET_MASK;<sp/>z<sp/>&lt;<sp/>STBDS_BUCKET_LENGTH;<sp/>++z)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;hash[z]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bucket-&gt;hash[z]<sp/>=<sp/>hash;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bucket-&gt;index[z]<sp/>=<sp/>ob-&gt;index[j];</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>limit<sp/>=<sp/>pos<sp/>&amp;<sp/>STBDS_BUCKET_MASK;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z<sp/>=<sp/>0;<sp/>z<sp/>&lt;<sp/>limit;<sp/>++z)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;hash[z]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bucket-&gt;hash[z]<sp/>=<sp/>hash;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bucket-&gt;index[z]<sp/>=<sp/>ob-&gt;index[j];</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quadratic<sp/>probing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>+=<sp/>STBDS_BUCKET_LENGTH;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>&amp;=<sp/>(t-&gt;slot_count-1);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done:</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_ROTATE_LEFT(val,<sp/>n)<sp/><sp/><sp/>(((val)<sp/>&lt;&lt;<sp/>(n))<sp/>|<sp/>((val)<sp/>&gt;&gt;<sp/>(STBDS_SIZE_T_BITS<sp/>-<sp/>(n))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_ROTATE_RIGHT(val,<sp/>n)<sp/><sp/>(((val)<sp/>&gt;&gt;<sp/>(n))<sp/>|<sp/>((val)<sp/>&lt;&lt;<sp/>(STBDS_SIZE_T_BITS<sp/>-<sp/>(n))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_hash_string(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>seed)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>seed;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>STBDS_ROTATE_LEFT(hash,<sp/>9)<sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>*str++;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Thomas<sp/>Wang<sp/>64-to-32<sp/>bit<sp/>mix<sp/>function,<sp/>hopefully<sp/>also<sp/>works<sp/>in<sp/>32<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>hash<sp/>^=<sp/>seed;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>hash<sp/>=<sp/>(~hash)<sp/>+<sp/>(hash<sp/>&lt;&lt;<sp/>18);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>hash<sp/>^=<sp/>hash<sp/>^<sp/>STBDS_ROTATE_RIGHT(hash,31);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>hash<sp/>=<sp/>hash<sp/>*<sp/>21;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>hash<sp/>^=<sp/>hash<sp/>^<sp/>STBDS_ROTATE_RIGHT(hash,11);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>hash<sp/>+=<sp/>(hash<sp/>&lt;&lt;<sp/>6);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>hash<sp/>^=<sp/>STBDS_ROTATE_RIGHT(hash,22);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash+seed;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBDS_SIPHASH_2_4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_SIPHASH_C_ROUNDS<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_SIPHASH_D_ROUNDS<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>STBDS_SIPHASH_2_4_can_only_be_used_in_64_bit_builds[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_t)<sp/>==<sp/>8<sp/>?<sp/>1<sp/>:<sp/>-1];</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBDS_SIPHASH_C_ROUNDS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_SIPHASH_C_ROUNDS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBDS_SIPHASH_D_ROUNDS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_SIPHASH_D_ROUNDS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4127)<sp/></highlight><highlight class="comment">//<sp/>conditional<sp/>expression<sp/>is<sp/>constant,<sp/>for<sp/>do..while(0)<sp/>and<sp/>sizeof()==</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_siphash_bytes(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>seed)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>p;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>v0,v1,v2,v3,<sp/>data;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>hash<sp/>that<sp/>works<sp/>on<sp/>32-<sp/>or<sp/>64-bit<sp/>registers<sp/>without<sp/>knowing<sp/>which<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(computes<sp/>different<sp/>results<sp/>on<sp/>32-bit<sp/>and<sp/>64-bit<sp/>platform)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>derived<sp/>from<sp/>siphash,<sp/>but<sp/>on<sp/>32-bit<sp/>platforms<sp/>very<sp/>different<sp/>as<sp/>it<sp/>uses<sp/>4<sp/>32-bit<sp/>state<sp/>not<sp/>4<sp/>64-bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>v0<sp/>=<sp/>((((size_t)<sp/>0x736f6d65<sp/>&lt;&lt;<sp/>16)<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>0x70736575)<sp/>^<sp/><sp/>seed;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>v1<sp/>=<sp/>((((size_t)<sp/>0x646f7261<sp/>&lt;&lt;<sp/>16)<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>0x6e646f6d)<sp/>^<sp/>~seed;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>v2<sp/>=<sp/>((((size_t)<sp/>0x6c796765<sp/>&lt;&lt;<sp/>16)<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>0x6e657261)<sp/>^<sp/><sp/>seed;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>v3<sp/>=<sp/>((((size_t)<sp/>0x74656462<sp/>&lt;&lt;<sp/>16)<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>0x79746573)<sp/>^<sp/>~seed;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>STBDS_TEST_SIPHASH_2_4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>hardcoded<sp/>with<sp/>key<sp/>material<sp/>in<sp/>the<sp/>siphash<sp/>test<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>v0<sp/>^=<sp/>0x0706050403020100ull<sp/>^<sp/><sp/>seed;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>v1<sp/>^=<sp/>0x0f0e0d0c0b0a0908ull<sp/>^<sp/>~seed;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>v2<sp/>^=<sp/>0x0706050403020100ull<sp/>^<sp/><sp/>seed;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>v3<sp/>^=<sp/>0x0f0e0d0c0b0a0908ull<sp/>^<sp/>~seed;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>STBDS_SIPROUND()<sp/>\</highlight></codeline>
<codeline lineno="1074"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1075"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>v0<sp/>+=<sp/>v1;<sp/>v1<sp/>=<sp/>STBDS_ROTATE_LEFT(v1,<sp/>13);<sp/><sp/>v1<sp/>^=<sp/>v0;<sp/>v0<sp/>=<sp/>STBDS_ROTATE_LEFT(v0,STBDS_SIZE_T_BITS/2);<sp/>\</highlight></codeline>
<codeline lineno="1076"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>+=<sp/>v3;<sp/>v3<sp/>=<sp/>STBDS_ROTATE_LEFT(v3,<sp/>16);<sp/><sp/>v3<sp/>^=<sp/>v2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1077"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>+=<sp/>v1;<sp/>v1<sp/>=<sp/>STBDS_ROTATE_LEFT(v1,<sp/>17);<sp/><sp/>v1<sp/>^=<sp/>v2;<sp/>v2<sp/>=<sp/>STBDS_ROTATE_LEFT(v2,STBDS_SIZE_T_BITS/2);<sp/>\</highlight></codeline>
<codeline lineno="1078"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>v0<sp/>+=<sp/>v3;<sp/>v3<sp/>=<sp/>STBDS_ROTATE_LEFT(v3,<sp/>21);<sp/><sp/>v3<sp/>^=<sp/>v0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1079"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i+</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_t)<sp/>&lt;=<sp/>len;<sp/>i<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_t),<sp/>d<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>d[0]<sp/>|<sp/>(d[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(d[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(d[3]<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>|=<sp/>(size_t)<sp/>(d[4]<sp/>|<sp/>(d[5]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(d[6]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(d[7]<sp/>&lt;&lt;<sp/>24))<sp/>&lt;&lt;<sp/>16<sp/>&lt;&lt;<sp/>16;<sp/></highlight><highlight class="comment">//<sp/>discarded<sp/>if<sp/>size_t<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>v3<sp/>^=<sp/>data;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>STBDS_SIPHASH_C_ROUNDS;<sp/>++j)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_SIPROUND();</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>v0<sp/>^=<sp/>data;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/>len<sp/>&lt;&lt;<sp/>(STBDS_SIZE_T_BITS-8);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(len<sp/>-<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>data<sp/>|=<sp/>((size_t)<sp/>d[6]<sp/>&lt;&lt;<sp/>24)<sp/>&lt;&lt;<sp/>24;<sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>data<sp/>|=<sp/>((size_t)<sp/>d[5]<sp/>&lt;&lt;<sp/>20)<sp/>&lt;&lt;<sp/>20;<sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>data<sp/>|=<sp/>((size_t)<sp/>d[4]<sp/>&lt;&lt;<sp/>16)<sp/>&lt;&lt;<sp/>16;<sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>data<sp/>|=<sp/>(d[3]<sp/>&lt;&lt;<sp/>24);<sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>data<sp/>|=<sp/>(d[2]<sp/>&lt;&lt;<sp/>16);<sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>data<sp/>|=<sp/>(d[1]<sp/>&lt;&lt;<sp/>8);<sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>data<sp/>|=<sp/>d[0];<sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>v3<sp/>^=<sp/>data;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>STBDS_SIPHASH_C_ROUNDS;<sp/>++j)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_SIPROUND();</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>v0<sp/>^=<sp/>data;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>v2<sp/>^=<sp/>0xff;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>STBDS_SIPHASH_D_ROUNDS;<sp/>++j)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_SIPROUND();</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBDS_SIPHASH_2_4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v0^v1^v2^v3;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v1^v2^v3;<sp/></highlight><highlight class="comment">//<sp/>slightly<sp/>stronger<sp/>since<sp/>v0^v3<sp/>in<sp/>above<sp/>cancels<sp/>out<sp/>final<sp/>round<sp/>operation?<sp/>I<sp/>tweeted<sp/>at<sp/>the<sp/>authors<sp/>of<sp/>SipHash<sp/>about<sp/>this<sp/>but<sp/>they<sp/>didn&apos;t<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stbds_hash_bytes(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>seed)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBDS_SIPHASH_2_4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbds_siphash_bytes(p,len,seed);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>p;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>d[0]<sp/>|<sp/>(d[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(d[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(d[3]<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HASH32-A<sp/><sp/>Bob<sp/>Jenkin&apos;s<sp/>hash<sp/>function<sp/>w/o<sp/>large<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>seed;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>-=<sp/>(hash&lt;&lt;6);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>(hash&gt;&gt;17);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>-=<sp/>(hash&lt;&lt;9);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>seed;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>(hash&lt;&lt;4);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>-=<sp/>(hash&lt;&lt;3);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>(hash&lt;&lt;10);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>(hash&gt;&gt;15);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HASH32-BB<sp/><sp/>Bob<sp/>Jenkin&apos;s<sp/>presumably-accidental<sp/>version<sp/>of<sp/>Thomas<sp/>Wang<sp/>hash<sp/>with<sp/>rotates<sp/>turned<sp/>into<sp/>shifts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>converting<sp/>these<sp/>back<sp/>to<sp/>rotates<sp/>makes<sp/>it<sp/>run<sp/>a<sp/>lot<sp/>slower,<sp/>presumably<sp/>due<sp/>to<sp/>collisions,<sp/>so<sp/>I&apos;m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>really<sp/>sure<sp/>what&apos;s<sp/>going<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>seed;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>(hash<sp/>^<sp/>61)<sp/>^<sp/>(hash<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>hash<sp/>+<sp/>(hash<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>hash<sp/>^<sp/>(hash<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>hash<sp/>*<sp/>0x27d4eb2d;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>seed;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>hash<sp/>^<sp/>(hash<sp/>&gt;&gt;<sp/>15);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else<sp/><sp/></highlight><highlight class="comment">//<sp/>HASH32-C<sp/><sp/><sp/>-<sp/><sp/>Murmur3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>seed;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>*=<sp/>0xcc9e2d51;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>(hash<sp/>&lt;&lt;<sp/>17)<sp/>|<sp/>(hash<sp/>&gt;&gt;<sp/>15);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>*=<sp/>0x1b873593;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>seed;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>(hash<sp/>&lt;&lt;<sp/>19)<sp/>|<sp/>(hash<sp/>&gt;&gt;<sp/>13);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>hash*5<sp/>+<sp/>0xe6546b64;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>hash<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>*=<sp/>0x85ebca6b;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>seed;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>hash<sp/>&gt;&gt;<sp/>13;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>*=<sp/>0xc2b2ae35;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>hash<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Following<sp/>statistics<sp/>were<sp/>measured<sp/>on<sp/>a<sp/>Core<sp/>i7-6700<sp/>@<sp/>4.00Ghz,<sp/>compiled<sp/>with<sp/>clang<sp/>7.0.1<sp/>-O2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>larger<sp/>tables<sp/>have<sp/>high<sp/>variance<sp/>as<sp/>they<sp/>were<sp/>run<sp/>fewer<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>HASH32-A<sp/><sp/><sp/>//<sp/><sp/>HASH32-BB<sp/><sp/>//<sp/><sp/>HASH32-C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>0.10ms<sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>0.10ms<sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>0.10ms<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/>2,000<sp/>inserts<sp/>creating<sp/>2K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>0.96ms<sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>0.95ms<sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>0.99ms<sp/>:<sp/><sp/><sp/><sp/><sp/>20,000<sp/>inserts<sp/>creating<sp/>20K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>14.69ms<sp/><sp/><sp/>//<sp/><sp/><sp/>14.43ms<sp/><sp/><sp/>//<sp/><sp/><sp/>14.97ms<sp/>:<sp/><sp/><sp/><sp/>200,000<sp/>inserts<sp/>creating<sp/>200K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>199.99ms<sp/><sp/><sp/>//<sp/><sp/>195.36ms<sp/><sp/><sp/>//<sp/><sp/>202.05ms<sp/>:<sp/><sp/>2,000,000<sp/>inserts<sp/>creating<sp/>2M<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2234.84ms<sp/><sp/><sp/>//<sp/>2187.74ms<sp/><sp/><sp/>//<sp/>2240.38ms<sp/>:<sp/>20,000,000<sp/>inserts<sp/>creating<sp/>20M<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>55.68ms<sp/><sp/><sp/>//<sp/><sp/><sp/>53.72ms<sp/><sp/><sp/>//<sp/><sp/><sp/>57.31ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>2K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>63.43ms<sp/><sp/><sp/>//<sp/><sp/><sp/>61.99ms<sp/><sp/><sp/>//<sp/><sp/><sp/>65.73ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>20K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>80.04ms<sp/><sp/><sp/>//<sp/><sp/><sp/>77.96ms<sp/><sp/><sp/>//<sp/><sp/><sp/>81.83ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>200K<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>100.42ms<sp/><sp/><sp/>//<sp/><sp/><sp/>97.40ms<sp/><sp/><sp/>//<sp/><sp/>102.39ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>2M<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>119.71ms<sp/><sp/><sp/>//<sp/><sp/>120.59ms<sp/><sp/><sp/>//<sp/><sp/>121.63ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>20M<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>185.28ms<sp/><sp/><sp/>//<sp/><sp/>195.15ms<sp/><sp/><sp/>//<sp/><sp/>187.74ms<sp/>:<sp/>500,000<sp/>inserts<sp/>&amp;<sp/>deletes<sp/>in<sp/>200M<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>15.58ms<sp/><sp/><sp/>//<sp/><sp/><sp/>14.79ms<sp/><sp/><sp/>//<sp/><sp/><sp/>15.52ms<sp/>:<sp/>200,000<sp/>inserts<sp/>creating<sp/>200K<sp/>table<sp/>with<sp/>varying<sp/>key<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>hash<sp/>&lt;&lt;<sp/>16<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>hash)<sp/>^<sp/>seed;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>8<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>d[0]<sp/>|<sp/>(d[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(d[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(d[3]<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>|=<sp/>(size_t)<sp/>(d[4]<sp/>|<sp/>(d[5]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(d[6]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(d[7]<sp/>&lt;&lt;<sp/>24))<sp/>&lt;&lt;<sp/>16<sp/>&lt;&lt;<sp/>16;<sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>warning<sp/>if<sp/>size_t<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>seed;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>(~hash)<sp/>+<sp/>(hash<sp/>&lt;&lt;<sp/>21);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>STBDS_ROTATE_RIGHT(hash,24);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>*=<sp/>265;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>STBDS_ROTATE_RIGHT(hash,14);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>seed;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>*=<sp/>21;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>^=<sp/>STBDS_ROTATE_RIGHT(hash,28);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>+=<sp/>(hash<sp/>&lt;&lt;<sp/>31);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>(~hash)<sp/>+<sp/>(hash<sp/>&lt;&lt;<sp/>18);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbds_siphash_bytes(p,len,seed);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbds_is_key_equal(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyoffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>&gt;=<sp/>STBDS_HM_STRING)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0==strcmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>key,<sp/>*<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a<sp/>+<sp/>elemsize*i<sp/>+<sp/>keyoffset));</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0==memcmp(key,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a<sp/>+<sp/>elemsize*i<sp/>+<sp/>keyoffset,<sp/>keysize);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_HASH_TO_ARR(x,elemsize)<sp/>((char*)<sp/>(x)<sp/>-<sp/>(elemsize))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_ARR_TO_HASH(x,elemsize)<sp/>((char*)<sp/>(x)<sp/>+<sp/>(elemsize))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbds_hash_table(a)<sp/><sp/>((stbds_hash_index<sp/>*)<sp/>stbds_header(a)-&gt;hash_table)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbds_hmfree_func(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbds_hash_table(a)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbds_hash_table(a)-&gt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.mode<sp/>==<sp/>STBDS_SH_STRDUP)<sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>0th<sp/>element,<sp/>which<sp/>is<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i<sp/>&lt;<sp/>stbds_header(a)-&gt;length;<sp/>++i)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_FREE(NULL,<sp/>*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a<sp/>+<sp/>elemsize*i));</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_strreset(&amp;stbds_hash_table(a)-&gt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>STBDS_FREE(NULL,<sp/>stbds_header(a)-&gt;hash_table);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>STBDS_FREE(NULL,<sp/>stbds_header(a));</highlight></codeline>
<codeline lineno="1230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ptrdiff_t<sp/>stbds_hm_find_slot(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyoffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*raw_a<sp/>=<sp/>STBDS_HASH_TO_ARR(a,elemsize);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>stbds_hash_index<sp/>*<ref refid="structtable" kindref="compound">table</ref><sp/>=<sp/>stbds_hash_table(raw_a);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>mode<sp/>&gt;=<sp/>STBDS_HM_STRING<sp/>?<sp/>stbds_hash_string((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)key,<ref refid="structtable" kindref="compound">table</ref>-&gt;seed)<sp/>:<sp/>stbds_hash_bytes(key,<sp/>keysize,<ref refid="structtable" kindref="compound">table</ref>-&gt;seed);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>=<sp/>STBDS_BUCKET_LENGTH;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>limit,i;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/>stbds_hash_bucket<sp/>*bucket;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash<sp/>&lt;<sp/>2)<sp/>hash<sp/>+=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>stored<sp/>hash<sp/>values<sp/>are<sp/>forbidden<sp/>from<sp/>being<sp/>0,<sp/>so<sp/>we<sp/>can<sp/>detect<sp/>empty<sp/>slots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/>stbds_probe_position(hash,<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count,<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count_log2);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_STATS(++stbds_hash_probes);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>bucket<sp/>=<sp/>&amp;<ref refid="structtable" kindref="compound">table</ref>-&gt;storage[pos<sp/>&gt;&gt;<sp/>STBDS_BUCKET_SHIFT];</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>searching<sp/>from<sp/>pos<sp/>to<sp/>end<sp/>of<sp/>bucket,<sp/>this<sp/>should<sp/>help<sp/>performance<sp/>on<sp/>small<sp/>hash<sp/>tables<sp/>that<sp/>fit<sp/>in<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=pos<sp/>&amp;<sp/>STBDS_BUCKET_MASK;<sp/>i<sp/>&lt;<sp/>STBDS_BUCKET_LENGTH;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;hash[i]<sp/>==<sp/>hash)<sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbds_is_key_equal(a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>keyoffset,<sp/>mode,<sp/>bucket-&gt;index[i]))<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pos<sp/>&amp;<sp/>~STBDS_BUCKET_MASK)+i;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;hash[i]<sp/>==<sp/>STBDS_HASH_EMPTY)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>from<sp/>beginning<sp/>of<sp/>bucket<sp/>to<sp/>pos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>limit<sp/>=<sp/>pos<sp/>&amp;<sp/>STBDS_BUCKET_MASK;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>limit;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;hash[i]<sp/>==<sp/>hash)<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbds_is_key_equal(a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>keyoffset,<sp/>mode,<sp/>bucket-&gt;index[i]))<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pos<sp/>&amp;<sp/>~STBDS_BUCKET_MASK)+i;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;hash[i]<sp/>==<sp/>STBDS_HASH_EMPTY)<sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quadratic<sp/>probing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>+=<sp/>STBDS_BUCKET_LENGTH;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>&amp;=<sp/>(<ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count-1);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTREACHED<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_hmget_key_ts(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/>ptrdiff_t<sp/>*temp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyoffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>it<sp/>non-empty<sp/>so<sp/>we<sp/>can<sp/>return<sp/>a<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>stbds_arrgrowf(0,<sp/>elemsize,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_header(a)-&gt;length<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(a,<sp/>0,<sp/>elemsize);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>*temp<sp/>=<sp/>STBDS_INDEX_EMPTY;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>a<sp/>to<sp/>point<sp/>after<sp/>the<sp/>default<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBDS_ARR_TO_HASH(a,elemsize);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_hash_index<sp/>*<ref refid="structtable" kindref="compound">table</ref>;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*raw_a<sp/>=<sp/>STBDS_HASH_TO_ARR(a,elemsize);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>a<sp/>to<sp/>point<sp/>to<sp/>the<sp/>default<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtable" kindref="compound">table</ref><sp/>=<sp/>(stbds_hash_index<sp/>*)<sp/>stbds_header(raw_a)-&gt;hash_table;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtable" kindref="compound">table</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*temp<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>slot<sp/>=<sp/>stbds_hm_find_slot(a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>keyoffset,<sp/>mode);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slot<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*temp<sp/>=<sp/>STBDS_INDEX_EMPTY;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hash_bucket<sp/>*b<sp/>=<sp/>&amp;<ref refid="structtable" kindref="compound">table</ref>-&gt;storage[slot<sp/>&gt;&gt;<sp/>STBDS_BUCKET_SHIFT];</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*temp<sp/>=<sp/>b-&gt;index[slot<sp/>&amp;<sp/>STBDS_BUCKET_MASK];</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_hmget_key(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>ptrdiff_t<sp/>temp;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>stbds_hmget_key_ts(a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>&amp;temp,<sp/>mode);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>stbds_temp(STBDS_HASH_TO_ARR(p,elemsize))<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_hmput_default(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>three<sp/>cases:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/>is<sp/>NULL<sp/>&lt;-<sp/>allocate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/>has<sp/>a<sp/>hash<sp/>table<sp/>but<sp/>no<sp/>entries,<sp/>because<sp/>of<sp/>shmode<sp/>&lt;-<sp/>grow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/>has<sp/>entries<sp/>&lt;-<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>NULL<sp/>||<sp/>stbds_header(STBDS_HASH_TO_ARR(a,elemsize))-&gt;length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>stbds_arrgrowf(a<sp/>?<sp/>STBDS_HASH_TO_ARR(a,elemsize)<sp/>:<sp/>NULL,<sp/>elemsize,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_header(a)-&gt;length<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(a,<sp/>0,<sp/>elemsize);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>a=STBDS_ARR_TO_HASH(a,elemsize);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbds_strdup(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbds_hmput_key(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyoffset=0;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*raw_a;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>stbds_hash_index<sp/>*<ref refid="structtable" kindref="compound">table</ref>;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>stbds_arrgrowf(0,<sp/>elemsize,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(a,<sp/>0,<sp/>elemsize);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_header(a)-&gt;length<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>a<sp/>to<sp/>point<sp/>AFTER<sp/>the<sp/>default<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>STBDS_ARR_TO_HASH(a,elemsize);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>a<sp/>to<sp/>point<sp/>to<sp/>the<sp/>default<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/>raw_a<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/>STBDS_HASH_TO_ARR(a,elemsize);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><ref refid="structtable" kindref="compound">table</ref><sp/>=<sp/>(stbds_hash_index<sp/>*)<sp/>stbds_header(a)-&gt;hash_table;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtable" kindref="compound">table</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;used_count<sp/>&gt;=<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;used_count_threshold)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_hash_index<sp/>*nt;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slot_count;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>slot_count<sp/>=<sp/>(<ref refid="structtable" kindref="compound">table</ref><sp/>==<sp/>NULL)<sp/>?<sp/>STBDS_BUCKET_LENGTH<sp/>:<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count*2;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>nt<sp/>=<sp/>stbds_make_hash_index(slot_count,<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtable" kindref="compound">table</ref>)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_FREE(NULL,<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nt-&gt;string.mode<sp/>=<sp/>mode<sp/>&gt;=<sp/>STBDS_HM_STRING<sp/>?<sp/>STBDS_SH_DEFAULT<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_header(a)-&gt;hash_table<sp/>=<sp/><ref refid="structtable" kindref="compound">table</ref><sp/>=<sp/>nt;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_STATS(++stbds_hash_grow);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>iterate<sp/>hash<sp/>table<sp/>explicitly<sp/>because<sp/>we<sp/>want<sp/>to<sp/>track<sp/>if<sp/>we<sp/>saw<sp/>a<sp/>tombstone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>mode<sp/>&gt;=<sp/>STBDS_HM_STRING<sp/>?<sp/>stbds_hash_string((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)key,<ref refid="structtable" kindref="compound">table</ref>-&gt;seed)<sp/>:<sp/>stbds_hash_bytes(key,<sp/>keysize,<ref refid="structtable" kindref="compound">table</ref>-&gt;seed);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>=<sp/>STBDS_BUCKET_LENGTH;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>tombstone<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_hash_bucket<sp/>*bucket;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stored<sp/>hash<sp/>values<sp/>are<sp/>forbidden<sp/>from<sp/>being<sp/>0,<sp/>so<sp/>we<sp/>can<sp/>detect<sp/>empty<sp/>slots<sp/>to<sp/>early<sp/>out<sp/>quickly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash<sp/>&lt;<sp/>2)<sp/>hash<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>stbds_probe_position(hash,<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count,<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count_log2);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>limit,<sp/>i;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_STATS(++stbds_hash_probes);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bucket<sp/>=<sp/>&amp;<ref refid="structtable" kindref="compound">table</ref>-&gt;storage[pos<sp/>&gt;&gt;<sp/>STBDS_BUCKET_SHIFT];</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>searching<sp/>from<sp/>pos<sp/>to<sp/>end<sp/>of<sp/>bucket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=pos<sp/>&amp;<sp/>STBDS_BUCKET_MASK;<sp/>i<sp/>&lt;<sp/>STBDS_BUCKET_LENGTH;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;hash[i]<sp/>==<sp/>hash)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbds_is_key_equal(raw_a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>keyoffset,<sp/>mode,<sp/>bucket-&gt;index[i]))<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_temp(a)<sp/>=<sp/>bucket-&gt;index[i];</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>&gt;=<sp/>STBDS_HM_STRING)</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_temp_key(a)<sp/>=<sp/>*<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>raw_a<sp/>+<sp/>elemsize*bucket-&gt;index[i]<sp/>+<sp/>keyoffset);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBDS_ARR_TO_HASH(a,elemsize);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;hash[i]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>(pos<sp/>&amp;<sp/>~STBDS_BUCKET_MASK)<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found_empty_slot;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tombstone<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;index[i]<sp/>==<sp/>STBDS_INDEX_DELETED)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tombstone<sp/>=<sp/>(ptrdiff_t)<sp/>((pos<sp/>&amp;<sp/>~STBDS_BUCKET_MASK)<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>from<sp/>beginning<sp/>of<sp/>bucket<sp/>to<sp/>pos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>limit<sp/>=<sp/>pos<sp/>&amp;<sp/>STBDS_BUCKET_MASK;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>limit;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;hash[i]<sp/>==<sp/>hash)<sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbds_is_key_equal(raw_a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>keyoffset,<sp/>mode,<sp/>bucket-&gt;index[i]))<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_temp(a)<sp/>=<sp/>bucket-&gt;index[i];</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBDS_ARR_TO_HASH(a,elemsize);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;hash[i]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>(pos<sp/>&amp;<sp/>~STBDS_BUCKET_MASK)<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found_empty_slot;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tombstone<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucket-&gt;index[i]<sp/>==<sp/>STBDS_INDEX_DELETED)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tombstone<sp/>=<sp/>(ptrdiff_t)<sp/>((pos<sp/>&amp;<sp/>~STBDS_BUCKET_MASK)<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quadratic<sp/>probing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga015a1261ff23e12650211aa872863cce" kindref="member">step</ref><sp/>+=<sp/>STBDS_BUCKET_LENGTH;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>&amp;=<sp/>(<ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count-1);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/>found_empty_slot:</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tombstone<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>tombstone;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="structtable" kindref="compound">table</ref>-&gt;tombstone_count;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="structtable" kindref="compound">table</ref>-&gt;used_count;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>i<sp/>=<sp/>(ptrdiff_t)<sp/>stbds_arrlen(a);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>do<sp/>stbds_arraddn(1),<sp/>but<sp/>we<sp/>can&apos;t<sp/>use<sp/>the<sp/>macros<sp/>since<sp/>we<sp/>don&apos;t<sp/>have<sp/>something<sp/>of<sp/>the<sp/>right<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>i+1<sp/>&gt;<sp/>stbds_arrcap(a))</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>&amp;a<sp/>=<sp/>stbds_arrgrowf(a,<sp/>elemsize,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>raw_a<sp/>=<sp/>STBDS_ARR_TO_HASH(a,elemsize);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>i+1<sp/>&lt;=<sp/>stbds_arrcap(a));</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbds_header(a)-&gt;length<sp/>=<sp/>i+1;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bucket<sp/>=<sp/>&amp;<ref refid="structtable" kindref="compound">table</ref>-&gt;storage[pos<sp/>&gt;&gt;<sp/>STBDS_BUCKET_SHIFT];</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bucket-&gt;hash[pos<sp/>&amp;<sp/>STBDS_BUCKET_MASK]<sp/>=<sp/>hash;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bucket-&gt;index[pos<sp/>&amp;<sp/>STBDS_BUCKET_MASK]<sp/>=<sp/>i-1;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbds_temp(a)<sp/>=<sp/>i-1;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structtable" kindref="compound">table</ref>-&gt;string.mode)<sp/>{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBDS_SH_STRDUP:<sp/><sp/>stbds_temp_key(a)<sp/>=<sp/>*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a<sp/>+<sp/>elemsize*i)<sp/>=<sp/>stbds_strdup((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>key);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBDS_SH_ARENA:<sp/><sp/><sp/>stbds_temp_key(a)<sp/>=<sp/>*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a<sp/>+<sp/>elemsize*i)<sp/>=<sp/>stbds_stralloc(&amp;<ref refid="structtable" kindref="compound">table</ref>-&gt;string,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)key);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBDS_SH_DEFAULT:<sp/>stbds_temp_key(a)<sp/>=<sp/>*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a<sp/>+<sp/>elemsize*i)<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>key;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a<sp/>+<sp/>elemsize*i,<sp/>key,<sp/>keysize);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBDS_ARR_TO_HASH(a,elemsize);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_shmode_func(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/>stbds_arrgrowf(0,<sp/>elemsize,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>stbds_hash_index<sp/>*h;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>memset(a,<sp/>0,<sp/>elemsize);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/>stbds_header(a)-&gt;length<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>stbds_header(a)-&gt;hash_table<sp/>=<sp/>h<sp/>=<sp/>(stbds_hash_index<sp/>*)<sp/>stbds_make_hash_index(STBDS_BUCKET_LENGTH,<sp/>NULL);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/>h-&gt;string.mode<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>mode;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBDS_ARR_TO_HASH(a,elemsize);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>stbds_hmdel_key(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elemsize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keysize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyoffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_hash_index<sp/>*<ref refid="structtable" kindref="compound">table</ref>;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*raw_a<sp/>=<sp/>STBDS_HASH_TO_ARR(a,elemsize);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtable" kindref="compound">table</ref><sp/>=<sp/>(stbds_hash_index<sp/>*)<sp/>stbds_header(raw_a)-&gt;hash_table;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_temp(raw_a)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtable" kindref="compound">table</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>slot;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slot<sp/>=<sp/>stbds_hm_find_slot(a,<sp/>elemsize,<sp/>key,<sp/>keysize,<sp/>keyoffset,<sp/>mode);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slot<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_hash_bucket<sp/>*b<sp/>=<sp/>&amp;<ref refid="structtable" kindref="compound">table</ref>-&gt;storage[slot<sp/>&gt;&gt;<sp/>STBDS_BUCKET_SHIFT];</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>slot<sp/>&amp;<sp/>STBDS_BUCKET_MASK;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>old_index<sp/>=<sp/>b-&gt;index[i];</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>final_index<sp/>=<sp/>(ptrdiff_t)<sp/>stbds_arrlen(raw_a)-1-1;<sp/></highlight><highlight class="comment">//<sp/>minus<sp/>one<sp/>for<sp/>the<sp/>raw_a<sp/>vs<sp/>a,<sp/>and<sp/>minus<sp/>one<sp/>for<sp/>&apos;last&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(slot<sp/>&lt;<sp/>(ptrdiff_t)<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="structtable" kindref="compound">table</ref>-&gt;used_count;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="structtable" kindref="compound">table</ref>-&gt;tombstone_count;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_temp(raw_a)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(<ref refid="structtable" kindref="compound">table</ref>-&gt;used_count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STBDS_ASSERT(table-&gt;tombstone_count<sp/>&lt;<sp/>table-&gt;slot_count/4);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;hash[i]<sp/>=<sp/>STBDS_HASH_DELETED;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;index[i]<sp/>=<sp/>STBDS_INDEX_DELETED;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>STBDS_HM_STRING<sp/>&amp;&amp;<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;string.mode<sp/>==<sp/>STBDS_SH_STRDUP)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_FREE(NULL,<sp/>*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a+elemsize*old_index));</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>indices<sp/>are<sp/>the<sp/>same,<sp/>memcpy<sp/>is<sp/>a<sp/>no-op,<sp/>but<sp/>back-pointer-fixup<sp/>will<sp/>fail,<sp/>so<sp/>skip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_index<sp/>!=<sp/>final_index)<sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>a<sp/>+<sp/>elemsize*old_index,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>a<sp/>+<sp/>elemsize*final_index,<sp/>elemsize);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>find<sp/>the<sp/>slot<sp/>for<sp/>the<sp/>last<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>STBDS_HM_STRING)</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot<sp/>=<sp/>stbds_hm_find_slot(a,<sp/>elemsize,<sp/>*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a+elemsize*old_index<sp/>+<sp/>keyoffset),<sp/>keysize,<sp/>keyoffset,<sp/>mode);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot<sp/>=<sp/>stbds_hm_find_slot(a,<sp/>elemsize,<sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)<sp/>a+elemsize*old_index<sp/>+<sp/>keyoffset,<sp/>keysize,<sp/>keyoffset,<sp/>mode);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(slot<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>&amp;<ref refid="structtable" kindref="compound">table</ref>-&gt;storage[slot<sp/>&gt;&gt;<sp/>STBDS_BUCKET_SHIFT];</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>slot<sp/>&amp;<sp/>STBDS_BUCKET_MASK;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(b-&gt;index[i]<sp/>==<sp/>final_index);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;index[i]<sp/>=<sp/>old_index;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_header(raw_a)-&gt;length<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtable" kindref="compound">table</ref>-&gt;used_count<sp/>&lt;<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;used_count_shrink_threshold<sp/>&amp;&amp;<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count<sp/>&gt;<sp/>STBDS_BUCKET_LENGTH)<sp/>{</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_header(raw_a)-&gt;hash_table<sp/>=<sp/>stbds_make_hash_index(<ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count&gt;&gt;1,<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_FREE(NULL,<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_STATS(++stbds_hash_shrink);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structtable" kindref="compound">table</ref>-&gt;tombstone_count<sp/>&gt;<sp/><ref refid="structtable" kindref="compound">table</ref>-&gt;tombstone_count_threshold)<sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbds_header(raw_a)-&gt;hash_table<sp/>=<sp/>stbds_make_hash_index(<ref refid="structtable" kindref="compound">table</ref>-&gt;slot_count<sp/><sp/><sp/>,<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_FREE(NULL,<sp/><ref refid="structtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_STATS(++stbds_hash_rebuild);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTREACHED<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbds_strdup(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>keep<sp/>replaceable<sp/>allocator<sp/>simple,<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>use<sp/>strdup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rolling<sp/>our<sp/>own<sp/>also<sp/>avoids<sp/>problem<sp/>of<sp/>strdup<sp/>vs<sp/>_strdup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(str)+1;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>STBDS_REALLOC(NULL,<sp/>0,<sp/>len);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/>memmove(p,<sp/>str,<sp/>len);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBDS_STRING_ARENA_BLOCKSIZE_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_STRING_ARENA_BLOCKSIZE_MIN<sp/><sp/>512u</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBDS_STRING_ARENA_BLOCKSIZE_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_STRING_ARENA_BLOCKSIZE_MAX<sp/><sp/>(1u&lt;&lt;20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbds_stralloc(<ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(str)+1;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>a-&gt;remaining)<sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>next<sp/>blocksize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blocksize<sp/>=<sp/>a-&gt;block;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>is<sp/>512,<sp/>512,<sp/>1024,<sp/>1024,<sp/>2048,<sp/>2048,<sp/>4096,<sp/>4096,<sp/>etc.,<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>are<sp/>log(SIZE)<sp/>allocations<sp/>to<sp/>free<sp/>when<sp/>we<sp/>destroy<sp/>the<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>blocksize<sp/>=<sp/>(size_t)<sp/>(STBDS_STRING_ARENA_BLOCKSIZE_MIN)<sp/>&lt;&lt;<sp/>(blocksize&gt;&gt;1);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>size<sp/>is<sp/>under<sp/>1M,<sp/>advance<sp/>to<sp/>next<sp/>blocktype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blocksize<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(STBDS_STRING_ARENA_BLOCKSIZE_MAX))</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++a-&gt;block;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>blocksize)<sp/>{</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>string<sp/>is<sp/>larger<sp/>than<sp/>blocksize,<sp/>then<sp/>just<sp/>allocate<sp/>the<sp/>full<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>we<sp/>still<sp/>advance<sp/>string_block<sp/>so<sp/>block<sp/>size<sp/>will<sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increasing,<sp/>so<sp/>e.g.<sp/>if<sp/>somebody<sp/>only<sp/>calls<sp/>this<sp/>with<sp/>1000-long<sp/>strings,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eventually<sp/>the<sp/>arena<sp/>will<sp/>start<sp/>doubling<sp/>and<sp/>handling<sp/>those<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbds__string__block" kindref="compound">stbds_string_block</ref><sp/>*sb<sp/>=<sp/>(<ref refid="structstbds__string__block" kindref="compound">stbds_string_block</ref><sp/>*)<sp/>STBDS_REALLOC(NULL,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*sb)-8<sp/>+<sp/>len);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove(sb-&gt;storage,<sp/>str,<sp/>len);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-&gt;storage)<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>it<sp/>after<sp/>the<sp/>first<sp/>element,<sp/>so<sp/>that<sp/>we<sp/>don&apos;t<sp/>waste<sp/>the<sp/>space<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb-&gt;next<sp/>=<sp/>a-&gt;storage-&gt;next;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;storage-&gt;next<sp/>=<sp/>sb;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb-&gt;next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;storage<sp/>=<sp/>sb;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;remaining<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>redundant,<sp/>but<sp/>good<sp/>for<sp/>clarity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sb-&gt;storage;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbds__string__block" kindref="compound">stbds_string_block</ref><sp/>*sb<sp/>=<sp/>(<ref refid="structstbds__string__block" kindref="compound">stbds_string_block</ref><sp/>*)<sp/>STBDS_REALLOC(NULL,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*sb)-8<sp/>+<sp/>blocksize);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sb-&gt;next<sp/>=<sp/>a-&gt;storage;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;storage<sp/>=<sp/>sb;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;remaining<sp/>=<sp/>blocksize;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/>STBDS_ASSERT(len<sp/>&lt;=<sp/>a-&gt;remaining);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>a-&gt;storage-&gt;storage<sp/>+<sp/>a-&gt;remaining<sp/>-<sp/>len;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>a-&gt;remaining<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>memmove(p,<sp/>str,<sp/>len);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbds_strreset(<ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref><sp/>*a)</highlight></codeline>
<codeline lineno="1606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><ref refid="structstbds__string__block" kindref="compound">stbds_string_block</ref><sp/>*x,*y;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>a-&gt;storage;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x)<sp/>{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>x-&gt;next;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_FREE(NULL,<sp/>x);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/>memset(a,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*a));</highlight></codeline>
<codeline lineno="1615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>UNIT<sp/>TESTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBDS_UNIT_TESTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBDS_ASSERT_WAS_UNDEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STBDS_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBDS_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBDS_ASSERT<sp/>assert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,b,c,d;<sp/>}<sp/>stbds_struct;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key[2],b,c,d;<sp/>}<sp/>stbds_struct2;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>[256];</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strkey(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(__STDC_WANT_SECURE_LIB__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/>sprintf_s(<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classbuffer" kindref="compound">buffer</ref>),<sp/></highlight><highlight class="stringliteral">&quot;test_%d&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/>sprintf(<ref refid="classbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="stringliteral">&quot;test_%d&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbuffer" kindref="compound">buffer</ref>;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbds_unit_tests(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&lt;=<sp/>1200<sp/>&amp;&amp;<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>VC6<sp/>C++<sp/>doesn&apos;t<sp/>like<sp/>the<sp/>template&lt;&gt;<sp/>trick<sp/>on<sp/>unnamed<sp/>structures,<sp/>so<sp/>do<sp/>nothing!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>STBDS_ASSERT(0);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>testsize<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>testsize2<sp/>=<sp/>testsize/20;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*arr=NULL;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>key;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvalue" kindref="compound">value</ref>;<sp/>}<sp/><sp/>*intmap<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvalue" kindref="compound">value</ref>;<sp/>}<sp/><sp/>*strmap<sp/><sp/>=<sp/>NULL,<sp/>s;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/>stbds_struct<sp/>key;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvalue" kindref="compound">value</ref>;<sp/>}<sp/><sp/>*map<sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/>stbds_struct<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*map2<sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/>stbds_struct2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*map3<sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><ref refid="structstbds__string__arena" kindref="compound">stbds_string_arena</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key3[2]<sp/>=<sp/>{<sp/>1,2<sp/>};</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/>ptrdiff_t<sp/>temp;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>STBDS_ASSERT(arrlen(arr)==0);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>20000;<sp/>i<sp/>+=<sp/>50)<sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>i;<sp/>++j)</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arrpush(arr,j);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>arrfree(arr);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/>arrpush(arr,1);<sp/>arrpush(arr,2);<sp/>arrpush(arr,3);<sp/>arrpush(arr,4);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>arrdel(arr,i);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>arrfree(arr);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>arrpush(arr,1);<sp/>arrpush(arr,2);<sp/>arrpush(arr,3);<sp/>arrpush(arr,4);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>arrdelswap(arr,i);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>arrfree(arr);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>5;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>arrpush(arr,1);<sp/>arrpush(arr,2);<sp/>arrpush(arr,3);<sp/>arrpush(arr,4);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_arrins(arr,i,5);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(arr[i]<sp/>==<sp/>5);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(arr[4]<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>arrfree(arr);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/>STBDS_ASSERT(hmgeti(intmap,i)<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>hmdefault(intmap,<sp/>-2);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/>STBDS_ASSERT(hmgeti(intmap,<sp/>i)<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/>STBDS_ASSERT(hmget<sp/>(intmap,<sp/>i)<sp/>==<sp/>-2);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=2)</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>hmput(intmap,<sp/>i,<sp/>i*5);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=1)<sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>1)<sp/>STBDS_ASSERT(hmget(intmap,<sp/>i)<sp/>==<sp/>-2<sp/>);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(hmget(intmap,<sp/>i)<sp/>==<sp/>i*5);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>1)<sp/>STBDS_ASSERT(hmget_ts(intmap,<sp/>i,<sp/>temp)<sp/>==<sp/>-2<sp/>);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(hmget_ts(intmap,<sp/>i,<sp/>temp)<sp/>==<sp/>i*5);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=2)</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>hmput(intmap,<sp/>i,<sp/>i*3);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=1)</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>1)<sp/>STBDS_ASSERT(hmget(intmap,<sp/>i)<sp/>==<sp/>-2<sp/>);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(hmget(intmap,<sp/>i)<sp/>==<sp/>i*3);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=2;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=4)</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>hmdel(intmap,<sp/>i);<sp/></highlight><highlight class="comment">//<sp/>delete<sp/>half<sp/>the<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=1)</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>3)<sp/>STBDS_ASSERT(hmget(intmap,<sp/>i)<sp/>==<sp/>-2<sp/>);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(hmget(intmap,<sp/>i)<sp/>==<sp/>i*3);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=1)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>hmdel(intmap,<sp/>i);<sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=1)</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(hmget(intmap,<sp/>i)<sp/>==<sp/>-2<sp/>);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>hmfree(intmap);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=2)</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>hmput(intmap,<sp/>i,<sp/>i*3);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/>hmfree(intmap);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(__clang__)<sp/>||<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/>intmap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/>hmput(intmap,<sp/>15,<sp/>7);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>hmput(intmap,<sp/>11,<sp/>3);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/>hmput(intmap,<sp/><sp/>9,<sp/>5);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>STBDS_ASSERT(hmget(intmap,<sp/>9)<sp/>==<sp/>5);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/>STBDS_ASSERT(hmget(intmap,<sp/>11)<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/>STBDS_ASSERT(hmget(intmap,<sp/>15)<sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>++i)</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>stralloc(&amp;sa,<sp/>strkey(i));</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/>strreset(&amp;sa);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>s.key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>s.value<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>shputs(strmap,<sp/>s);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(*strmap[0].key<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(strmap[0].key<sp/>==<sp/>s.key);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(strmap[0].<ref refid="classvalue" kindref="compound">value</ref><sp/>==<sp/>s.value);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>shfree(strmap);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>s.key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>s.value<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>sh_new_strdup(strmap);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/>shputs(strmap,<sp/>s);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(*strmap[0].key<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(strmap[0].key<sp/>!=<sp/>s.key);</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(strmap[0].<ref refid="classvalue" kindref="compound">value</ref><sp/>==<sp/>s.value);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>shfree(strmap);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>s.key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>s.value<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>sh_new_arena(strmap);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/>shputs(strmap,<sp/>s);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(*strmap[0].key<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(strmap[0].key<sp/>!=<sp/>s.key);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(strmap[0].<ref refid="classvalue" kindref="compound">value</ref><sp/>==<sp/>s.value);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>shfree(strmap);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(shgeti(strmap,</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">)<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sh_new_strdup(strmap);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sh_new_arena(strmap);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(shgeti(strmap,</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">)<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>shdefault(strmap,<sp/>-2);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>STBDS_ASSERT(shgeti(strmap,</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">)<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=2)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shput(strmap,<sp/>strkey(i),<sp/>i*3);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=1)</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>1)<sp/>STBDS_ASSERT(shget(strmap,<sp/>strkey(i))<sp/>==<sp/>-2<sp/>);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(shget(strmap,<sp/>strkey(i))<sp/>==<sp/>i*3);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=2;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=4)</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shdel(strmap,<sp/>strkey(i));<sp/></highlight><highlight class="comment">//<sp/>delete<sp/>half<sp/>the<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=1)</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>3)<sp/>STBDS_ASSERT(shget(strmap,<sp/>strkey(i))<sp/>==<sp/>-2<sp/>);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(shget(strmap,<sp/>strkey(i))<sp/>==<sp/>i*3);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=1)</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shdel(strmap,<sp/>strkey(i));<sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i+=1)</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(shget(strmap,<sp/>strkey(i))<sp/>==<sp/>-2<sp/>);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>shfree(strmap);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classvalue" kindref="compound">value</ref>;<sp/>}<sp/>*hash<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[4]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;jen&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>shput(hash,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>shput(hash,<sp/></highlight><highlight class="stringliteral">&quot;sally&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>shput(hash,<sp/></highlight><highlight class="stringliteral">&quot;fred&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>shput(hash,<sp/></highlight><highlight class="stringliteral">&quot;jen&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/>shput(hash,<sp/></highlight><highlight class="stringliteral">&quot;doug&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/>shput(hash,<sp/>name<sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>shfree(hash);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_struct<sp/>s<sp/>=<sp/>{<sp/>i,i*2,i*3,i*4<sp/>};</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>hmput(map,<sp/>s,<sp/>i*5);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i<sp/>+=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_struct<sp/>s<sp/>=<sp/>{<sp/>i,i*2,i*3<sp/><sp/>,i*4<sp/>};</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_struct<sp/>t<sp/>=<sp/>{<sp/>i,i*2,i*3+1,i*4<sp/>};</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>1)<sp/>STBDS_ASSERT(hmget(map,<sp/>s)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(hmget(map,<sp/>s)<sp/>==<sp/>i*5);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>1)<sp/>STBDS_ASSERT(hmget_ts(map,<sp/>s,<sp/>temp)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(hmget_ts(map,<sp/>s,<sp/>temp)<sp/>==<sp/>i*5);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STBDS_ASSERT(hmget(map,<sp/>t.key)<sp/>==<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_struct<sp/>s<sp/>=<sp/>{<sp/>i,i*2,i*3,i*4<sp/>};</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>hmputs(map2,<sp/>s);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/>hmfree(map);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i<sp/>+=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_struct<sp/>s<sp/>=<sp/>{<sp/>i,i*2,i*3,i*4<sp/>};</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_struct<sp/>t<sp/>=<sp/>{<sp/>i,i*2,i*3+1,i*4<sp/>};</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>1)<sp/>STBDS_ASSERT(hmgets(map2,<sp/>s.key).d<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(hmgets(map2,<sp/>s.key).d<sp/>==<sp/>i*4);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STBDS_ASSERT(hmgetp(map2,<sp/>t.key)<sp/>==<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/>hmfree(map2);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_struct2<sp/>s<sp/>=<sp/>{<sp/>{<sp/>i,i*2<sp/>},<sp/>i*3,i*4,<sp/>i*5<sp/>};</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/>hmputs(map3,<sp/>s);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>testsize;<sp/>i<sp/>+=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_struct2<sp/>s<sp/>=<sp/>{<sp/>{<sp/>i,i*2},<sp/>i*3,<sp/>i*4,<sp/>i*5<sp/>};</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>stbds_struct2<sp/>t<sp/>=<sp/>{<sp/>{<sp/>i,i*2},<sp/>i*3+1,<sp/>i*4,<sp/>i*5<sp/>};</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&amp;<sp/>1)<sp/>STBDS_ASSERT(hmgets(map3,<sp/>s.key).d<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBDS_ASSERT(hmgets(map3,<sp/>s.key).d<sp/>==<sp/>i*5);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STBDS_ASSERT(hmgetp(map3,<sp/>t.key)<sp/>==<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1856"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1857"><highlight class="comment">This<sp/>software<sp/>is<sp/>available<sp/>under<sp/>2<sp/>licenses<sp/>--<sp/>choose<sp/>whichever<sp/>you<sp/>prefer.</highlight></codeline>
<codeline lineno="1858"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1859"><highlight class="comment">ALTERNATIVE<sp/>A<sp/>-<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="1860"><highlight class="comment">Copyright<sp/>(c)<sp/>2019<sp/>Sean<sp/>Barrett</highlight></codeline>
<codeline lineno="1861"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="1862"><highlight class="comment">this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="1863"><highlight class="comment">the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="1864"><highlight class="comment">use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="1865"><highlight class="comment">of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do</highlight></codeline>
<codeline lineno="1866"><highlight class="comment">so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="1867"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="1868"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="1869"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="1870"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="1871"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="1872"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="1873"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="1874"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="1875"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="1876"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1877"><highlight class="comment">ALTERNATIVE<sp/>B<sp/>-<sp/>Public<sp/>Domain<sp/>(www.unlicense.org)</highlight></codeline>
<codeline lineno="1878"><highlight class="comment">This<sp/>is<sp/>free<sp/>and<sp/>unencumbered<sp/>software<sp/>released<sp/>into<sp/>the<sp/>public<sp/>domain.</highlight></codeline>
<codeline lineno="1879"><highlight class="comment">Anyone<sp/>is<sp/>free<sp/>to<sp/>copy,<sp/>modify,<sp/>publish,<sp/>use,<sp/>compile,<sp/>sell,<sp/>or<sp/>distribute<sp/>this</highlight></codeline>
<codeline lineno="1880"><highlight class="comment">software,<sp/>either<sp/>in<sp/>source<sp/>code<sp/>form<sp/>or<sp/>as<sp/>a<sp/>compiled<sp/>binary,<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="1881"><highlight class="comment">commercial<sp/>or<sp/>non-commercial,<sp/>and<sp/>by<sp/>any<sp/>means.</highlight></codeline>
<codeline lineno="1882"><highlight class="comment">In<sp/>jurisdictions<sp/>that<sp/>recognize<sp/>copyright<sp/>laws,<sp/>the<sp/>author<sp/>or<sp/>authors<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="1883"><highlight class="comment">software<sp/>dedicate<sp/>any<sp/>and<sp/>all<sp/>copyright<sp/>interest<sp/>in<sp/>the<sp/>software<sp/>to<sp/>the<sp/>public</highlight></codeline>
<codeline lineno="1884"><highlight class="comment">domain.<sp/>We<sp/>make<sp/>this<sp/>dedication<sp/>for<sp/>the<sp/>benefit<sp/>of<sp/>the<sp/>public<sp/>at<sp/>large<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="1885"><highlight class="comment">the<sp/>detriment<sp/>of<sp/>our<sp/>heirs<sp/>and<sp/>successors.<sp/>We<sp/>intend<sp/>this<sp/>dedication<sp/>to<sp/>be<sp/>an</highlight></codeline>
<codeline lineno="1886"><highlight class="comment">overt<sp/>act<sp/>of<sp/>relinquishment<sp/>in<sp/>perpetuity<sp/>of<sp/>all<sp/>present<sp/>and<sp/>future<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="1887"><highlight class="comment">this<sp/>software<sp/>under<sp/>copyright<sp/>law.</highlight></codeline>
<codeline lineno="1888"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="1889"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="1890"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="1891"><highlight class="comment">AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="1892"><highlight class="comment">ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="1893"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="1894"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1895"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/stb/stb_ds.h"/>
  </compounddef>
</doxygen>
