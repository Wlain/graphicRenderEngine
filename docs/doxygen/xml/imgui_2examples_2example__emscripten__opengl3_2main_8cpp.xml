<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imgui_2examples_2example__emscripten__opengl3_2main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes refid="imgui__impl__sdl_8h" local="yes">imgui_impl_sdl.h</includes>
    <includes refid="imgui__impl__opengl3_8h" local="yes">imgui_impl_opengl3.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">emscripten.h</includes>
    <includes local="no">SDL.h</includes>
    <includes local="no">SDL_opengles2.h</includes>
    <incdepgraph>
      <node id="10">
        <label>imgui_impl_opengl3.h</label>
        <link refid="imgui__impl__opengl3_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_impl_sdl.h</label>
        <link refid="imgui__impl__sdl_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp</label>
        <link refid="imgui_2examples_2example__emscripten__opengl3_2main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h_source"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>SDL.h</label>
      </node>
      <node id="14">
        <label>SDL_opengles2.h</label>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="12">
        <label>emscripten.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="imgui_2examples_2example__emscripten__opengl3_2main_8cpp_1aec37a008f4bbe2540017d7b5a3e94065" prot="public" static="no" mutable="no">
        <type>SDL_Window *</type>
        <definition>SDL_Window* g_Window</definition>
        <argsstring></argsstring>
        <name>g_Window</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp" line="20" column="16" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui_2examples_2example__emscripten__opengl3_2main_8cpp_1a730f9e5de25a8a5ab0eb096f5eb0f882" prot="public" static="no" mutable="no">
        <type>SDL_GLContext</type>
        <definition>SDL_GLContext g_GLContext</definition>
        <argsstring></argsstring>
        <name>g_GLContext</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp" line="21" column="17" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgui_2examples_2example__emscripten__opengl3_2main_8cpp_1a5f4274067f46b3da999393f8d31a06a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void main_loop</definition>
        <argsstring>(void *)</argsstring>
        <name>main_loop</name>
        <param>
          <type>void *</type>
          <defname>arg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp" line="103" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp" bodystart="103" bodyend="175" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp" declline="24" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="imgui_2examples_2example__emscripten__opengl3_2main_8cpp_1a2c3f6775325c30275d11c6abee2db6a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int, char **)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>char **</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp" line="26" column="5" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp" bodystart="26" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Dear<sp/>ImGui:<sp/>standalone<sp/>example<sp/>application<sp/>for<sp/>Emscripten,<sp/>using<sp/>SDL2<sp/>+<sp/>OpenGL3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Emscripten<sp/>is<sp/>a<sp/>C++-to-javascript<sp/>compiler,<sp/>used<sp/>to<sp/>publish<sp/>executables<sp/>for<sp/>the<sp/>web.<sp/>See<sp/>https://emscripten.org/)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>new<sp/>to<sp/>Dear<sp/>ImGui,<sp/>read<sp/>documentation<sp/>from<sp/>the<sp/>docs/<sp/>folder<sp/>+<sp/>read<sp/>the<sp/>top<sp/>of<sp/>imgui.cpp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>online:<sp/>https://github.com/ocornut/imgui/tree/master/docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>mostly<sp/>the<sp/>same<sp/>code<sp/>as<sp/>the<sp/>SDL2<sp/>+<sp/>OpenGL3<sp/>example,<sp/>simply<sp/>with<sp/>the<sp/>modifications<sp/>needed<sp/>to<sp/>run<sp/>on<sp/>Emscripten.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>possible<sp/>to<sp/>combine<sp/>both<sp/>code<sp/>into<sp/>a<sp/>single<sp/>source<sp/>file<sp/>that<sp/>will<sp/>compile<sp/>properly<sp/>on<sp/>Desktop<sp/>and<sp/>using<sp/>Emscripten.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/ocornut/imgui/pull/2492<sp/>as<sp/>an<sp/>example<sp/>on<sp/>how<sp/>to<sp/>do<sp/>just<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui_impl_sdl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imgui_impl_opengl3.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;emscripten.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL_opengles2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Emscripten<sp/>requires<sp/>to<sp/>have<sp/>full<sp/>control<sp/>over<sp/>the<sp/>main<sp/>loop.<sp/>We&apos;re<sp/>going<sp/>to<sp/>store<sp/>our<sp/>SDL<sp/>book-keeping<sp/>variables<sp/>globally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Having<sp/>a<sp/>single<sp/>function<sp/>that<sp/>acts<sp/>as<sp/>a<sp/>loop<sp/>prevents<sp/>us<sp/>to<sp/>store<sp/>state<sp/>in<sp/>the<sp/>stack<sp/>of<sp/>said<sp/>function.<sp/>So<sp/>we<sp/>need<sp/>some<sp/>location<sp/>for<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">SDL_Window*<sp/><sp/><sp/><sp/><sp/>g_Window<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">SDL_GLContext<sp/><sp/><sp/>g_GLContext<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>clarity,<sp/>our<sp/>main<sp/>loop<sp/>code<sp/>is<sp/>declared<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>main_loop(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>SDL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SDL_Init(SDL_INIT_VIDEO<sp/>|<sp/>SDL_INIT_TIMER<sp/>|<sp/>SDL_INIT_GAMECONTROLLER)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>SDL_GetError());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>browser<sp/>using<sp/>Emscripten,<sp/>we<sp/>are<sp/>going<sp/>to<sp/>use<sp/>WebGL1<sp/>with<sp/>GL<sp/>ES2.<sp/>See<sp/>the<sp/>Makefile.<sp/>for<sp/>requirement<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>very<sp/>likely<sp/>the<sp/>generated<sp/>file<sp/>won&apos;t<sp/>work<sp/>in<sp/>many<sp/>browsers.<sp/>Firefox<sp/>is<sp/>the<sp/>only<sp/>sure<sp/>bet,<sp/>but<sp/>I<sp/>have<sp/>successfully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>this<sp/>code<sp/>on<sp/>Chrome<sp/>for<sp/>Android<sp/>for<sp/>example.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>glsl_version<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#version<sp/>100&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char*<sp/>glsl_version<sp/>=<sp/>&quot;#version<sp/>300<sp/>es&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_SetAttribute(SDL_GL_CONTEXT_FLAGS,<sp/>0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_SetAttribute(SDL_GL_CONTEXT_PROFILE_MASK,<sp/>SDL_GL_CONTEXT_PROFILE_ES);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_SetAttribute(SDL_GL_CONTEXT_MAJOR_VERSION,<sp/>2);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_SetAttribute(SDL_GL_CONTEXT_MINOR_VERSION,<sp/>0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>window<sp/>with<sp/>graphics<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER,<sp/>1);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_SetAttribute(SDL_GL_DEPTH_SIZE,<sp/>24);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_SetAttribute(SDL_GL_STENCIL_SIZE,<sp/>8);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_DisplayMode<sp/>current;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GetCurrentDisplayMode(0,<sp/>&amp;current);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_WindowFlags<sp/>window_flags<sp/>=<sp/>(SDL_WindowFlags)(SDL_WINDOW_OPENGL<sp/>|<sp/>SDL_WINDOW_RESIZABLE<sp/>|<sp/>SDL_WINDOW_ALLOW_HIGHDPI);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>g_Window<sp/>=<sp/>SDL_CreateWindow(</highlight><highlight class="stringliteral">&quot;Dear<sp/>ImGui<sp/>Emscripten<sp/>example&quot;</highlight><highlight class="normal">,<sp/>SDL_WINDOWPOS_CENTERED,<sp/>SDL_WINDOWPOS_CENTERED,<sp/>1280,<sp/>720,<sp/>window_flags);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>g_GLContext<sp/>=<sp/>SDL_GL_CreateContext(g_Window);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g_GLContext)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>WebGL<sp/>context!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_SetSwapInterval(1);<sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>vsync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>Dear<sp/>ImGui<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_CHECKVERSION();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::CreateContext();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();<sp/>(void)io;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NavEnableKeyboard;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>Keyboard<sp/>Controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NavEnableGamepad;<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Enable<sp/>Gamepad<sp/>Controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_DockingEnable;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>Docking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>an<sp/>Emscripten<sp/>build<sp/>we<sp/>are<sp/>disabling<sp/>file-system<sp/>access,<sp/>so<sp/>let&apos;s<sp/>not<sp/>attempt<sp/>to<sp/>do<sp/>a<sp/>fopen()<sp/>of<sp/>the<sp/>imgui.ini<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>manually<sp/>call<sp/>LoadIniSettingsFromMemory()<sp/>to<sp/>load<sp/>settings<sp/>from<sp/>your<sp/>own<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>io.IniFilename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>Dear<sp/>ImGui<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::StyleColorsDark();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ImGui::StyleColorsClassic();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>Platform/Renderer<sp/>backends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_InitForOpenGL(g_Window,<sp/>g_GLContext);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplOpenGL3_Init(glsl_version);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>Fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>no<sp/>fonts<sp/>are<sp/>loaded,<sp/>dear<sp/>imgui<sp/>will<sp/>use<sp/>the<sp/>default<sp/>font.<sp/>You<sp/>can<sp/>also<sp/>load<sp/>multiple<sp/>fonts<sp/>and<sp/>use<sp/>ImGui::PushFont()/PopFont()<sp/>to<sp/>select<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>AddFontFromFileTTF()<sp/>will<sp/>return<sp/>the<sp/>ImFont*<sp/>so<sp/>you<sp/>can<sp/>store<sp/>it<sp/>if<sp/>you<sp/>need<sp/>to<sp/>select<sp/>the<sp/>font<sp/>among<sp/>multiple.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>the<sp/>file<sp/>cannot<sp/>be<sp/>loaded,<sp/>the<sp/>function<sp/>will<sp/>return<sp/>NULL.<sp/>Please<sp/>handle<sp/>those<sp/>errors<sp/>in<sp/>your<sp/>application<sp/>(e.g.<sp/>use<sp/>an<sp/>assertion,<sp/>or<sp/>display<sp/>an<sp/>error<sp/>and<sp/>quit).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>The<sp/>fonts<sp/>will<sp/>be<sp/>rasterized<sp/>at<sp/>a<sp/>given<sp/>size<sp/>(w/<sp/>oversampling)<sp/>and<sp/>stored<sp/>into<sp/>a<sp/>texture<sp/>when<sp/>calling<sp/>ImFontAtlas::Build()/GetTexDataAsXXXX(),<sp/>which<sp/>ImGui_ImplXXXX_NewFrame<sp/>below<sp/>will<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Read<sp/>&apos;docs/FONTS.md&apos;<sp/>for<sp/>more<sp/>instructions<sp/>and<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Remember<sp/>that<sp/>in<sp/>C/C++<sp/>if<sp/>you<sp/>want<sp/>to<sp/>include<sp/>a<sp/>backslash<sp/>\<sp/>in<sp/>a<sp/>string<sp/>literal<sp/>you<sp/>need<sp/>to<sp/>write<sp/>a<sp/>double<sp/>backslash<sp/>\\<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Emscripten<sp/>allows<sp/>preloading<sp/>a<sp/>file<sp/>or<sp/>folder<sp/>to<sp/>be<sp/>accessible<sp/>at<sp/>runtime.<sp/>See<sp/>Makefile<sp/>for<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//io.Fonts-&gt;AddFontDefault();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_FILE_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>io.Fonts-&gt;AddFontFromFileTTF(</highlight><highlight class="stringliteral">&quot;fonts/Roboto-Medium.ttf&quot;</highlight><highlight class="normal">,<sp/>16.0f);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//io.Fonts-&gt;AddFontFromFileTTF(&quot;fonts/Cousine-Regular.ttf&quot;,<sp/>15.0f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//io.Fonts-&gt;AddFontFromFileTTF(&quot;fonts/DroidSans.ttf&quot;,<sp/>16.0f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//io.Fonts-&gt;AddFontFromFileTTF(&quot;fonts/ProggyTiny.ttf&quot;,<sp/>10.0f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ImFont*<sp/>font<sp/>=<sp/>io.Fonts-&gt;AddFontFromFileTTF(&quot;fonts/ArialUni.ttf&quot;,<sp/>18.0f,<sp/>NULL,<sp/>io.Fonts-&gt;GetGlyphRangesJapanese());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//IM_ASSERT(font<sp/>!=<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>call<sp/>won&apos;t<sp/>return,<sp/>and<sp/>will<sp/>engage<sp/>in<sp/>an<sp/>infinite<sp/>loop,<sp/>processing<sp/>events<sp/>from<sp/>the<sp/>browser,<sp/>and<sp/>dispatching<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>emscripten_set_main_loop_arg(main_loop,<sp/>NULL,<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>main_loop(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>IM_UNUSED(arg);<sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>pass<sp/>this<sp/>argument<sp/>as<sp/>the<sp/>second<sp/>parameter<sp/>of<sp/>emscripten_set_main_loop_arg(),<sp/>but<sp/>we<sp/>don&apos;t<sp/>use<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>state<sp/>(make<sp/>them<sp/>static<sp/>=<sp/>more<sp/>or<sp/>less<sp/>global)<sp/>as<sp/>a<sp/>convenience<sp/>to<sp/>keep<sp/>the<sp/>example<sp/>terse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show_demo_window<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show_another_window<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref><sp/>clear_color<sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.45f,<sp/>0.55f,<sp/>0.60f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Poll<sp/>and<sp/>handle<sp/>events<sp/>(inputs,<sp/>window<sp/>resize,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>read<sp/>the<sp/>io.WantCaptureMouse,<sp/>io.WantCaptureKeyboard<sp/>flags<sp/>to<sp/>tell<sp/>if<sp/>dear<sp/>imgui<sp/>wants<sp/>to<sp/>use<sp/>your<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>When<sp/>io.WantCaptureMouse<sp/>is<sp/>true,<sp/>do<sp/>not<sp/>dispatch<sp/>mouse<sp/>input<sp/>data<sp/>to<sp/>your<sp/>main<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>When<sp/>io.WantCaptureKeyboard<sp/>is<sp/>true,<sp/>do<sp/>not<sp/>dispatch<sp/>keyboard<sp/>input<sp/>data<sp/>to<sp/>your<sp/>main<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generally<sp/>you<sp/>may<sp/>always<sp/>pass<sp/>all<sp/>inputs<sp/>to<sp/>dear<sp/>imgui,<sp/>and<sp/>hide<sp/>them<sp/>from<sp/>your<sp/>application<sp/>based<sp/>on<sp/>those<sp/>two<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Event<sp/>event;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(SDL_PollEvent(&amp;event))</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_ProcessEvent(&amp;event);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Capture<sp/>events<sp/>here,<sp/>based<sp/>on<sp/>io.WantCaptureMouse<sp/>and<sp/>io.WantCaptureKeyboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>Dear<sp/>ImGui<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplOpenGL3_NewFrame();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_NewFrame();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::NewFrame();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Show<sp/>the<sp/>big<sp/>demo<sp/>window<sp/>(Most<sp/>of<sp/>the<sp/>sample<sp/>code<sp/>is<sp/>in<sp/>ImGui::ShowDemoWindow()!<sp/>You<sp/>can<sp/>browse<sp/>its<sp/>code<sp/>to<sp/>learn<sp/>more<sp/>about<sp/>Dear<sp/>ImGui!).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(show_demo_window)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::ShowDemoWindow(&amp;show_demo_window);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>Show<sp/>a<sp/>simple<sp/>window<sp/>that<sp/>we<sp/>create<sp/>ourselves.<sp/>We<sp/>use<sp/>a<sp/>Begin/End<sp/>pair<sp/>to<sp/>created<sp/>a<sp/>named<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Begin(</highlight><highlight class="stringliteral">&quot;Hello,<sp/>world!&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window<sp/>called<sp/>&quot;Hello,<sp/>world!&quot;<sp/>and<sp/>append<sp/>into<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>some<sp/>useful<sp/>text.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>some<sp/>text<sp/>(you<sp/>can<sp/>use<sp/>a<sp/>format<sp/>strings<sp/>too)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Checkbox(</highlight><highlight class="stringliteral">&quot;Demo<sp/>Window&quot;</highlight><highlight class="normal">,<sp/>&amp;show_demo_window);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Edit<sp/>bools<sp/>storing<sp/>our<sp/>window<sp/>open/close<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Checkbox(</highlight><highlight class="stringliteral">&quot;Another<sp/>Window&quot;</highlight><highlight class="normal">,<sp/>&amp;show_another_window);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::SliderFloat(</highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">,<sp/>&amp;f,<sp/>0.0f,<sp/>1.0f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Edit<sp/>1<sp/>float<sp/>using<sp/>a<sp/>slider<sp/>from<sp/>0.0f<sp/>to<sp/>1.0f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::ColorEdit3(</highlight><highlight class="stringliteral">&quot;clear<sp/>color&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)&amp;clear_color);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Edit<sp/>3<sp/>floats<sp/>representing<sp/>a<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::Button(</highlight><highlight class="stringliteral">&quot;Button&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buttons<sp/>return<sp/>true<sp/>when<sp/>clicked<sp/>(most<sp/>widgets<sp/>return<sp/>true<sp/>when<sp/>edited/activated)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::SameLine();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(</highlight><highlight class="stringliteral">&quot;counter<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>counter);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(</highlight><highlight class="stringliteral">&quot;Application<sp/>average<sp/>%.3f<sp/>ms/frame<sp/>(%.1f<sp/>FPS)&quot;</highlight><highlight class="normal">,<sp/>1000.0f<sp/>/<sp/>ImGui::GetIO().Framerate,<sp/>ImGui::GetIO().Framerate);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::End();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>Show<sp/>another<sp/>simple<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(show_another_window)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Begin(</highlight><highlight class="stringliteral">&quot;Another<sp/>Window&quot;</highlight><highlight class="normal">,<sp/>&amp;show_another_window);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>a<sp/>pointer<sp/>to<sp/>our<sp/>bool<sp/>variable<sp/>(the<sp/>window<sp/>will<sp/>have<sp/>a<sp/>closing<sp/>button<sp/>that<sp/>will<sp/>clear<sp/>the<sp/>bool<sp/>when<sp/>clicked)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(</highlight><highlight class="stringliteral">&quot;Hello<sp/>from<sp/>another<sp/>window!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::Button(</highlight><highlight class="stringliteral">&quot;Close<sp/>Me&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>show_another_window<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::End();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::Render();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_MakeCurrent(g_Window,<sp/>g_GLContext);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>glViewport(0,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)io.DisplaySize.x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)io.DisplaySize.y);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>glClearColor(clear_color.x<sp/>*<sp/>clear_color.w,<sp/>clear_color.y<sp/>*<sp/>clear_color.w,<sp/>clear_color.z<sp/>*<sp/>clear_color.w,<sp/>clear_color.w);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplOpenGL3_RenderDrawData(ImGui::GetDrawData());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GL_SwapWindow(g_Window);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/imgui/examples/example_emscripten_opengl3/main.cpp"/>
  </compounddef>
</doxygen>
