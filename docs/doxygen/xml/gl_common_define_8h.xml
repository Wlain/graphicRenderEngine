<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="gl_common_define_8h" kind="file" language="C++">
    <compoundname>glCommonDefine.h</compoundname>
    <includes refid="common_macro_8h" local="yes">commonMacro.h</includes>
    <includes local="no">GL/glew.h</includes>
    <includes local="no">GLFW/glfw3.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includedby refid="camera_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/camera.cpp</includedby>
    <includedby refid="framebuffer_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/framebuffer.cpp</includedby>
    <includedby refid="glfw_renderer_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/glfwRenderer.cpp</includedby>
    <includedby refid="glfw_renderer_8h" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/glfwRenderer.h</includedby>
    <includedby refid="inspector_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/inspector.cpp</includedby>
    <includedby refid="material_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/material.cpp</includedby>
    <includedby refid="mesh_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/mesh.cpp</includedby>
    <includedby refid="mesh_8h" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/mesh.h</includedby>
    <includedby refid="render_pass_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderPass.cpp</includedby>
    <includedby refid="renderer_8h" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderer.h</includedby>
    <includedby refid="shader_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/shader.cpp</includedby>
    <includedby refid="shader_8h" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/shader.h</includedby>
    <includedby refid="texture_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/texture.cpp</includedby>
    <includedby refid="uniform_set_8cpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/uniformSet.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>commonMacro.h</label>
        <link refid="common_macro_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h</label>
        <link refid="gl_common_define_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>singleton.h</label>
        <link refid="singleton_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>GL/glew.h</label>
      </node>
      <node id="13">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="9">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>cstdio</label>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="8">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="11">
        <label>thread</label>
      </node>
      <node id="5">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/camera.cpp</label>
        <link refid="camera_8cpp_source"/>
      </node>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/framebuffer.cpp</label>
        <link refid="framebuffer_8cpp_source"/>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/glfwRenderer.cpp</label>
        <link refid="glfw_renderer_8cpp_source"/>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/glfwRenderer.h</label>
        <link refid="glfw_renderer_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/inspector.cpp</label>
        <link refid="inspector_8cpp_source"/>
      </node>
      <node id="7">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/material.cpp</label>
        <link refid="material_8cpp_source"/>
      </node>
      <node id="19">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/material.h</label>
        <link refid="material_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/mesh.cpp</label>
        <link refid="mesh_8cpp_source"/>
      </node>
      <node id="9">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/mesh.h</label>
        <link refid="mesh_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/modelImporter.cpp</label>
        <link refid="model_importer_8cpp_source"/>
      </node>
      <node id="20">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/modelImporter.h</label>
        <link refid="model_importer_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/particleEmitter.cpp</label>
        <link refid="particle_emitter_8cpp_source"/>
      </node>
      <node id="12">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/particleEmitter.h</label>
        <link refid="particle_emitter_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderPass.cpp</label>
        <link refid="render_pass_8cpp_source"/>
      </node>
      <node id="11">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderPass.h</label>
        <link refid="render_pass_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderer.cpp</label>
        <link refid="renderer_8cpp_source"/>
      </node>
      <node id="15">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/renderer.h</label>
        <link refid="renderer_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/shader.cpp</label>
        <link refid="shader_8cpp_source"/>
      </node>
      <node id="18">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/shader.h</label>
        <link refid="shader_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/skybox.cpp</label>
        <link refid="skybox_8cpp_source"/>
      </node>
      <node id="23">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteAtlas.cpp</label>
        <link refid="sprite_atlas_8cpp_source"/>
      </node>
      <node id="22">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteBatch.cpp</label>
        <link refid="sprite_batch_8cpp_source"/>
      </node>
      <node id="25">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/spriteBatch.h</label>
        <link refid="sprite_batch_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/texture.cpp</label>
        <link refid="texture_8cpp_source"/>
      </node>
      <node id="26">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/core/uniformSet.cpp</label>
        <link refid="uniform_set_8cpp_source"/>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h</label>
        <link refid="gl_common_define_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="gl_common_define_8h_1ae3bef579a9be7dc15d5915a356044aa3" prot="public" static="no">
        <name>CHECK_GL</name>
        <param><defname>x</defname></param>
        <initializer>    do                              \
    {                               \
        (x);                        \
        checkGlError(TO_STRING(x)); \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h" line="16" column="9" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gl_common_define_8h_1ac54a596fc0d3e58aa0ad694d9f676cce" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void checkGlError</definition>
        <argsstring>(std::string_view msg={}) noexcept</argsstring>
        <name>checkGlError</name>
        <param>
          <type>std::string_view</type>
          <declname>msg</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h" line="24" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h" bodystart="24" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="gl_common_define_8h_1adede5e3282e562ffeacd50e55f68d980" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hasExtension</definition>
        <argsstring>(std::string_view extensionName)</argsstring>
        <name>hasExtension</name>
        <param>
          <type>std::string_view</type>
          <declname>extensionName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h" line="53" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h" bodystart="53" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="gl_common_define_8h_1ac0c279e59aeb7d77483ae0b4e7cd8ef7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; listExtension</definition>
        <argsstring>()</argsstring>
        <name>listExtension</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h" line="69" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h" bodystart="69" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="gl_common_define_8h_1a7d22a59aca6b221c4409ceccdebbf48e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hasSRGB</definition>
        <argsstring>()</argsstring>
        <name>hasSRGB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h" line="83" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h" bodystart="83" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>william<sp/>on<sp/>2022/5/24.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICRENDERENGINE_GLCOMMONDEFINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRAPHICRENDERENGINE_GLCOMMONDEFINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;commonMacro.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>GLFW_INCLUDE_GLCOREARB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GL/glew.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GLFW/glfw3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_GL(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkGlError(TO_STRING(x));<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>internal<sp/>debugging<sp/>of<sp/>gl<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkGlError(std::string_view<sp/>msg<sp/>=<sp/>{})<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(GLenum<sp/>err;<sp/>(err<sp/>=<sp/>glGetError())<sp/>!=<sp/>GL_NO_ERROR;)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>GL_NONE)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!msg.empty())<sp/>LOG_ERROR(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(err)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INVALID_ENUM:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR(</highlight><highlight class="stringliteral">&quot;GL_INVALID_ENUM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INVALID_VALUE:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR(</highlight><highlight class="stringliteral">&quot;GL_INVALID_VALUE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INVALID_OPERATION:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR(</highlight><highlight class="stringliteral">&quot;GL_INVALID_OPERATION&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_OUT_OF_MEMORY:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR(</highlight><highlight class="stringliteral">&quot;GL_OUT_OF_MEMORY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INVALID_FRAMEBUFFER_OPERATION:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR(</highlight><highlight class="stringliteral">&quot;GL_INVALID_FRAMEBUFFER_OPERATION&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasExtension(std::string_view<sp/>extensionName)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::string<sp/>extension<sp/>=<sp/>(const<sp/>char*)glGetString(GL_EXTENSIONS);<sp/>crash<sp/>!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumberOfExtensions;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetIntegerv(GL_NUM_EXTENSIONS,<sp/>&amp;NumberOfExtensions);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumberOfExtensions;<sp/>i++)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>e<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)glGetStringi(GL_EXTENSIONS,<sp/>i);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extensionName<sp/>==<sp/>e)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_INFO(</highlight><highlight class="stringliteral">&quot;find<sp/>Extension:{}&quot;</highlight><highlight class="normal">,<sp/>e);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>listExtension()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::string<sp/>extension<sp/>=<sp/>(const<sp/>char*)glGetString(GL_EXTENSIONS);<sp/>crash<sp/>!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumberOfExtensions;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetIntegerv(GL_NUM_EXTENSIONS,<sp/>&amp;NumberOfExtensions);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>extensions;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumberOfExtensions;<sp/>i++)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>e<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)glGetStringi(GL_EXTENSIONS,<sp/>i);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extensions.emplace_back(e);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>extensions;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSRGB()</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>hasExtension(</highlight><highlight class="stringliteral">&quot;GL_EXT_sRGB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>GRAPHICRENDERENGINE_GLCOMMONDEFINE_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/utils/glCommonDefine.h"/>
  </compounddef>
</doxygen>
