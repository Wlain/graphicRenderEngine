<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__matrix__operation" kind="group">
    <compoundname>gtx_matrix_operation</compoundname>
    <title>GLM_GTX_matrix_operation</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtx__matrix__operation_1ga14b6d85caaf3f73ecfd112af21e43f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 2, 2, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 2, 2, T, Q &gt; glm::diagonal2x2</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v)</argsstring>
        <name>diagonal2x2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" line="34" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.inl" bodystart="8" bodyend="16" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" declline="34" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__operation_1ga2802f0ab40cb610a4db64cf94165f24d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 2, 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 2, 3, T, Q &gt; glm::diagonal2x3</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v)</argsstring>
        <name>diagonal2x3</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" line="40" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.inl" bodystart="20" bodyend="28" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" declline="40" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__operation_1gaebc7ba0b970a5f3dcf7756260345c15d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 2, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 2, 4, T, Q &gt; glm::diagonal2x4</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v)</argsstring>
        <name>diagonal2x4</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" line="46" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.inl" bodystart="32" bodyend="40" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" declline="46" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__operation_1ga39a2995444790ddf5ce4ac86f65abc2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 3, 2, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 3, 2, T, Q &gt; glm::diagonal3x2</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v)</argsstring>
        <name>diagonal3x2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" line="52" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.inl" bodystart="44" bodyend="52" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" declline="52" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__operation_1gab0776014f8dca4b93b82dd550811203b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 3, 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 3, 3, T, Q &gt; glm::diagonal3x3</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>diagonal3x3</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" line="58" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.inl" bodystart="56" bodyend="65" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" declline="58" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__operation_1ga98c12a295cafa516c7ab5ef21a7dd3b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 3, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 3, 4, T, Q &gt; glm::diagonal3x4</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>diagonal3x4</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" line="64" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.inl" bodystart="69" bodyend="78" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" declline="64" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__operation_1ga4401bb6a7ff65f5de907e899786d1876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 2, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 2, T, Q &gt; glm::diagonal4x2</definition>
        <argsstring>(vec&lt; 2, T, Q &gt; const &amp;v)</argsstring>
        <name>diagonal4x2</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" line="70" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.inl" bodystart="109" bodyend="117" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" declline="70" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__operation_1ga3aa5fe07f3d1f5273af3109ac4fd08a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 3, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 3, T, Q &gt; glm::diagonal4x3</definition>
        <argsstring>(vec&lt; 3, T, Q &gt; const &amp;v)</argsstring>
        <name>diagonal4x3</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" line="76" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.inl" bodystart="96" bodyend="105" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" declline="76" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__matrix__operation_1ga0fb3fe6e9574daed7607107ce887a5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt;</type>
        <definition>GLM_FUNC_DECL mat&lt; 4, 4, T, Q &gt; glm::diagonal4x4</definition>
        <argsstring>(vec&lt; 4, T, Q &gt; const &amp;v)</argsstring>
        <name>diagonal4x4</name>
        <param>
          <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" line="82" column="19" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.inl" bodystart="82" bodyend="92" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_operation.hpp" declline="82" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="matrix__operation_8hpp" kindref="compound">glm/gtx/matrix_operation.hpp</ref>&gt; to use the features of this extension.</para>
<para>Build diagonal matrices from vectors. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
