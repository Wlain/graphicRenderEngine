<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__compatibility" kind="group">
    <compoundname>gtx_compatibility</compoundname>
    <title>GLM_GTX_compatibility</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__gtx__compatibility_1gab65f19f5170f95a2f06d6aa6482c9405" prot="public" static="no">
        <type>bool</type>
        <definition>typedef bool glm::bool1</definition>
        <argsstring></argsstring>
        <name>bool1</name>
        <briefdescription>
<para>boolean type with 1 component. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="66" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga19e8114c90e2c81cfa87db72f4020b52" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, bool, highp &gt;</type>
        <definition>typedef vec&lt;2, bool, highp&gt; glm::bool2</definition>
        <argsstring></argsstring>
        <name>bool2</name>
        <briefdescription>
<para>boolean type with 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="67" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga9d9411e411bc3bcb7ec64593f5e0908f" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, bool, highp &gt;</type>
        <definition>typedef vec&lt;3, bool, highp&gt; glm::bool3</definition>
        <argsstring></argsstring>
        <name>bool3</name>
        <briefdescription>
<para>boolean type with 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="68" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga16892e963e3aa2aa6c826a508d2df3ce" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, bool, highp &gt;</type>
        <definition>typedef vec&lt;4, bool, highp&gt; glm::bool4</definition>
        <argsstring></argsstring>
        <name>bool4</name>
        <briefdescription>
<para>boolean type with 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="69" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga98d9d3da22aebc872ba38ce5afa0eff7" prot="public" static="no">
        <type>bool</type>
        <definition>typedef bool glm::bool1x1</definition>
        <argsstring></argsstring>
        <name>bool1x1</name>
        <briefdescription>
<para>boolean matrix with 1 x 1 component. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="71" column="13" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga1a3707855138ba2d14b7f2ccfb93f476" prot="public" static="no">
        <type>mat&lt; 2, 2, bool, highp &gt;</type>
        <definition>typedef mat&lt;2, 2, bool, highp&gt; glm::bool2x2</definition>
        <argsstring></argsstring>
        <name>bool2x2</name>
        <briefdescription>
<para>boolean matrix with 2 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="72" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gabbcc655d12f2f13ddc1917414389e8e1" prot="public" static="no">
        <type>mat&lt; 2, 3, bool, highp &gt;</type>
        <definition>typedef mat&lt;2, 3, bool, highp&gt; glm::bool2x3</definition>
        <argsstring></argsstring>
        <name>bool2x3</name>
        <briefdescription>
<para>boolean matrix with 2 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="73" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gaa709e6df01dc0ae495c0b5c901a0a181" prot="public" static="no">
        <type>mat&lt; 2, 4, bool, highp &gt;</type>
        <definition>typedef mat&lt;2, 4, bool, highp&gt; glm::bool2x4</definition>
        <argsstring></argsstring>
        <name>bool2x4</name>
        <briefdescription>
<para>boolean matrix with 2 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="74" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga24674530ea1f5c4e78ba3932dcd7504a" prot="public" static="no">
        <type>mat&lt; 3, 2, bool, highp &gt;</type>
        <definition>typedef mat&lt;3, 2, bool, highp&gt; glm::bool3x2</definition>
        <argsstring></argsstring>
        <name>bool3x2</name>
        <briefdescription>
<para>boolean matrix with 3 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="75" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gac56217a837f277fa163565d9858f66cf" prot="public" static="no">
        <type>mat&lt; 3, 3, bool, highp &gt;</type>
        <definition>typedef mat&lt;3, 3, bool, highp&gt; glm::bool3x3</definition>
        <argsstring></argsstring>
        <name>bool3x3</name>
        <briefdescription>
<para>boolean matrix with 3 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="76" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga3bec11b90dfdd4c6b37af3ae6e8f7c29" prot="public" static="no">
        <type>mat&lt; 3, 4, bool, highp &gt;</type>
        <definition>typedef mat&lt;3, 4, bool, highp&gt; glm::bool3x4</definition>
        <argsstring></argsstring>
        <name>bool3x4</name>
        <briefdescription>
<para>boolean matrix with 3 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="77" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gaad9844846cb1d1f74c4b00ddb8e582ef" prot="public" static="no">
        <type>mat&lt; 4, 2, bool, highp &gt;</type>
        <definition>typedef mat&lt;4, 2, bool, highp&gt; glm::bool4x2</definition>
        <argsstring></argsstring>
        <name>bool4x2</name>
        <briefdescription>
<para>boolean matrix with 4 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="78" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gab1a5519fb12e67d9940fa4d9b4590198" prot="public" static="no">
        <type>mat&lt; 4, 3, bool, highp &gt;</type>
        <definition>typedef mat&lt;4, 3, bool, highp&gt; glm::bool4x3</definition>
        <argsstring></argsstring>
        <name>bool4x3</name>
        <briefdescription>
<para>boolean matrix with 4 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="79" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga568a1c97a6c6f7253334ee5933a6cb77" prot="public" static="no">
        <type>mat&lt; 4, 4, bool, highp &gt;</type>
        <definition>typedef mat&lt;4, 4, bool, highp&gt; glm::bool4x4</definition>
        <argsstring></argsstring>
        <name>bool4x4</name>
        <briefdescription>
<para>boolean matrix with 4 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="80" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gaba41d7803e4b24c17656d74377b88286" prot="public" static="no">
        <type>int</type>
        <definition>typedef int glm::int1</definition>
        <argsstring></argsstring>
        <name>int1</name>
        <briefdescription>
<para>integer vector with 1 component. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="82" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga3a3a6007d7619dee4f6c425fe7ac24eb" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, int, highp &gt;</type>
        <definition>typedef vec&lt;2, int, highp&gt; glm::int2</definition>
        <argsstring></argsstring>
        <name>int2</name>
        <briefdescription>
<para>integer vector with 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="83" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga90dda63e632aac169a8796ac06ff9de2" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, int, highp &gt;</type>
        <definition>typedef vec&lt;3, int, highp&gt; glm::int3</definition>
        <argsstring></argsstring>
        <name>int3</name>
        <briefdescription>
<para>integer vector with 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="84" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga19f0c43f626567ad3ca888b8ad0d0093" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, int, highp &gt;</type>
        <definition>typedef vec&lt;4, int, highp&gt; glm::int4</definition>
        <argsstring></argsstring>
        <name>int4</name>
        <briefdescription>
<para>integer vector with 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="85" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga09016a637a3cd093c22e6188080ac750" prot="public" static="no">
        <type>int</type>
        <definition>typedef int glm::int1x1</definition>
        <argsstring></argsstring>
        <name>int1x1</name>
        <briefdescription>
<para>integer matrix with 1 component. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="87" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga8884c82366cc406dd20e00b78969d001" prot="public" static="no">
        <type>mat&lt; 2, 2, int, highp &gt;</type>
        <definition>typedef mat&lt;2, 2, int, highp&gt; glm::int2x2</definition>
        <argsstring></argsstring>
        <name>int2x2</name>
        <briefdescription>
<para>integer matrix with 2 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="88" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga13c7e3ba6d19765d8877cccf05c2e520" prot="public" static="no">
        <type>mat&lt; 2, 3, int, highp &gt;</type>
        <definition>typedef mat&lt;2, 3, int, highp&gt; glm::int2x3</definition>
        <argsstring></argsstring>
        <name>int2x3</name>
        <briefdescription>
<para>integer matrix with 2 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="89" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gab5fea62bdc861a2b0dd5ae6147b88975" prot="public" static="no">
        <type>mat&lt; 2, 4, int, highp &gt;</type>
        <definition>typedef mat&lt;2, 4, int, highp&gt; glm::int2x4</definition>
        <argsstring></argsstring>
        <name>int2x4</name>
        <briefdescription>
<para>integer matrix with 2 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="90" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga3e01f29f95467e49bdfd1b000420d13e" prot="public" static="no">
        <type>mat&lt; 3, 2, int, highp &gt;</type>
        <definition>typedef mat&lt;3, 2, int, highp&gt; glm::int3x2</definition>
        <argsstring></argsstring>
        <name>int3x2</name>
        <briefdescription>
<para>integer matrix with 3 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="91" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gac7c574e682731013783283d875602224" prot="public" static="no">
        <type>mat&lt; 3, 3, int, highp &gt;</type>
        <definition>typedef mat&lt;3, 3, int, highp&gt; glm::int3x3</definition>
        <argsstring></argsstring>
        <name>int3x3</name>
        <briefdescription>
<para>integer matrix with 3 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="92" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gaaf72af875fd64f43606aa083d2374195" prot="public" static="no">
        <type>mat&lt; 3, 4, int, highp &gt;</type>
        <definition>typedef mat&lt;3, 4, int, highp&gt; glm::int3x4</definition>
        <argsstring></argsstring>
        <name>int3x4</name>
        <briefdescription>
<para>integer matrix with 3 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="93" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga217e382844361bca6a376e72efa4b360" prot="public" static="no">
        <type>mat&lt; 4, 2, int, highp &gt;</type>
        <definition>typedef mat&lt;4, 2, int, highp&gt; glm::int4x2</definition>
        <argsstring></argsstring>
        <name>int4x2</name>
        <briefdescription>
<para>integer matrix with 4 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="94" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gadda7ab2670c41cbe997641db23ace3d2" prot="public" static="no">
        <type>mat&lt; 4, 3, int, highp &gt;</type>
        <definition>typedef mat&lt;4, 3, int, highp&gt; glm::int4x3</definition>
        <argsstring></argsstring>
        <name>int4x3</name>
        <briefdescription>
<para>integer matrix with 4 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="95" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga4f4e5fb81339df0489d802fb9d574fd7" prot="public" static="no">
        <type>mat&lt; 4, 4, int, highp &gt;</type>
        <definition>typedef mat&lt;4, 4, int, highp&gt; glm::int4x4</definition>
        <argsstring></argsstring>
        <name>int4x4</name>
        <briefdescription>
<para>integer matrix with 4 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="96" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gae0ad1b0450320cda98bbbecb56bc3167" prot="public" static="no">
        <type>float</type>
        <definition>typedef float glm::float1</definition>
        <argsstring></argsstring>
        <name>float1</name>
        <briefdescription>
<para>single-qualifier floating-point vector with 1 component. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="98" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gaba973334bf704aa382f9b0dc06b59cf8" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, float, highp &gt;</type>
        <definition>typedef vec&lt;2, float, highp&gt; glm::float2</definition>
        <argsstring></argsstring>
        <name>float2</name>
        <briefdescription>
<para>single-qualifier floating-point vector with 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="99" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga8bbd0db121b50b0904f9a23adb3bbc45" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, float, highp &gt;</type>
        <definition>typedef vec&lt;3, float, highp&gt; glm::float3</definition>
        <argsstring></argsstring>
        <name>float3</name>
        <briefdescription>
<para>single-qualifier floating-point vector with 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="100" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga5b28e8af9bfee363940882dd7d1214b5" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, float, highp &gt;</type>
        <definition>typedef vec&lt;4, float, highp&gt; glm::float4</definition>
        <argsstring></argsstring>
        <name>float4</name>
        <briefdescription>
<para>single-qualifier floating-point vector with 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="101" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gaac1faa940ac1fbb32d4a315005b578af" prot="public" static="no">
        <type>float</type>
        <definition>typedef float glm::float1x1</definition>
        <argsstring></argsstring>
        <name>float1x1</name>
        <briefdescription>
<para>single-qualifier floating-point matrix with 1 component. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="103" column="14" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gab3fb1cd56ec3f5407a4d3b9173bd88ae" prot="public" static="no">
        <type>mat&lt; 2, 2, float, highp &gt;</type>
        <definition>typedef mat&lt;2, 2, float, highp&gt; glm::float2x2</definition>
        <argsstring></argsstring>
        <name>float2x2</name>
        <briefdescription>
<para>single-qualifier floating-point matrix with 2 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="104" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga32644dc8b8177c22355e4d03b06061ac" prot="public" static="no">
        <type>mat&lt; 2, 3, float, highp &gt;</type>
        <definition>typedef mat&lt;2, 3, float, highp&gt; glm::float2x3</definition>
        <argsstring></argsstring>
        <name>float2x3</name>
        <briefdescription>
<para>single-qualifier floating-point matrix with 2 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="105" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gadd10766e2393a0e0eaf91ae4d2e85f35" prot="public" static="no">
        <type>mat&lt; 2, 4, float, highp &gt;</type>
        <definition>typedef mat&lt;2, 4, float, highp&gt; glm::float2x4</definition>
        <argsstring></argsstring>
        <name>float2x4</name>
        <briefdescription>
<para>single-qualifier floating-point matrix with 2 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="106" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga8e7b0c3f63f470d7a7913453194b0c99" prot="public" static="no">
        <type>mat&lt; 3, 2, float, highp &gt;</type>
        <definition>typedef mat&lt;3, 2, float, highp&gt; glm::float3x2</definition>
        <argsstring></argsstring>
        <name>float3x2</name>
        <briefdescription>
<para>single-qualifier floating-point matrix with 3 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="107" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga0c6bbdaa1ebe76fbb55a77d5ca0e2846" prot="public" static="no">
        <type>mat&lt; 3, 3, float, highp &gt;</type>
        <definition>typedef mat&lt;3, 3, float, highp&gt; glm::float3x3</definition>
        <argsstring></argsstring>
        <name>float3x3</name>
        <briefdescription>
<para>single-qualifier floating-point matrix with 3 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="108" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga53ae5a5af5943b6557eda4a6502e4484" prot="public" static="no">
        <type>mat&lt; 3, 4, float, highp &gt;</type>
        <definition>typedef mat&lt;3, 4, float, highp&gt; glm::float3x4</definition>
        <argsstring></argsstring>
        <name>float3x4</name>
        <briefdescription>
<para>single-qualifier floating-point matrix with 3 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="109" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gac7ba369299599a807491b9e871a0184e" prot="public" static="no">
        <type>mat&lt; 4, 2, float, highp &gt;</type>
        <definition>typedef mat&lt;4, 2, float, highp&gt; glm::float4x2</definition>
        <argsstring></argsstring>
        <name>float4x2</name>
        <briefdescription>
<para>single-qualifier floating-point matrix with 4 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="110" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga656a2d21cf92696b10063da4f431eecd" prot="public" static="no">
        <type>mat&lt; 4, 3, float, highp &gt;</type>
        <definition>typedef mat&lt;4, 3, float, highp&gt; glm::float4x3</definition>
        <argsstring></argsstring>
        <name>float4x3</name>
        <briefdescription>
<para>single-qualifier floating-point matrix with 4 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="111" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga32ecd052006dea588730d2a077c5896c" prot="public" static="no">
        <type>mat&lt; 4, 4, float, highp &gt;</type>
        <definition>typedef mat&lt;4, 4, float, highp&gt; glm::float4x4</definition>
        <argsstring></argsstring>
        <name>float4x4</name>
        <briefdescription>
<para>single-qualifier floating-point matrix with 4 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="112" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gab8b88350212cea916857cb2f49b8a29f" prot="public" static="no">
        <type>double</type>
        <definition>typedef double glm::double1</definition>
        <argsstring></argsstring>
        <name>double1</name>
        <briefdescription>
<para>double-qualifier floating-point vector with 1 component. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="114" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gaadf812a4d848bf77684844269e1d44eb" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, double, highp &gt;</type>
        <definition>typedef vec&lt;2, double, highp&gt; glm::double2</definition>
        <argsstring></argsstring>
        <name>double2</name>
        <briefdescription>
<para>double-qualifier floating-point vector with 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="115" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga59c2d0879cea219643aec2f75b8beee9" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, double, highp &gt;</type>
        <definition>typedef vec&lt;3, double, highp&gt; glm::double3</definition>
        <argsstring></argsstring>
        <name>double3</name>
        <briefdescription>
<para>double-qualifier floating-point vector with 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="116" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gadfb754a50db97dcefbd7a3435ad6eda4" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, double, highp &gt;</type>
        <definition>typedef vec&lt;4, double, highp&gt; glm::double4</definition>
        <argsstring></argsstring>
        <name>double4</name>
        <briefdescription>
<para>double-qualifier floating-point vector with 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="117" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga1c87d3042377335eb050a20ab0ec148a" prot="public" static="no">
        <type>double</type>
        <definition>typedef double glm::double1x1</definition>
        <argsstring></argsstring>
        <name>double1x1</name>
        <briefdescription>
<para>double-qualifier floating-point matrix with 1 component. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="119" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga38235425d2401904456ecbc342d87453" prot="public" static="no">
        <type>mat&lt; 2, 2, double, highp &gt;</type>
        <definition>typedef mat&lt;2, 2, double, highp&gt; glm::double2x2</definition>
        <argsstring></argsstring>
        <name>double2x2</name>
        <briefdescription>
<para>double-qualifier floating-point matrix with 2 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="120" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gaaf4151b4dcb70d412df4c4a1cfccd575" prot="public" static="no">
        <type>mat&lt; 2, 3, double, highp &gt;</type>
        <definition>typedef mat&lt;2, 3, double, highp&gt; glm::double2x3</definition>
        <argsstring></argsstring>
        <name>double2x3</name>
        <briefdescription>
<para>double-qualifier floating-point matrix with 2 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="121" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga64a5113afe95db296ff0593232ac772d" prot="public" static="no">
        <type>mat&lt; 2, 4, double, highp &gt;</type>
        <definition>typedef mat&lt;2, 4, double, highp&gt; glm::double2x4</definition>
        <argsstring></argsstring>
        <name>double2x4</name>
        <briefdescription>
<para>double-qualifier floating-point matrix with 2 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="122" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga92075f3b0988e062b5fcd25afb67e74c" prot="public" static="no">
        <type>mat&lt; 3, 2, double, highp &gt;</type>
        <definition>typedef mat&lt;3, 2, double, highp&gt; glm::double3x2</definition>
        <argsstring></argsstring>
        <name>double3x2</name>
        <briefdescription>
<para>double-qualifier floating-point matrix with 3 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="123" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga7cf33790969e0985a53ff01d914bf8ef" prot="public" static="no">
        <type>mat&lt; 3, 3, double, highp &gt;</type>
        <definition>typedef mat&lt;3, 3, double, highp&gt; glm::double3x3</definition>
        <argsstring></argsstring>
        <name>double3x3</name>
        <briefdescription>
<para>double-qualifier floating-point matrix with 3 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="124" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gad93d79598c615c80626e270f4357d189" prot="public" static="no">
        <type>mat&lt; 3, 4, double, highp &gt;</type>
        <definition>typedef mat&lt;3, 4, double, highp&gt; glm::double3x4</definition>
        <argsstring></argsstring>
        <name>double3x4</name>
        <briefdescription>
<para>double-qualifier floating-point matrix with 3 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="125" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga5ca0eb6627cf8829e3cab6694d1a6452" prot="public" static="no">
        <type>mat&lt; 4, 2, double, highp &gt;</type>
        <definition>typedef mat&lt;4, 2, double, highp&gt; glm::double4x2</definition>
        <argsstring></argsstring>
        <name>double4x2</name>
        <briefdescription>
<para>double-qualifier floating-point matrix with 4 x 2 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="126" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1ga2f73c8a3c9cd5198695163229f0ce754" prot="public" static="no">
        <type>mat&lt; 4, 3, double, highp &gt;</type>
        <definition>typedef mat&lt;4, 3, double, highp&gt; glm::double4x3</definition>
        <argsstring></argsstring>
        <name>double4x3</name>
        <briefdescription>
<para>double-qualifier floating-point matrix with 4 x 3 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="127" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__compatibility_1gaa0d75f4adb5cb1af3b1ba09720954306" prot="public" static="no">
        <type>mat&lt; 4, 4, double, highp &gt;</type>
        <definition>typedef mat&lt;4, 4, double, highp&gt; glm::double4x4</definition>
        <argsstring></argsstring>
        <name>double4x4</name>
        <briefdescription>
<para>double-qualifier floating-point matrix with 4 x 4 components. (From GLM_GTX_compatibility extension) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="128" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gtx__compatibility_1ga5494ba3a95ea6594c86fc75236886864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T</type>
        <definition>GLM_FUNC_QUALIFIER T glm::lerp</definition>
        <argsstring>(T x, T y, T a)</argsstring>
        <name>lerp</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="41" column="33" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1ga708e3c823b3a11f1c312882a505912fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 2, T, Q &gt; glm::lerp</definition>
        <argsstring>(const vec&lt; 2, T, Q &gt; &amp;x, const vec&lt; 2, T, Q &gt; &amp;y, T a)</argsstring>
        <name>lerp</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="42" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="42" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1ga71dffe7521b47a093536740a64f301e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 3, T, Q &gt; glm::lerp</definition>
        <argsstring>(const vec&lt; 3, T, Q &gt; &amp;x, const vec&lt; 3, T, Q &gt; &amp;y, T a)</argsstring>
        <name>lerp</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="44" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="44" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1gaa17bba33feb1ff86aac3dc013a0340f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 4, T, Q &gt; glm::lerp</definition>
        <argsstring>(const vec&lt; 4, T, Q &gt; &amp;x, const vec&lt; 4, T, Q &gt; &amp;y, T a)</argsstring>
        <name>lerp</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="45" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="45" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1ga8e8825e36ca18b7c2071a47a8bb7c5e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 2, T, Q &gt; glm::lerp</definition>
        <argsstring>(const vec&lt; 2, T, Q &gt; &amp;x, const vec&lt; 2, T, Q &gt; &amp;y, const vec&lt; 2, T, Q &gt; &amp;a)</argsstring>
        <name>lerp</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="46" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="46" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1gadff71b18ac8b6cdf4d837dd47d2a2281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 3, T, Q &gt; glm::lerp</definition>
        <argsstring>(const vec&lt; 3, T, Q &gt; &amp;x, const vec&lt; 3, T, Q &gt; &amp;y, const vec&lt; 3, T, Q &gt; &amp;a)</argsstring>
        <name>lerp</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="47" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="47" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1gadc87fe20949b01472c2942cd4632500e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 4, T, Q &gt; glm::lerp</definition>
        <argsstring>(const vec&lt; 4, T, Q &gt; &amp;x, const vec&lt; 4, T, Q &gt; &amp;y, const vec&lt; 4, T, Q &gt; &amp;a)</argsstring>
        <name>lerp</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="48" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="48" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1ga0fd09e616d122bc2ed9726682ffd44b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T</type>
        <definition>GLM_FUNC_QUALIFIER T glm::saturate</definition>
        <argsstring>(T x)</argsstring>
        <name>saturate</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="50" column="35" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="50" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1gaea58b11db77ded09ce6926ea5a0dbb80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 2, T, Q &gt; glm::saturate</definition>
        <argsstring>(const vec&lt; 2, T, Q &gt; &amp;x)</argsstring>
        <name>saturate</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="51" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="51" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1ga6256c2f699a6cf2d8912e637b333318a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 3, T, Q &gt; glm::saturate</definition>
        <argsstring>(const vec&lt; 3, T, Q &gt; &amp;x)</argsstring>
        <name>saturate</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="52" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="52" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1gadc07371ed8d58b79f32191e7b0ebb17c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 4, T, Q &gt; glm::saturate</definition>
        <argsstring>(const vec&lt; 4, T, Q &gt; &amp;x)</argsstring>
        <name>saturate</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="53" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="53" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1gac63011205bf6d0be82589dc56dd26708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER T</type>
        <definition>GLM_FUNC_QUALIFIER T glm::atan2</definition>
        <argsstring>(T x, T y)</argsstring>
        <name>atan2</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Arc tangent. Returns an angle whose tangent is y/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="55" column="35" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="55" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1ga3ab590fdd6c02c191c15aaa9e14c379a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 2, T, Q &gt; glm::atan2</definition>
        <argsstring>(const vec&lt; 2, T, Q &gt; &amp;x, const vec&lt; 2, T, Q &gt; &amp;y)</argsstring>
        <name>atan2</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Arc tangent. Returns an angle whose tangent is y/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="56" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="56" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1gacf0f911948630c85bbe3b9fbc3f01436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 3, T, Q &gt; glm::atan2</definition>
        <argsstring>(const vec&lt; 3, T, Q &gt; &amp;x, const vec&lt; 3, T, Q &gt; &amp;y)</argsstring>
        <name>atan2</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Arc tangent. Returns an angle whose tangent is y/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="57" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="57" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1gafb58675916a044cea99ba524a265d208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_QUALIFIER <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt;</type>
        <definition>GLM_FUNC_QUALIFIER vec&lt; 4, T, Q &gt; glm::atan2</definition>
        <argsstring>(const vec&lt; 4, T, Q &gt; &amp;x, const vec&lt; 4, T, Q &gt; &amp;y)</argsstring>
        <name>atan2</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Arc tangent. Returns an angle whose tangent is y/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="58" column="37" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" bodystart="58" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1gaf4b04dcd3526996d68c1bfe17bfc8657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename genType</type>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL bool</type>
        <definition>GLM_FUNC_DECL bool glm::isfinite</definition>
        <argsstring>(genType const &amp;x)</argsstring>
        <name>isfinite</name>
        <param>
          <type>genType const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Test whether or not a scalar or each vector component is a finite value. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="60" column="31" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.inl" bodystart="10" bodyend="25" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" declline="60" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1ga8cf0b192821187588cae9cb40f93fe05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 1, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 1, bool, Q &gt; glm::isfinite</definition>
        <argsstring>(const vec&lt; 1, T, Q &gt; &amp;x)</argsstring>
        <name>isfinite</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 1, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Test whether or not a scalar or each vector component is a finite value. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="61" column="32" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.inl" bodystart="28" bodyend="33" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" declline="61" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1ga1870a1f6872bfd5aa82f2281ea9e547c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 2, bool, Q &gt; glm::isfinite</definition>
        <argsstring>(const vec&lt; 2, T, Q &gt; &amp;x)</argsstring>
        <name>isfinite</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 2, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Test whether or not a scalar or each vector component is a finite value. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="62" column="32" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.inl" bodystart="36" bodyend="42" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" declline="62" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1ga5d1dfa1645b4eec47627b69f30594998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 3, bool, Q &gt; glm::isfinite</definition>
        <argsstring>(const vec&lt; 3, T, Q &gt; &amp;x)</argsstring>
        <name>isfinite</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 3, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Test whether or not a scalar or each vector component is a finite value. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="63" column="32" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.inl" bodystart="45" bodyend="52" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" declline="63" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="group__gtx__compatibility_1gafbee9c67dd32e68491786ae085927b48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>qualifier</type>
            <declname>Q</declname>
            <defname>Q</defname>
          </param>
        </templateparamlist>
        <type>GLM_FUNC_DECL <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, bool, Q &gt;</type>
        <definition>GLM_FUNC_DECL vec&lt; 4, bool, Q &gt; glm::isfinite</definition>
        <argsstring>(const vec&lt; 4, T, Q &gt; &amp;x)</argsstring>
        <name>isfinite</name>
        <param>
          <type>const <ref refid="structvec" kindref="compound">vec</ref>&lt; 4, T, Q &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Test whether or not a scalar or each vector component is a finite value. (From GLM_GTX_compatibility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" line="64" column="32" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.inl" bodystart="55" bodyend="63" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/compatibility.hpp" declline="64" declcolumn="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="compatibility_8hpp" kindref="compound">glm/gtx/compatibility.hpp</ref>&gt; to use the features of this extension.</para>
<para>Provide functions to increase the compatibility with Cg and HLSL languages </para>
    </detaileddescription>
  </compounddef>
</doxygen>
