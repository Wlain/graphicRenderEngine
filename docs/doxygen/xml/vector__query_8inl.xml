<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="vector__query_8inl" kind="file" language="C++">
    <compoundname>vector_query.inl</compoundname>
    <includes local="no">cassert</includes>
    <includedby refid="vector__query_8hpp" local="yes">/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_query.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_query.inl</label>
        <link refid="vector__query_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/intersect.hpp</label>
        <link refid="intersect_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/matrix_query.hpp</label>
        <link refid="matrix__query_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_query.hpp</label>
        <link refid="vector__query_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_query.inl</label>
        <link refid="vector__query_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_intersect.cpp</label>
        <link refid="gtx__intersect_8cpp_source"/>
      </node>
      <node id="6">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_matrix_query.cpp</label>
        <link refid="gtx__matrix__query_8cpp_source"/>
      </node>
      <node id="7">
        <label>/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/test/gtx/gtx_vector_query.cpp</label>
        <link refid="gtx__vector__query_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structglm_1_1detail_1_1compute__are_collinear" prot="public">glm::detail::compute_areCollinear</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__are_collinear_3_012_00_01_t_00_01_q_01_4" prot="public">glm::detail::compute_areCollinear&lt; 2, T, Q &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__are_collinear_3_013_00_01_t_00_01_q_01_4" prot="public">glm::detail::compute_areCollinear&lt; 3, T, Q &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__are_collinear_3_014_00_01_t_00_01_q_01_4" prot="public">glm::detail::compute_areCollinear&lt; 4, T, Q &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__is_comp_null" prot="public">glm::detail::compute_isCompNull</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__is_comp_null_3_012_00_01_t_00_01_q_01_4" prot="public">glm::detail::compute_isCompNull&lt; 2, T, Q &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__is_comp_null_3_013_00_01_t_00_01_q_01_4" prot="public">glm::detail::compute_isCompNull&lt; 3, T, Q &gt;</innerclass>
    <innerclass refid="structglm_1_1detail_1_1compute__is_comp_null_3_014_00_01_t_00_01_q_01_4" prot="public">glm::detail::compute_isCompNull&lt; 4, T, Q &gt;</innerclass>
    <innernamespace refid="namespaceglm">glm</innernamespace>
    <innernamespace refid="namespaceglm_1_1detail">glm::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="group__gtx__vector__query" kindref="compound">GLM_GTX_vector_query</ref> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">glm{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="10" refid="structglm_1_1detail_1_1compute__are_collinear" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__are_collinear" kindref="compound">compute_areCollinear</ref>{};</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="13" refid="structglm_1_1detail_1_1compute__are_collinear_3_012_00_01_t_00_01_q_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__are_collinear" kindref="compound">compute_areCollinear</ref>&lt;2,<sp/>T,<sp/>Q&gt;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>call(<ref refid="structglm_1_1vec_3_012_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;2, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v0,<sp/><ref refid="structglm_1_1vec_3_012_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;2, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v1,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length(<ref refid="group__core__func__geometric_1gaa9583340130a6b700eced5b100c5ccaa" kindref="member">cross</ref>(<ref refid="structglm_1_1vec_3_013_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;3, T, Q&gt;</ref>(v0,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0)),<sp/><ref refid="structglm_1_1vec_3_013_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;3, T, Q&gt;</ref>(v1,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0))))<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="22" refid="structglm_1_1detail_1_1compute__are_collinear_3_013_00_01_t_00_01_q_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__are_collinear" kindref="compound">compute_areCollinear</ref>&lt;3,<sp/>T,<sp/>Q&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>call(<ref refid="structglm_1_1vec_3_013_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;3, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v0,<sp/><ref refid="structglm_1_1vec_3_013_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;3, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v1,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length(<ref refid="group__core__func__geometric_1gaa9583340130a6b700eced5b100c5ccaa" kindref="member">cross</ref>(v0,<sp/>v1))<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="31" refid="structglm_1_1detail_1_1compute__are_collinear_3_014_00_01_t_00_01_q_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__are_collinear" kindref="compound">compute_areCollinear</ref>&lt;4,<sp/>T,<sp/>Q&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>call(<ref refid="structglm_1_1vec_3_014_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;4, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v0,<sp/><ref refid="structglm_1_1vec_3_014_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;4, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v1,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length(<ref refid="group__core__func__geometric_1gaa9583340130a6b700eced5b100c5ccaa" kindref="member">cross</ref>(<ref refid="structglm_1_1vec_3_013_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;3, T, Q&gt;</ref>(v0),<sp/><ref refid="structglm_1_1vec_3_013_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;3, T, Q&gt;</ref>(v1)))<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="40" refid="structglm_1_1detail_1_1compute__is_comp_null" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__is_comp_null" kindref="compound">compute_isCompNull</ref>{};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="43" refid="structglm_1_1detail_1_1compute__is_comp_null_3_012_00_01_t_00_01_q_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__is_comp_null" kindref="compound">compute_isCompNull</ref>&lt;2,<sp/>T,<sp/>Q&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;2, bool, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec_3_012_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;2, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;2, bool, Q&gt;</ref>(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.x)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.y)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="54" refid="structglm_1_1detail_1_1compute__is_comp_null_3_013_00_01_t_00_01_q_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__is_comp_null" kindref="compound">compute_isCompNull</ref>&lt;3,<sp/>T,<sp/>Q&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;3, bool, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec_3_013_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;3, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;3, bool, Q&gt;</ref>(</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.x)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.y)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.z)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="66" refid="structglm_1_1detail_1_1compute__is_comp_null_3_014_00_01_t_00_01_q_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structglm_1_1detail_1_1compute__is_comp_null" kindref="compound">compute_isCompNull</ref>&lt;4,<sp/>T,<sp/>Q&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;4, bool, Q&gt;</ref><sp/>call(<ref refid="structglm_1_1vec_3_014_00_01_t_00_01_q_01_4" kindref="compound">vec&lt;4, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;4, bool, Q&gt;</ref>(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.x)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.y)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.z)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.w)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="81" refid="group__gtx__vector__query_1ga13da4a787a2ff70e95d561fb19ff91b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gtx__vector__query_1ga13da4a787a2ff70e95d561fb19ff91b4" kindref="member">areCollinear</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v0,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v1,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_iec559,<sp/></highlight><highlight class="stringliteral">&quot;&apos;areCollinear&apos;<sp/>only<sp/>accept<sp/>floating-point<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1compute__are_collinear" kindref="compound">detail::compute_areCollinear&lt;L, T, Q&gt;::call</ref>(v0,<sp/>v1,<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="89" refid="group__gtx__vector__query_1gac7b95b3f798e3c293262b2bdaad47c57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gtx__vector__query_1gac7b95b3f798e3c293262b2bdaad47c57" kindref="member">areOrthogonal</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v0,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v1,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_iec559,<sp/></highlight><highlight class="stringliteral">&quot;&apos;areOrthogonal&apos;<sp/>only<sp/>accept<sp/>floating-point<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(dot(v0,<sp/>v1))<sp/>&lt;=<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">max</ref>(</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length(v0))<sp/>*<sp/><ref refid="group__core__func__common_1ga98caa7f95a94c86a86ebce893a45326c" kindref="member">max</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1),<sp/>length(v1))<sp/>*<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="99" refid="group__gtx__vector__query_1gac3c974f459fd75453134fad7ae89a39e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gtx__vector__query_1gac3c974f459fd75453134fad7ae89a39e" kindref="member">isNormalized</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_iec559,<sp/></highlight><highlight class="stringliteral">&quot;&apos;isNormalized&apos;<sp/>only<sp/>accept<sp/>floating-point<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(length(v)<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1))<sp/>&lt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(2)<sp/>*<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="107" refid="group__gtx__vector__query_1gab4a3637dbcb4bb42dc55caea7a1e0495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gtx__vector__query_1gab4a3637dbcb4bb42dc55caea7a1e0495" kindref="member">isNull</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_iec559,<sp/></highlight><highlight class="stringliteral">&quot;&apos;isNull&apos;<sp/>only<sp/>accept<sp/>floating-point<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length(v)<sp/>&lt;=<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="115" refid="group__gtx__vector__query_1gaeb0122462e1f1396b28fed4c78ada959" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, bool, Q&gt;</ref><sp/><ref refid="group__gtx__vector__query_1gaeb0122462e1f1396b28fed4c78ada959" kindref="member">isCompNull</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLM_STATIC_ASSERT(std::numeric_limits&lt;T&gt;::is_iec559,<sp/></highlight><highlight class="stringliteral">&quot;&apos;isCompNull&apos;<sp/>only<sp/>accept<sp/>floating-point<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structglm_1_1detail_1_1compute__is_comp_null" kindref="compound">detail::compute_isCompNull&lt;L, T, Q&gt;::call</ref>(v,<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structvec" kindref="compound">vec&lt;2, bool, Q&gt;</ref><sp/>isCompNull(<ref refid="structvec" kindref="compound">vec&lt;2, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;2, bool, Q&gt;</ref>(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.x)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.y)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structvec" kindref="compound">vec&lt;3, bool, Q&gt;</ref><sp/><ref refid="group__gtx__vector__query_1gaeb0122462e1f1396b28fed4c78ada959" kindref="member">isCompNull</ref>(<ref refid="structvec" kindref="compound">vec&lt;3, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;3, bool, Q&gt;</ref>(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.x)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.y)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.z)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/><ref refid="structvec" kindref="compound">vec&lt;4, bool, Q&gt;</ref><sp/><ref refid="group__gtx__vector__query_1gaeb0122462e1f1396b28fed4c78ada959" kindref="member">isCompNull</ref>(<ref refid="structvec" kindref="compound">vec&lt;4, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structvec" kindref="compound">vec&lt;4, bool, Q&gt;</ref>(</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.x)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.y)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.z)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(v.w)<sp/>&lt;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;length_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>qualifier<sp/>Q&gt;</highlight></codeline>
<codeline lineno="150" refid="group__gtx__vector__query_1ga1b091c3d7f9ee3b0708311c001c293e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GLM_FUNC_QUALIFIER<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gtx__vector__query_1ga1b091c3d7f9ee3b0708311c001c293e3" kindref="member">areOrthonormal</ref>(<ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v0,<sp/><ref refid="structglm_1_1vec" kindref="compound">vec&lt;L, T, Q&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v1,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gtx__vector__query_1gac3c974f459fd75453134fad7ae89a39e" kindref="member">isNormalized</ref>(v0,<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)<sp/>&amp;&amp;<sp/><ref refid="group__gtx__vector__query_1gac3c974f459fd75453134fad7ae89a39e" kindref="member">isNormalized</ref>(v1,<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="group__core__func__common_1ga693d77696ff36572a0da79efec965acd" kindref="member">abs</ref>(dot(v0,<sp/>v1))<sp/>&lt;=<sp/><ref refid="group__gtc__constants_1ga2a1e57fc5592b69cfae84174cbfc9429" kindref="member">epsilon</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>glm</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/vector_query.inl"/>
  </compounddef>
</doxygen>
