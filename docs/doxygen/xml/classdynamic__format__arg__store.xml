<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classdynamic__format__arg__store" kind="class" language="C++" prot="public">
    <compoundname>dynamic_format_arg_store</compoundname>
    <includes refid="args_8h" local="no">args.h</includes>
    <innerclass refid="structdynamic__format__arg__store_1_1need__copy" prot="private">dynamic_format_arg_store::need_copy</innerclass>
    <templateparamlist>
      <param>
        <type>typename Context</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classdynamic__format__arg__store_1a2997fb5c2d4ac7205672e7afe550f9c1" prot="private" static="no">
        <type>typename Context::char_type</type>
        <definition>using dynamic_format_arg_store&lt; Context &gt;::char_type =  typename Context::char_type</definition>
        <argsstring></argsstring>
        <name>char_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="81" column="3" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdynamic__format__arg__store_1a5f96b19d349860ab76908fbce9680d71" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>conditional_t&lt; detail::is_string&lt; T &gt;::<ref refid="classvalue" kindref="compound">value</ref> &amp;&amp;!has_formatter&lt; T, Context &gt;::<ref refid="classvalue" kindref="compound">value</ref> &amp;&amp;!<ref refid="structdetail_1_1is__reference__wrapper" kindref="compound">detail::is_reference_wrapper</ref>&lt; T &gt;::<ref refid="classvalue" kindref="compound">value</ref>, std::basic_string&lt; char_type &gt;, T &gt;</type>
        <definition>using dynamic_format_arg_store&lt; Context &gt;::stored_type =  conditional_t&lt;detail::is_string&lt;T&gt;::value &amp;&amp; !has_formatter&lt;T, Context&gt;::value &amp;&amp; !detail::is_reference_wrapper&lt;T&gt;::value, std::basic_string&lt;char_type&gt;, T&gt;</definition>
        <argsstring></argsstring>
        <name>stored_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="98" column="3" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdynamic__format__arg__store_1a945374d17adbecffe69386a0c098b95a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref>&lt; Context &gt; &gt;</type>
        <definition>std::vector&lt;basic_format_arg&lt;Context&gt; &gt; dynamic_format_arg_store&lt; Context &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="104" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdynamic__format__arg__store_1afcc3f9a3361e1f7a84c6deeb0830a26c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; detail::named_arg_info&lt; char_type &gt; &gt;</type>
        <definition>std::vector&lt;detail::named_arg_info&lt;char_type&gt; &gt; dynamic_format_arg_store&lt; Context &gt;::named_info_</definition>
        <argsstring></argsstring>
        <name>named_info_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="105" column="15" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdynamic__format__arg__store_1ad5a82849fb8ab4f8618d94f19a990457" prot="private" static="no" mutable="no">
        <type><ref refid="classdetail_1_1dynamic__arg__list" kindref="compound">detail::dynamic_arg_list</ref></type>
        <definition>detail::dynamic_arg_list dynamic_format_arg_store&lt; Context &gt;::dynamic_args_</definition>
        <argsstring></argsstring>
        <name>dynamic_args_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="109" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdynamic__format__arg__store_1ab8e9e33cc7b78829001a86ef6110ebb6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class basic_format_args&lt; Context &gt;</definition>
        <argsstring></argsstring>
        <name>basic_format_args&lt; Context &gt;</name>
        <param>
          <type><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt; Context &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="109" column="28" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdynamic__format__arg__store_1a40956aef27ef510f1a68f45f3e4e0710" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long long</type>
        <definition>unsigned long long dynamic_format_arg_store&lt; Context &gt;::get_types</definition>
        <argsstring>() const</argsstring>
        <name>get_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="113" column="22" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic__format__arg__store_1a89c857698fe40e877e0c3a3c1bdb1921" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref>&lt; Context &gt; *</type>
        <definition>const basic_format_arg&lt; Context &gt; * dynamic_format_arg_store&lt; Context &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="120" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic__format__arg__store_1a3e3f7af053771a3dff451014a5024c79" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dynamic_format_arg_store&lt; Context &gt;::emplace_arg</definition>
        <argsstring>(const T &amp;arg)</argsstring>
        <name>emplace_arg</name>
        <param>
          <type>const T &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="124" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic__format__arg__store_1a013581c49dc10f6184fcc7de015957fc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dynamic_format_arg_store&lt; Context &gt;::emplace_arg</definition>
        <argsstring>(const detail::named_arg&lt; char_type, T &gt; &amp;arg)</argsstring>
        <name>emplace_arg</name>
        <param>
          <type>const detail::named_arg&lt; char_type, T &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="129" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="129" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdynamic__format__arg__store_1a48136c185f01d0d7f30a2bb20934d959" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr dynamic_format_arg_store&lt; Context &gt;::dynamic_format_arg_store</definition>
        <argsstring>()=default</argsstring>
        <name>dynamic_format_arg_store</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="146" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic__format__arg__store_1a710e994685e69fd1cd4f56d29efc0d95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dynamic_format_arg_store&lt; Context &gt;::push_back</definition>
        <argsstring>(const T &amp;arg)</argsstring>
        <name>push_back</name>
        <param>
          <type>const T &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Adds an argument into the dynamic store for later passing to a formatting function.</para>
<para>Note that custom types and string types (but not string views) are copied into the store dynamically allocating memory if necessary.</para>
<para>Example**::</para>
<para>fmt::dynamic_format_arg_store&lt;fmt::format_context&gt; store; store.push_back(42); store.push_back(&quot;abc&quot;); store.push_back(1.5f); std::string result = fmt::vformat(&quot;{} and {} and {}&quot;, store); \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="165" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="165" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic__format__arg__store_1ac58637a7965cbfeab47c2f50e923dc07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dynamic_format_arg_store&lt; Context &gt;::push_back</definition>
        <argsstring>(std::reference_wrapper&lt; T &gt; arg)</argsstring>
        <name>push_back</name>
        <param>
          <type>std::reference_wrapper&lt; T &gt;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>\rst
Adds a reference to the argument into the dynamic store for later passing to
a formatting function.

  Example**::

  fmt::dynamic_format_arg_store&lt;fmt::format_context&gt; store;
  char band[] = &quot;Rolling Stones&quot;;
  store.push_back(std::cref(band));
  band[9] = &apos;c&apos;; // Changing str affects the output.
  std::string result = fmt::vformat(&quot;{}&quot;, store);
</verbatim> result == &quot;Rolling Scones&quot; \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="187" column="20" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic__format__arg__store_1a14baaad39c59b82fdf86dc4276f7d7cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dynamic_format_arg_store&lt; Context &gt;::push_back</definition>
        <argsstring>(const detail::named_arg&lt; char_type, T &gt; &amp;arg)</argsstring>
        <name>push_back</name>
        <param>
          <type>const detail::named_arg&lt; char_type, T &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds named argument into the dynamic store for later passing to a formatting function. <computeroutput>std::reference_wrapper</computeroutput> is supported to avoid copying of the argument. The name is always copied into the store. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="200" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="200" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic__format__arg__store_1a94763fc905f02222d575f7c03161c212" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamic_format_arg_store&lt; Context &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Erase all elements from the store </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="212" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="212" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic__format__arg__store_1a9c6983c46b69775b5066f6ad748be584" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamic_format_arg_store&lt; Context &gt;::reserve</definition>
        <argsstring>(size_t new_cap, size_t new_cap_named)</argsstring>
        <name>reserve</name>
        <param>
          <type>size_t</type>
          <declname>new_cap</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_cap_named</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Reserves space to store at least <emphasis>new_cap</emphasis> arguments including new_cap_named* named arguments. \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="224" column="8" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="224" bodyend="229"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>\rst A dynamic version of <computeroutput>fmt::format_arg_store</computeroutput>. It&apos;s equipped with a storage to potentially temporary objects which lifetimes could be shorter than the format arguments object.</para>
<para>It can be implicitly converted into <computeroutput>~fmt<ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref></computeroutput> for passing into type-erased formatting functions such as <computeroutput>~fmt::vformat</computeroutput>. \endrst </para>
    </detaileddescription>
    <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" line="74" column="1" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/spdlog/include/spdlog/fmt/bundled/args.h" bodystart="79" bodyend="230"/>
    <listofallmembers>
      <member refid="classdynamic__format__arg__store_1ab8e9e33cc7b78829001a86ef6110ebb6" prot="private" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>basic_format_args&lt; Context &gt;</name></member>
      <member refid="classdynamic__format__arg__store_1a2997fb5c2d4ac7205672e7afe550f9c1" prot="private" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>char_type</name></member>
      <member refid="classdynamic__format__arg__store_1a94763fc905f02222d575f7c03161c212" prot="public" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>clear</name></member>
      <member refid="classdynamic__format__arg__store_1a89c857698fe40e877e0c3a3c1bdb1921" prot="private" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>data</name></member>
      <member refid="classdynamic__format__arg__store_1a945374d17adbecffe69386a0c098b95a" prot="private" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>data_</name></member>
      <member refid="classdynamic__format__arg__store_1ad5a82849fb8ab4f8618d94f19a990457" prot="private" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>dynamic_args_</name></member>
      <member refid="classdynamic__format__arg__store_1a48136c185f01d0d7f30a2bb20934d959" prot="public" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>dynamic_format_arg_store</name></member>
      <member refid="classdynamic__format__arg__store_1a3e3f7af053771a3dff451014a5024c79" prot="private" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>emplace_arg</name></member>
      <member refid="classdynamic__format__arg__store_1a013581c49dc10f6184fcc7de015957fc" prot="private" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>emplace_arg</name></member>
      <member refid="classdynamic__format__arg__store_1a40956aef27ef510f1a68f45f3e4e0710" prot="private" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>get_types</name></member>
      <member refid="classdynamic__format__arg__store_1afcc3f9a3361e1f7a84c6deeb0830a26c" prot="private" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>named_info_</name></member>
      <member refid="classdynamic__format__arg__store_1a710e994685e69fd1cd4f56d29efc0d95" prot="public" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>push_back</name></member>
      <member refid="classdynamic__format__arg__store_1ac58637a7965cbfeab47c2f50e923dc07" prot="public" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>push_back</name></member>
      <member refid="classdynamic__format__arg__store_1a14baaad39c59b82fdf86dc4276f7d7cc" prot="public" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>push_back</name></member>
      <member refid="classdynamic__format__arg__store_1a9c6983c46b69775b5066f6ad748be584" prot="public" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>reserve</name></member>
      <member refid="classdynamic__format__arg__store_1a5f96b19d349860ab76908fbce9680d71" prot="private" virt="non-virtual"><scope>dynamic_format_arg_store</scope><name>stored_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
