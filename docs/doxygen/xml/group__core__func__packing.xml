<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__core__func__packing" kind="group">
    <compoundname>core_func_packing</compoundname>
    <title>Floating-Point Pack and Unpack Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__core__func__packing_1ga0e2d107039fe608a209497af867b85fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER uint</type>
        <definition>GLM_FUNC_DECL uint glm::packUnorm2x16</definition>
        <argsstring>(vec2 const &amp;v)</argsstring>
        <name>packUnorm2x16</name>
        <param>
          <type>vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts each component of the normalized floating-point value v into 8- or 16-bit integer values. Then, the results are packed into the returned 32-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packUnorm2x16: round(clamp(c, 0, +1) * 65535.0)</para>
<para>The first component of the vector will be written to the least significant bits of the output; the last component will be written to the most significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packUnorm2x16.xml">GLSL packUnorm2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="10" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="10" bodyend="24" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="35" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1ga977ab172da5494e5ac63e952afacfbe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER uint</type>
        <definition>GLM_FUNC_DECL uint glm::packSnorm2x16</definition>
        <argsstring>(vec2 const &amp;v)</argsstring>
        <name>packSnorm2x16</name>
        <param>
          <type>vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts each component of the normalized floating-point value v into 8- or 16-bit integer values. Then, the results are packed into the returned 32-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packSnorm2x16: round(clamp(v, -1, +1) * 32767.0)</para>
<para>The first component of the vector will be written to the least significant bits of the output; the last component will be written to the most significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packSnorm2x16.xml">GLSL packSnorm2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="39" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="39" bodyend="53" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="48" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1gaf7d2f7341a9eeb4a436929d6f9ad08f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER uint</type>
        <definition>GLM_FUNC_DECL uint glm::packUnorm4x8</definition>
        <argsstring>(vec4 const &amp;v)</argsstring>
        <name>packUnorm4x8</name>
        <param>
          <type>vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts each component of the normalized floating-point value v into 8- or 16-bit integer values. Then, the results are packed into the returned 32-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packUnorm4x8: round(clamp(c, 0, +1) * 255.0)</para>
<para>The first component of the vector will be written to the least significant bits of the output; the last component will be written to the most significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packUnorm4x8.xml">GLSL packUnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="68" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="68" bodyend="84" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="61" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1ga85e8f17627516445026ab7a9c2e3531a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER uint</type>
        <definition>GLM_FUNC_DECL uint glm::packSnorm4x8</definition>
        <argsstring>(vec4 const &amp;v)</argsstring>
        <name>packSnorm4x8</name>
        <param>
          <type>vec4 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, converts each component of the normalized floating-point value v into 8- or 16-bit integer values. Then, the results are packed into the returned 32-bit unsigned integer.</para>
<para>The conversion for component c of v to fixed point is done as follows: packSnorm4x8: round(clamp(c, -1, +1) * 127.0)</para>
<para>The first component of the vector will be written to the least significant bits of the output; the last component will be written to the most significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packSnorm4x8.xml">GLSL packSnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="99" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="99" bodyend="115" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="74" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1ga1f66188e5d65afeb9ffba1ad971e4007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER vec2</type>
        <definition>GLM_FUNC_DECL vec2 glm::unpackUnorm2x16</definition>
        <argsstring>(uint p)</argsstring>
        <name>unpackUnorm2x16</name>
        <param>
          <type>uint</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 32-bit unsigned integer p into a pair of 16-bit unsigned integers, four 8-bit unsigned integers, or four 8-bit signed integers. Then, each component is converted to a normalized floating-point value to generate the returned two- or four-component vector.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackUnorm2x16: f / 65535.0</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackUnorm2x16.xml">GLSL unpackUnorm2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="26" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="26" bodyend="37" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="87" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1gacd8f8971a3fe28418be0d0fa1f786b38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER vec2</type>
        <definition>GLM_FUNC_DECL vec2 glm::unpackSnorm2x16</definition>
        <argsstring>(uint p)</argsstring>
        <name>unpackSnorm2x16</name>
        <param>
          <type>uint</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 32-bit unsigned integer p into a pair of 16-bit unsigned integers, four 8-bit unsigned integers, or four 8-bit signed integers. Then, each component is converted to a normalized floating-point value to generate the returned two- or four-component vector.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackSnorm2x16: clamp(f / 32767.0, -1, +1)</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackSnorm2x16.xml">GLSL unpackSnorm2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="55" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="55" bodyend="66" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="100" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1ga7f903259150b67e9466f5f8edffcd197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER vec4</type>
        <definition>GLM_FUNC_DECL vec4 glm::unpackUnorm4x8</definition>
        <argsstring>(uint p)</argsstring>
        <name>unpackUnorm4x8</name>
        <param>
          <type>uint</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 32-bit unsigned integer p into a pair of 16-bit unsigned integers, four 8-bit unsigned integers, or four 8-bit signed integers. Then, each component is converted to a normalized floating-point value to generate the returned two- or four-component vector.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackUnorm4x8: f / 255.0</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackUnorm4x8.xml">GLSL unpackUnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="86" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="86" bodyend="97" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="113" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1ga2db488646d48b7c43d3218954523fe82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER <ref refid="group__core__types_1ga5881b1b022d7fd1b7218f5916532dd02" kindref="member">glm::vec4</ref></type>
        <definition>GLM_FUNC_DECL vec4 glm::unpackSnorm4x8</definition>
        <argsstring>(uint p)</argsstring>
        <name>unpackSnorm4x8</name>
        <param>
          <type>uint</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First, unpacks a single 32-bit unsigned integer p into a pair of 16-bit unsigned integers, four 8-bit unsigned integers, or four 8-bit signed integers. Then, each component is converted to a normalized floating-point value to generate the returned two- or four-component vector.</para>
<para>The conversion for unpacked fixed-point value f to floating point is done as follows: unpackSnorm4x8: clamp(f / 127.0, -1, +1)</para>
<para>The first component of the returned vector will be extracted from the least significant bits of the input; the last component will be extracted from the most significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackSnorm4x8.xml">GLSL unpackSnorm4x8 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="117" column="30" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="117" bodyend="128" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="126" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1gaa916ca426b2bb0343ba17e3753e245c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER double</type>
        <definition>GLM_FUNC_DECL double glm::packDouble2x32</definition>
        <argsstring>(uvec2 const &amp;v)</argsstring>
        <name>packDouble2x32</name>
        <param>
          <type>uvec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a double-qualifier value obtained by packing the components of v into a 64-bit value. If an IEEE 754 Inf or NaN is created, it will not signal, and the resulting floating point value is unspecified. Otherwise, the bit- level representation of v is preserved. The first vector component specifies the 32 least significant bits; the second component specifies the 32 most significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packDouble2x32.xml">GLSL packDouble2x32 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="130" column="27" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="130" bodyend="142" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="136" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1ga5f4296dc5f12f0aa67ac05b8bb322483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER uvec2</type>
        <definition>GLM_FUNC_DECL uvec2 glm::unpackDouble2x32</definition>
        <argsstring>(double v)</argsstring>
        <name>unpackDouble2x32</name>
        <param>
          <type>double</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a two-component unsigned integer vector representation of v. The bit-level representation of v is preserved. The first component of the vector contains the 32 least significant bits of the double; the second component consists the 32 most significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackDouble2x32.xml">GLSL unpackDouble2x32 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="144" column="26" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="144" bodyend="155" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="145" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1ga20f134b07db3a3d3a38efb2617388c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER uint</type>
        <definition>GLM_FUNC_DECL uint glm::packHalf2x16</definition>
        <argsstring>(vec2 const &amp;v)</argsstring>
        <name>packHalf2x16</name>
        <param>
          <type>vec2 const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an unsigned integer obtained by converting the components of a two-component floating-point vector to the 16-bit floating-point representation found in the OpenGL Specification, and then packing these two 16- bit integers into a 32-bit unsigned integer. The first vector component specifies the 16 least-significant bits of the result; the second component specifies the 16 most-significant bits.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/packHalf2x16.xml">GLSL packHalf2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="157" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="157" bodyend="169" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="155" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__core__func__packing_1gaf59b52e6b28da9335322c4ae19b5d745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLM_FUNC_QUALIFIER vec2</type>
        <definition>GLM_FUNC_DECL vec2 glm::unpackHalf2x16</definition>
        <argsstring>(uint v)</argsstring>
        <name>unpackHalf2x16</name>
        <param>
          <type>uint</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a two-component floating-point vector with components obtained by unpacking a 32-bit unsigned integer into a pair of 16-bit values, interpreting those values as 16-bit floating-point numbers according to the OpenGL Specification, and converting them to 32-bit floating-point values. The first component of the vector is obtained from the 16 least-significant bits of v; the second component is obtained from the 16 most-significant bits of v.</para>
<para><simplesect kind="see"><para><ulink url="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackHalf2x16.xml">GLSL unpackHalf2x16 man page</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" line="171" column="25" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/detail/func_packing.inl" bodystart="171" bodyend="184" declfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/packing.hpp" declline="165" declcolumn="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="packing_8hpp" kindref="compound">glm/packing.hpp</ref>&gt; to use these core features.</para>
<para>These functions do not operate component-wise, rather as described in each case. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
