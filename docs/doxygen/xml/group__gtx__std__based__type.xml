<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gtx__std__based__type" kind="group">
    <compoundname>gtx_std_based_type</compoundname>
    <title>GLM_GTX_std_based_type</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__gtx__std__based__type_1gaf471290b8165697d088a943263fc8af1" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 1, std::size_t, defaultp &gt;</type>
        <definition>typedef vec&lt;1, std::size_t, defaultp&gt; glm::size1</definition>
        <argsstring></argsstring>
        <name>size1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector type based of one std::size_t component. <simplesect kind="see"><para>GLM_GTX_std_based_type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" line="35" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__std__based__type_1ga432937b68775c79e4556150e769c6e6b" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, std::size_t, defaultp &gt;</type>
        <definition>typedef vec&lt;2, std::size_t, defaultp&gt; glm::size2</definition>
        <argsstring></argsstring>
        <name>size2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector type based of two std::size_t components. <simplesect kind="see"><para>GLM_GTX_std_based_type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" line="39" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__std__based__type_1ga2da33d9da32b31af75f036d948b54de5" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, std::size_t, defaultp &gt;</type>
        <definition>typedef vec&lt;3, std::size_t, defaultp&gt; glm::size3</definition>
        <argsstring></argsstring>
        <name>size3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector type based of three std::size_t components. <simplesect kind="see"><para>GLM_GTX_std_based_type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" line="43" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__std__based__type_1ga6051b5077b52ff8ea48a5207d5076aa5" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, std::size_t, defaultp &gt;</type>
        <definition>typedef vec&lt;4, std::size_t, defaultp&gt; glm::size4</definition>
        <argsstring></argsstring>
        <name>size4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector type based of four std::size_t components. <simplesect kind="see"><para>GLM_GTX_std_based_type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" line="47" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__std__based__type_1ga5bf40bbca3cb66bbd7cc0c389c3c0c56" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 1, std::size_t, defaultp &gt;</type>
        <definition>typedef vec&lt;1, std::size_t, defaultp&gt; glm::size1_t</definition>
        <argsstring></argsstring>
        <name>size1_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector type based of one std::size_t component. <simplesect kind="see"><para>GLM_GTX_std_based_type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" line="51" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__std__based__type_1ga701549a040be1f2f6f661ddecde337de" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 2, std::size_t, defaultp &gt;</type>
        <definition>typedef vec&lt;2, std::size_t, defaultp&gt; glm::size2_t</definition>
        <argsstring></argsstring>
        <name>size2_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector type based of two std::size_t components. <simplesect kind="see"><para>GLM_GTX_std_based_type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" line="55" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__std__based__type_1gaf0ec088c61853e4ed8155ef66b3760a2" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 3, std::size_t, defaultp &gt;</type>
        <definition>typedef vec&lt;3, std::size_t, defaultp&gt; glm::size3_t</definition>
        <argsstring></argsstring>
        <name>size3_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector type based of three std::size_t components. <simplesect kind="see"><para>GLM_GTX_std_based_type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" line="59" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gtx__std__based__type_1ga2bb2915bb83bb9d7a2967fe20aa7d2a5" prot="public" static="no">
        <type><ref refid="structvec" kindref="compound">vec</ref>&lt; 4, std::size_t, defaultp &gt;</type>
        <definition>typedef vec&lt;4, std::size_t, defaultp&gt; glm::size4_t</definition>
        <argsstring></argsstring>
        <name>size4_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector type based of four std::size_t components. <simplesect kind="see"><para>GLM_GTX_std_based_type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" line="63" column="12" bodyfile="/Users/cwb/developer/learning/graphicRenderEngine/ceres/3rdparty/glm/glm/gtx/std_based_type.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include &lt;<ref refid="std__based__type_8hpp" kindref="compound">glm/gtx/std_based_type.hpp</ref>&gt; to use the features of this extension.</para>
<para>Adds vector types based on STL value types. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
